{"version":3,"sources":["models/generalModels/IdUrlModel.js","data/routeData.js","data/urlData.js","models/dataModels/planetDetailsModel.js","models/dataModels/heroDetailsModel.js","models/dataModels/filmDetailModel.js","models/dataModels/peoplePageDispaType.js","models/storeModels/peopleStoreModel.js","models/storeModels/userInfoStoreModel.js","actions/userInfoActions.js","models/storeModels/relationshipsStoreModel.js","helpers/cookiesHelpers.js","helpers/storageHelpers.js","helpers/httpHelpers.js","helpers/validationHelper.js","actions/peopleActions.js","actions/relationshipsActions.js","reducer/userInfoReducer.js","reducer/peopleReducer.js","reducer/relationshipsReducer.js","reducer/index.js","store/index.js","components/helpersComponents/Mocks/ParagraphMock.js","components/generaComponents/NavigationBar.js","components/generaComponents/Layout.js","components/InfoPages/PageAreNotExists.js","components/helpersComponents/Icons/IconPattern.js","components/helpersComponents/Icons/DeathStar.js","components/AuthorizePage/SingInForm.js","components/AuthorizePage/RegisterForm.js","components/AuthorizePage/index.js","components/PeoplePage/HeaderFilterInput.js","components/PeoplePage/HeaderPagination.js","components/PeoplePage/Header.js","components/PeoplePage/personCardConfig.js","components/PeoplePage/HeroInfo/HeroProperty.js","components/PeoplePage/HeroInfo/HeroInfoProperties.js","components/PeoplePage/HeroInfo/HeroHomeProperty.js","components/PeoplePage/HeroInfo/HeroFilmsProperty.js","components/PeoplePage/HeroInfo/index.js","components/PeoplePage/PersonCard.js","components/PeoplePage/Content.js","components/PeoplePage/Footer.js","components/PeoplePage/index.js","App.js","index.js"],"names":["IdUrlModel","pettern","this","urlValue","val","id","matchVal","exec","length","Number","replace","IdUrlModelPropTypes","PT","oneOfType","string","number","isRequired","url","RouteData","baseStarWarsAPIUrl","StarWarsUrlData","GET_PEOPLE","GET_PLANET","GET_FILM","StartWarsUrlGetIdRegEx","PlanetDetails","name","population","climate","PlanetDetailsPropTypes","HeroDetails","height","mass","hairColour","skinColour","eyeColour","birthYear","gender","planet","films","loaded","fromPage","resultItem","entity","birth_year","eye_color","map","x","FilmDetail","hair_color","homeworld","skin_color","shape","arrayOf","FilmDetailPropTypes","title","releaseDate","instanceOf","Date","PeoplePageDispaType","Object","freeze","list","cards","PeopleStore","timeStamp","loading","people","totalPeopleCount","observerIndex","filterName","currentPage","uploadedPages","favoriteHeroes","itemsPerPage","exFavorite","displayType","showFavoritesOnly","UserInfoStore","bool","object","oneOf","userName","offlineMode","userInfo","UserInfoActions","setUserInfo","dispatch","type","payload","setUserInfoDispatch","checkCookiesOnExists","cookie","document","localStorage","removeItem","userInfoFirebase","updateCookiesInterval","userInfoKey","setUserCookies","time","setTimeForCookies","clearInterval","setInterval","toGMTString","seconds","now","getTime","setTime","getData","urlData","postBody","a","input","getUrl","fetch","headers","Accept","method","body","JSON","stringify","response","json","data","baseUrl","param","query","URLSearchParams","toString","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserWithFirebase","email","password","validateForm","auth","createUserWithEmailAndPassword","Error","console","log","signInWithFormFirebase","signInWithEmailAndPassword","signInWithGoogleFirebase","provider","GoogleAuthProvider","signInWithPopup","signOut","favoritesHeroesKey","getFavoritesHeroesFromStorage","favoritesHeroes","getItem","parse","setFavoritesHeroesToStorage","items","setItem","validateEmail","validatePassword","PeopleActions","setPeoplePageLoadingState","state","setPeoplePageLoadingStateDispatch","setPeoplePagedisplayTypeDispatch","setPeoplePagePaginationPageDispatch","page","resetPeopleDataDispatch","clearPeopleData","getPeopleDataDispatch","count","search","getPeopleData","getState","pageStr","peopleData","newSearch","indexOf","results","new","getPeopleFavoriteData","setPeoplePageFavoritesViewModeDispatch","toggleFavoritesHeroesDispatch","setObservedItemIndex","index","setObservedItemIndexDispatch","toLowerCase","filteredItems","keys","key","filter","idsPerPage","slice","itemsToUpload","i","item","find","push","mockItem","updateHeroData","updateHeroDataDispatch","hero","RelationshipsActions","getFilmData","relationships","filmsData","release_date","model","film","warn","getPlanetData","planestsData","SET_USER_INFO","initialState","userInfoReducer","handleActions","userData","SET_PEOPLE_PAGE_LOADING_STATE","SET_PEOPLE_PAGE_DISPAY_TYPE","SET_PEOPLE_PAGE_PAGINATION_PAGE","RESET_PEOPLE_DATA","CLEAR_PEOPLE_DATA","GET_PEOPLE_DATA","UPDATE_HERO_DATA","SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE","TOGGLE_FAVORITE_HEROES","SET_OBSERVED_ITEM_INDEX","peopleReducer","newUploadedPages","Set","clearUploadedPages","pageToClear","shift","updatedPeopleList","firstUpdateIndex","newFavorites","GET_FILM_DATA","GET_PLANET_DATA","relationshipsReducer","relationshipsData","rootReducer","combineReducers","store","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","configureStore","userInfoState","peopleState","relationshipsState","ParagraphMock","width","className","style","NavigationBarConnected","connect","ownProps","actions","useState","showHelloLabel","setShowHelloLabel","useEffect","Transition","visible","animation","duration","marginBottom","fontSize","Button","animated","as","Link","to","marginLeft","Content","hidden","Icon","size","flipped","NavigationBarComponent","props","Layout","setTimeout","getUserInfoDataFromStorages","Divider","fitted","children","PureComponent","LayoutComponent","ca","split","c","charAt","substring","ex","getUserInfoFromCookie","user","getFirebaseUserInfo","setUserInfoAction","PageAreNotExist","Segment","maxWidth","margin","padding","Grid","centered","columns","Column","color","marginTop","fill","stroke","y","DeathStarIcon","IconPattern","viewBox","xmlns","r","cy","cx","d","SingInForm","setVisible","loginWithForm","loginViaGoogleForm","Form","widths","Input","icon","iconPosition","label","placeholder","content","primary","onClick","target","emailEl","querySelector","passwordEl","value","Message","maginLeft","display","background","RegisterForm","create","onSubmit","disabled","AuthPageComponent","authOffline","authOnline","additionalUserInfo","profile","pure","areOwnPropsEqual","history","cookies","temp","eqPos","substr","deleteAllCookies","signOutFirebase","showRegisterForm","setShowRegisterForm","formLoading","setFormLoading","Dimmer","active","inverted","Loader","Subheader","relaxed","stackable","divided","verticalAlign","Popup","trigger","basic","Group","corner","vertical","rel","href","withRouter","HeaderFilterInput","filterValue","setFilterValue","onChange","labelPosition","HeaderPagination","isFavorites","showFavoriteOnly","Menu","pointing","secondary","Item","PeoplePageHeader","pageName","setPeoplePagedisplayType","Field","Checkbox","slider","checked","personCardConfig","stylesConfigs","gap","userInfoMargin","horizontalGap","verticalGap","shouldRecalculateStyle","nextProps","prevState","wrapperWidth","styleConditions","recalculateStyle","top","left","cardSpace","rowUsableWidth","Math","floor","totalLeftWidth","row","HeroProperty","paddingRight","HeroInfoProperties","HeroHomeProperty","planets","HeroFilmsProperty","HeroInfo","uploadHeroAdditionalData","showFullInfo","prevProps","PersonCard","isActive","heartIconFilled","setCardActiveState","setState","setHeartIconFilled","toggleFavoriteHero","isFavorite","isObserved","onMouseUp","_","onMouseLeave","onMouseDown","onMouseEnter","e","stopPropagation","PeoplePageContent","paddingTop","paddingBottom","overflow","handleWidth","paddingLeft","PeoplePageFooter","activePage","totalPages","onPageChange","paginationConfig","ellipsisItem","Pagination","firstItem","lastItem","PeoplePage","getPaginationsItemsCount","ceil","onPaginationPageChange","getPeople","setPeoplePageFavoritesViewMode","filterByName","getFavoriteHeroes","paginatedData","paginationsCount","PeoplePageComponent","setPeoplePagedisplayTypeAction","getPeopleDataAction","clearPeopleDataAction","setObservedItemIndexAction","setPeoplePageFavoritesViewModeAction","getFilmDataAction","getPlanetDataAction","nextOwnProps","location","pathname","areStatesEqual","next","prev","App","exact","path","component","AuthPage","PeopleListPage","InnerRoute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.2d993748.chunk.js","sourcesContent":["import PT from \"prop-types\";\r\n\r\nexport class IdUrlModel {\r\n  constructor(pettern) {\r\n    this.#pattern = pettern;\r\n  }\r\n  #pattern = \"\";\r\n\r\n  get url() {\r\n    return this.urlValue;\r\n  }\r\n  set url(val) {\r\n    if (!this.id && val) {\r\n      const matchVal = this.#pattern.exec(val);\r\n      if (matchVal && matchVal.length >= 2) {\r\n        this.id = Number(matchVal[1].replace(\"/\", \"\"));\r\n      }\r\n    }\r\n    this.urlValue = val;\r\n  }\r\n}\r\n\r\nexport const IdUrlModelPropTypes = {\r\n  id: PT.oneOfType([PT.string, PT.number]).isRequired,\r\n  url: PT.string,\r\n};\r\n","export const RouteData = {\r\n  Base: \"/\",\r\n  Login: \"/login\",\r\n  People: \"/people\",\r\n  Hero: \"/hero/:id\",\r\n\r\n  NotExists: '/404'\r\n};\r\n","const baseStarWarsAPIUrl = \"https://swapi.dev/api\";\r\n\r\nexport const StarWarsUrlData = {\r\n  GET_PEOPLE: `${baseStarWarsAPIUrl}/people/`,\r\n  GET_PLANET: `${baseStarWarsAPIUrl}/planets/`,\r\n  GET_FILM: `${baseStarWarsAPIUrl}/films/`,\r\n};\r\n\r\nexport const StartWarsUrlGetIdRegEx = {\r\n  GET_PEOPLE_REGEX: /people\\/(.*)/,\r\n  GET_PLANET_REGEX: /planets\\/(.*)/,\r\n  GET_FILM_REGEX: /films\\/(.*)/,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class PlanetDetails extends IdUrlModel {\r\n  constructor(url) {\r\n    super(StartWarsUrlGetIdRegEx.GET_PLANET_REGEX);\r\n    this.url = url;\r\n  }\r\n\r\n  name = \"\";\r\n  population = 0;\r\n  climate = \"\";\r\n}\r\n\r\nexport const PlanetDetailsPropTypes ={\r\n  ...IdUrlModelPropTypes,\r\n  name: PT.string,\r\n  population: PT.number,\r\n  climate: PT.string,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport {\r\n  PlanetDetails,\r\n  FilmDetail,\r\n  FilmDetailPropTypes,\r\n  PlanetDetailsPropTypes,\r\n} from \"./\";\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class HeroDetails extends IdUrlModel {\r\n  constructor() {\r\n    super(StartWarsUrlGetIdRegEx.GET_PEOPLE_REGEX);\r\n  }\r\n  name = \"\";\r\n  height = \"\";\r\n  mass = 0;\r\n  hairColour = \"\";\r\n  skinColour = \"\";\r\n  eyeColour = \"\";\r\n  birthYear = \"\";\r\n  gender = \"\";\r\n  planet = null;\r\n  films = [];\r\n\r\n  loaded = true;\r\n\r\n  fromPage = \"\";\r\n\r\n  static new(resultItem) {\r\n    const entity = new HeroDetails();\r\n\r\n    if (\"birth_year\" in resultItem) entity.birthYear = resultItem.birth_year;\r\n    if (\"eye_color\" in resultItem) entity.eyeColour = resultItem.eye_color;\r\n    if (\"films\" in resultItem)\r\n      entity.films = (resultItem.films || []).map((x) => new FilmDetail(x));\r\n    if (\"gender\" in resultItem) entity.gender = resultItem.gender;\r\n    if (\"hair_color\" in resultItem) entity.hairColour = resultItem.hair_color;\r\n    if (\"height\" in resultItem) entity.height = resultItem.height;\r\n    if (\"homeworld\" in resultItem)\r\n      entity.planet = new PlanetDetails(resultItem.homeworld);\r\n    if (\"mass\" in resultItem) entity.mass = resultItem.mass;\r\n    if (\"name\" in resultItem) entity.name = resultItem.name;\r\n    if (\"skin_color\" in resultItem) entity.skinColour = resultItem.skin_color;\r\n    if (\"url\" in resultItem) entity.url = resultItem.url;\r\n\r\n    return entity;\r\n  }\r\n}\r\n\r\nexport const HeroDetailsPropTypes = {\r\n  ...IdUrlModelPropTypes,\r\n  name: PT.string.isRequired,\r\n  height: PT.oneOfType([PT.number, PT.string]).isRequired,\r\n  mass: PT.oneOfType([PT.number, PT.string]).isRequired,\r\n  hairColour: PT.string.isRequired,\r\n  skinColour: PT.string.isRequired,\r\n  eyeColour: PT.string.isRequired,\r\n  birthYear: PT.string.isRequired,\r\n  gender: PT.string.isRequired,\r\n  planet: PT.shape(PlanetDetailsPropTypes),\r\n  films: PT.arrayOf(PT.shape(FilmDetailPropTypes)).isRequired,\r\n  fromPage: PT.oneOfType([PT.string, PT.number]).isRequired,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class FilmDetail extends IdUrlModel {\r\n  constructor(url) {\r\n    super(StartWarsUrlGetIdRegEx.GET_FILM_REGEX);\r\n    this.url = url;\r\n  }\r\n\r\n  title = \"\";\r\n  releaseDate = null;\r\n}\r\n\r\nexport const FilmDetailPropTypes = {\r\n  ...IdUrlModelPropTypes,\r\n  title: PT.string.isRequired,\r\n  releaseDate: PT.oneOfType([PT.string, PT.instanceOf(Date)]),\r\n};\r\n","export const PeoplePageDispaType = Object.freeze({\r\n  list: \"list\",\r\n  cards: \"cards\",\r\n});","import PT from \"prop-types\";\r\nimport { HeroDetails, PeoplePageDispaType } from \"../dataModels\";\r\n\r\nexport class PeopleStore {\r\n  timeStamp = 0;\r\n  loading = true;\r\n  people = [];\r\n  totalPeopleCount = 0;\r\n\r\n  observerIndex = 0;\r\n\r\n  filterName = \"\";\r\n\r\n  currentPage = \"1\";\r\n  uploadedPages = [];\r\n\r\n  favoriteHeroes = {};\r\n\r\n  itemsPerPage = 10;\r\n  exFavorite = false;\r\n\r\n  displayType = PeoplePageDispaType.list;\r\n  showFavoritesOnly = false;\r\n}\r\n\r\nexport const PeopleStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  loading: PT.bool,\r\n  people: PT.arrayOf(PT.instanceOf(HeroDetails)),\r\n  totalPeopleCount: PT.number,\r\n  observerIndex: PT.number,\r\n  currentPage: PT.string,\r\n  filterName: PT.string,\r\n  uploadedPages: PT.arrayOf(PT.string),\r\n\r\n  favoriteHeroes: PT.object,\r\n\r\n  exFavorite: PT.bool,\r\n\r\n  displayType: PT.oneOf([PeoplePageDispaType.list, PeoplePageDispaType.cards]),\r\n  showFavoritesOnly: PT.bool,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nexport class UserInfoStore {\r\n  timeStamp = 0;\r\n\r\n  userName = \"\";\r\n  offlineMode = true;\r\n  userInfo = null;\r\n}\r\n\r\nexport const UserInfoStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  userName: PT.string,\r\n  offlineMode: PT.bool,\r\n  userInfo: PT.object,\r\n};\r\n","export const UserInfoActions = {\r\n  SET_USER_INFO: \"SET_USER_INFO\",\r\n};\r\n\r\n/**\r\n * Actions and events about user information.\r\n * @memberof Actions\r\n * @namespace Actions.userInfoActions\r\n */\r\n\r\nconst setUserInfoDispatch = (userName, offlineMode, userInfo) => ({\r\n  type: UserInfoActions.SET_USER_INFO,\r\n  payload: { userName, offlineMode, userInfo },\r\n});\r\n\r\n/**\r\n * Set user Auth info;\r\n * @param {string} userName the name of user\r\n * @param {boolean} offlineMode update data with localstorage, instead firebase\r\n * @param {Object} userInfo firebase user info\r\n * \r\n * @memberof Actions.userInfoActions\r\n */\r\nexport function setUserInfo(userName, offlineMode, userInfo) {\r\n  return (dispatch) => {\r\n    dispatch(setUserInfoDispatch(userName, offlineMode, userInfo));\r\n  };\r\n}\r\n","import PT from \"prop-types\";\r\n\r\nexport class RelationshipsStore {\r\n  timeStamp = 0;\r\n\r\n  filmsData = {};\r\n  planestsData = {};\r\n}\r\n\r\nexport const RelationshipsStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  filmsData: PT.object,\r\n  planestsData: PT.object,\r\n};\r\n","import { UserInfoStore } from \"../models/storeModels\";\r\n\r\nimport { clearFirebaseAuthInfo } from \".\";\r\n\r\n/**\r\n * Coockies helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.cookiesHelpers\r\n */\r\n\r\n/**\r\n * Check site cookies on exists and not expires;\r\n *\r\n * @returns {boolean}\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function checkCookiesOnExists() {\r\n  const cookie = !!document.cookie;\r\n  if (!cookie) {\r\n    clearFirebaseAuthInfo();\r\n  }\r\n  return cookie;\r\n}\r\n\r\nlet updateCookiesInterval = 0;\r\nconst userInfoKey = \"userInfo\";\r\n/**\r\n * Set user data to cookies;\r\n * <pre>\r\n * - When cookie expires and session is actiove, we reset they;\r\n * </pre>\r\n * @param {string} userInfo auth user stringified data\r\n * @param {number} time additional time to expires (default: 10 min)\r\n *\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function setUserCookies(userInfo, time = 600_000) {\r\n  document.cookie = `${userInfoKey}=${userInfo}; expires=${setTimeForCookies(\r\n    time\r\n  )}`;\r\n  if (updateCookiesInterval) {\r\n    clearInterval(updateCookiesInterval);\r\n  }\r\n\r\n  if (time) {\r\n    updateCookiesInterval = setInterval(() => {\r\n      document.cookie = `${document.cookie}; expires=${setTimeForCookies(\r\n        new Date(time).toGMTString()\r\n      )}`;\r\n    }, time * 0.8);\r\n  }\r\n}\r\n\r\nexport function deleteAllCookies() {\r\n  const cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n      let temp = cookies[i];\r\n      const eqPos = temp.indexOf(\"=\");\r\n      const name = eqPos > -1 ? temp.substr(0, eqPos) : temp;\r\n      document.cookie = name + \"=;expires=\"+new Date(0).toGMTString();\r\n  }\r\n}\r\n\r\nfunction setTimeForCookies(seconds) {\r\n  const now = new Date();\r\n  let time = now.getTime();\r\n\r\n  time += seconds * 1000;\r\n  now.setTime(time);\r\n  return now;\r\n}\r\n\r\n/**\r\n * Get user Info data from cookies; (code from `w3schools`)\r\n *\r\n * @returns instanse of userInfo\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function getUserInfoFromCookie() {\r\n  try {\r\n    if (checkCookiesOnExists()) {\r\n      const ca = document.cookie.split(\";\");\r\n      for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) === \" \") {\r\n          c = c.substring(1);\r\n        }\r\n        if (c.indexOf(userInfoKey) === 0) {\r\n          return JSON.parse(c.substring(userInfoKey.length + 1, c.length));\r\n        }\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    console.log(`getUserInfoFromCookie exception: ${ex}`);\r\n  }\r\n  return new UserInfoStore();\r\n}\r\n","/**\r\n * LocalStorage helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.storageHelpers\r\n */\r\n\r\nconst favoritesHeroesKey = \"star-wars-api-favorites-heroes\";\r\n/**\r\n * Get favorites heroes from localStorage;\r\n *\r\n * @returns {Object} id-name of heroes\r\n *\r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function getFavoritesHeroesFromStorage() {\r\n  const favoritesHeroes = localStorage.getItem(favoritesHeroesKey);\r\n  if (favoritesHeroes) {\r\n    return JSON.parse(favoritesHeroes);\r\n  }\r\n  return [];\r\n}\r\n\r\n/**\r\n * Set favorites heroes to localStorage;\r\n * @param {Object} items id-name of favorite heroes\r\n *\r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function setFavoritesHeroesToStorage(items) {\r\n  localStorage.setItem(favoritesHeroesKey, JSON.stringify(items));\r\n}\r\n\r\nconst userInfoFirebase = \"star-wars-api-user-info\";\r\n/**\r\n * Set firebase auth user to localstorage;\r\n * @param {Object} userInfo firebase auth user\r\n * \r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function setFirebaseAuthInfo(userInfo) {\r\n  localStorage.setItem(userInfoFirebase, JSON.stringify(userInfo));\r\n}\r\n/**\r\n * Get firebase auth info from localstorage;\r\n * \r\n * @returns {Object} firebase auth info\r\n * \r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function getFirebaseUserInfo() {\r\n  const data = localStorage.getItem(userInfoFirebase);\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n  return null;\r\n}\r\n/**\r\n * Remove irebase auth info from localstorage;\r\n */\r\nexport function clearFirebaseAuthInfo() {\r\n  localStorage.removeItem(userInfoFirebase);\r\n}","import firebase from \"firebase\";\r\n\r\nimport { validateForm } from \".\";\r\n/**\r\n * Networks helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.httpHelpers\r\n */\r\n\r\n/**\r\n * Get json data via fetch;\r\n * @param {Object} urlData `{ baseUrl, param, query }`\r\n * @param {RequestInit} postBody request body\r\n *\r\n * @memberof Helpers.httpHelpers\r\n */\r\nexport async function getData(urlData, postBody) {\r\n  const input = getUrl(urlData);\r\n\r\n  let response = !postBody\r\n    ? await fetch(input)\r\n    : await fetch(input, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(postBody),\r\n      });\r\n  let data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport function getUrl(urlData) {\r\n  const { baseUrl, param, query } = urlData;\r\n  let url = baseUrl;\r\n  if (param) {\r\n    url += `${param}/`;\r\n  }\r\n  if (query) {\r\n    url += \"?\" + new URLSearchParams(query).toString();\r\n  }\r\n  return url;\r\n}\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDBkOq6daLKKiGA6QTrCscb0JupbVXD5wE\",\r\n  authDomain: \"star-wars-api-70c4e.firebaseapp.com\",\r\n  databaseURL: \"https://star-wars-api-70c4e.firebaseio.com\",\r\n  projectId: \"star-wars-api-70c4e\",\r\n  storageBucket: \"star-wars-api-70c4e.appspot.com\",\r\n  messagingSenderId: \"864744893293\",\r\n  appId: \"1:864744893293:web:bd13512c77c47dd9d14864\",\r\n};\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport async function createUserWithFirebase(email, password) {\r\n  try {\r\n    if (validateForm(email, password)) {\r\n      return await firebaseApp\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password);\r\n    } else {\r\n      throw Error(\"incorrect form\");\r\n    }\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signInWithFormFirebase(email, password) {\r\n  try {\r\n    if (validateForm(email, password)) {\r\n      return await firebaseApp\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password);\r\n    } else {\r\n      throw Error(\"incorrect form\");\r\n    }\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signInWithGoogleFirebase() {\r\n  try {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return await firebase.auth().signInWithPopup(provider);\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signOutFirebase() {\r\n  await firebase.auth().signOut();\r\n}\r\n","export function validateEmail(email) {\r\n  if (email) {\r\n    const val = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.exec(email);\r\n    if (val && val.length) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function validatePassword(password) {\r\n  return (\r\n    password && password.length && password.length > 5 && password.length < 25\r\n  );\r\n}\r\n\r\nexport function validateForm(email, password) {\r\n  return validateEmail(email) && validatePassword(password);\r\n}\r\n","import { getData } from \"../helpers\";\r\nimport { StarWarsUrlData } from \"../data\";\r\nimport { HeroDetails } from \"../models/dataModels\";\r\n\r\nimport {\r\n  getFavoritesHeroesFromStorage,\r\n  setFavoritesHeroesToStorage,\r\n} from \"../helpers\";\r\n\r\nexport const PeopleActions = {\r\n  SET_PEOPLE_PAGE_LOADING_STATE: \"SET_PEOPLE_PAGE_LOADING_STATE\",\r\n  SET_PEOPLE_PAGE_DISPAY_TYPE: \"SET_PEOPLE_PAGE_DISPAY_TYPE\",\r\n  SET_PEOPLE_PAGE_PAGINATION_PAGE: \"SET_PEOPLE_PAGE_PAGINATION_PAGE\",\r\n  RESET_PEOPLE_DATA: \"RESET_PEOPLE_DATA\",\r\n  CLEAR_PEOPLE_DATA: \"CLEAR_PEOPLE_DATA\",\r\n  GET_PEOPLE_DATA: \"GET_PEOPLE_DATA\",\r\n  UPDATE_HERO_DATA: \"UPDATE_HERO_DATA\",\r\n  SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE: \"SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE\",\r\n\r\n  TOGGLE_FAVORITE_HEROES: \"TOGGLE_FAVORITE_HEROES\",\r\n  SET_OBSERVED_ITEM_INDEX: \"SET_OBSERVED_ITEM_INDEX\",\r\n};\r\n\r\nconst setPeoplePageLoadingStateDispatch = (state) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_LOADING_STATE,\r\n  payload: { state },\r\n});\r\n\r\nfunction setPeoplePageLoadingState(state) {\r\n  return (dispatch) => {\r\n    dispatch(setPeoplePageLoadingStateDispatch(state));\r\n  };\r\n}\r\n\r\nconst setPeoplePagedisplayTypeDispatch = (type) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_DISPAY_TYPE,\r\n  payload: { type },\r\n});\r\n\r\nexport function setPeoplePagedisplayType(type) {\r\n  return async (dispatch, getState) => {\r\n    const { peopleData } = getState();\r\n    if (peopleData.displayType !== type) {\r\n      dispatch(setPeoplePagedisplayTypeDispatch(type));\r\n    }\r\n  };\r\n}\r\n\r\nconst setPeoplePagePaginationPageDispatch = (page) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_PAGINATION_PAGE,\r\n  payload: { page },\r\n});\r\n\r\nconst resetPeopleDataDispatch = () => ({\r\n  type: PeopleActions.RESET_PEOPLE_DATA,\r\n});\r\n\r\nconst clearPeopleDataDispatch = () => ({\r\n  type: PeopleActions.CLEAR_PEOPLE_DATA,\r\n});\r\n\r\nexport function clearPeopleData() {\r\n  return (dispatch) => {\r\n    dispatch(clearPeopleDataDispatch());\r\n  };\r\n}\r\n\r\nconst getPeopleDataDispatch = (data, count, page, search) => ({\r\n  type: PeopleActions.GET_PEOPLE_DATA,\r\n  payload: { data, count, page, search },\r\n});\r\n\r\nexport function getPeopleData(page, search) {\r\n  return async (dispatch, getState) => {\r\n    const pageStr = (page || 1).toString();\r\n    const { peopleData } = getState();\r\n    const newSearch = search !== peopleData.filterName;\r\n    if (newSearch) {\r\n      dispatch(resetPeopleDataDispatch());\r\n    }\r\n    if (!peopleData.showFavoritesOnly) {\r\n      if (newSearch || peopleData.uploadedPages.indexOf(pageStr) === -1) {\r\n        try {\r\n          dispatch(setPeoplePageLoadingState(true));\r\n\r\n          const query = { page };\r\n          if (search) query.search = search;\r\n\r\n          const { count, results } = await getData({\r\n            baseUrl: StarWarsUrlData.GET_PEOPLE,\r\n            query,\r\n          });\r\n          if (results) {\r\n            dispatch(\r\n              getPeopleDataDispatch(\r\n                results.map((x) => HeroDetails.new(x)),\r\n                count,\r\n                pageStr,\r\n                search\r\n              )\r\n            );\r\n          } else {\r\n            const exMessage = \"No data from response\";\r\n            throw exMessage;\r\n          }\r\n        } catch (ex) {\r\n          console.log(\"ex\", ex);\r\n          //todo Add message about exception\r\n        } finally {\r\n          dispatch(setPeoplePageLoadingState(false));\r\n        }\r\n      } else {\r\n        dispatch(setPeoplePagePaginationPageDispatch(pageStr));\r\n      }\r\n    } else {\r\n      await dispatch(getPeopleFavoriteData(page, search));\r\n    }\r\n  };\r\n}\r\n\r\nconst setPeoplePageFavoritesViewModeDispatch = (state) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE,\r\n  payload: { state },\r\n});\r\nexport function setPeoplePageFavoritesViewMode(state) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setPeoplePageFavoritesViewModeDispatch(state));\r\n\r\n    const { peopleData } = getState();\r\n    const { filterName } = peopleData;\r\n    if (state) {\r\n      await dispatch(getPeopleFavoriteData(1, filterName));\r\n    } else {\r\n      dispatch(resetPeopleDataDispatch());\r\n      await dispatch(getPeopleData(1, filterName));\r\n    }\r\n  };\r\n}\r\n\r\nconst toggleFavoritesHeroesDispatch = (items) => ({\r\n  type: PeopleActions.TOGGLE_FAVORITE_HEROES,\r\n  payload: { items },\r\n});\r\nexport function toggleFavoritesHeroes(items) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(toggleFavoritesHeroesDispatch(items));\r\n\r\n    const { userInfo, peopleData } = getState();\r\n    if (userInfo.offlineMode) {\r\n      setFavoritesHeroesToStorage(peopleData.favoriteHeroes);\r\n    } else {\r\n      //todo\r\n    }\r\n    if (peopleData.showFavoritesOnly) {\r\n      const { currentPage, filterName } = peopleData;\r\n      await dispatch(getPeopleFavoriteData(currentPage, filterName));\r\n    }\r\n  };\r\n}\r\n\r\nexport function getFavoriteHeroes() {\r\n  return async (dispatch, getState) => {\r\n    const { userInfo } = getState();\r\n    if (userInfo.offlineMode) {\r\n      dispatch(toggleFavoritesHeroesDispatch(getFavoritesHeroesFromStorage()));\r\n    }\r\n  };\r\n}\r\n\r\nconst setObservedItemIndexDispatch = (index) => ({\r\n  type: PeopleActions.SET_OBSERVED_ITEM_INDEX,\r\n  payload: { index },\r\n});\r\nexport function setObservedItemIndex(index) {\r\n  return (dispatch) => {\r\n    dispatch(setObservedItemIndexDispatch(index));\r\n  };\r\n}\r\n\r\nfunction getPeopleFavoriteData(page, search) {\r\n  return async (dispatch, getState) => {\r\n    const { peopleData } = getState();\r\n    const { favoriteHeroes, people, itemsPerPage } = peopleData;\r\n\r\n    try {\r\n      dispatch(setPeoplePageLoadingState(true));\r\n      const filterName = (search || \"\").toLowerCase();\r\n      const filteredItems = Object.keys(favoriteHeroes)\r\n        .map((key) => ({ id: Number(key), name: favoriteHeroes[key] }))\r\n        .filter(\r\n          (x) =>\r\n            x &&\r\n            (x.name || \"\").toString().toLowerCase().indexOf(filterName) !== -1\r\n        );\r\n\r\n      const idsPerPage = filteredItems.slice(\r\n        itemsPerPage * (page - 1),\r\n        itemsPerPage * page\r\n      );\r\n      if (!idsPerPage.length && page > 1) {\r\n        await dispatch(getPeopleFavoriteData(page - 1, search));\r\n      } else {\r\n        const itemsToUpload = [];\r\n        const items = [];\r\n\r\n        for (let i of idsPerPage) {\r\n          const item = people.find((x) => x && x.id === i.id);\r\n          if (item) {\r\n            items.push(item);\r\n          } else {\r\n            itemsToUpload.push(i.id);\r\n            const mockItem = new HeroDetails();\r\n            mockItem.id = i.id;\r\n            mockItem.name = i.name;\r\n            mockItem.loaded = false;\r\n            items.push(mockItem);\r\n          }\r\n        }\r\n\r\n        dispatch(\r\n          getPeopleDataDispatch(\r\n            items,\r\n            Object.keys(filteredItems).length,\r\n            page.toString(),\r\n            search\r\n          )\r\n        );\r\n        dispatch(setPeoplePageLoadingState(false));\r\n        for (let id of itemsToUpload) {\r\n          await dispatch(updateHeroData(id));\r\n        }\r\n      }\r\n    } catch (ex) {\r\n      console.log(\"ex\", ex);\r\n      //todo Add message about exception\r\n      dispatch(setPeoplePageLoadingState(false));\r\n    }\r\n  };\r\n}\r\n\r\nconst updateHeroDataDispatch = (hero) => ({\r\n  type: PeopleActions.UPDATE_HERO_DATA,\r\n  payload: { hero },\r\n});\r\n\r\nfunction updateHeroData(id) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await getData({\r\n        baseUrl: StarWarsUrlData.GET_PEOPLE,\r\n        param: id,\r\n      });\r\n\r\n      const hero = HeroDetails.new(data);\r\n      dispatch(updateHeroDataDispatch(hero));\r\n    } catch (ex) {\r\n      console.log(\"ex\", ex);\r\n      //todo Add message about exception\r\n    }\r\n  };\r\n}\r\n","import { getData } from \"../helpers\";\r\nimport { StarWarsUrlData } from \"../data\";\r\n\r\nimport { FilmDetail, PlanetDetails } from \"../models/dataModels\";\r\n\r\nexport const RelationshipsActions = {\r\n  GET_FILM_DATA: \"GET_FILM_DATA\",\r\n  GET_PLANET_DATA: \"GET_PLANET_DATA\",\r\n};\r\n\r\n/**\r\n * Actions and events about main data dependency.\r\n * @memberof Actions\r\n * @namespace Actions.relationshipsActions\r\n */\r\n\r\nconst getFilmDataDispatch = (film) => ({\r\n  type: RelationshipsActions.GET_FILM_DATA,\r\n  payload: { film },\r\n});\r\n\r\n/**\r\n * Upload film full info;\r\n * @param {number} id film Id\r\n * \r\n * @memberof Actions.relationshipsActions\r\n * @async\r\n */\r\nexport function getFilmData(id) {\r\n  return async (dispatch, getState) => {\r\n    const { relationships } = getState();\r\n    if (!(id in relationships.filmsData)) {\r\n      try {\r\n        const { title, url, release_date } = await getData({\r\n          baseUrl: StarWarsUrlData.GET_FILM,\r\n          param: id,\r\n        });\r\n        if (title) {\r\n          const model = new FilmDetail(url);\r\n          model.title = title;\r\n          model.releaseDate = release_date;\r\n\r\n          dispatch(getFilmDataDispatch(model));\r\n        }\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n        //todo Add message about exception\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst getPlanetDataDispatch = (planet) => ({\r\n  type: RelationshipsActions.GET_PLANET_DATA,\r\n  payload: { planet },\r\n});\r\n\r\n/**\r\n * Upload planet full info;\r\n * @param {number} id planet Id\r\n * \r\n * @memberof Actions.relationshipsActions\r\n * @async\r\n */\r\nexport function getPlanetData(id) {\r\n  return async (dispatch, getState) => {\r\n    const { relationships } = getState();\r\n    if (!(id in relationships.planestsData)) {\r\n      try {\r\n        const {\r\n          url,\r\n          name,\r\n          population,\r\n          climate\r\n        } = await getData({\r\n          baseUrl: StarWarsUrlData.GET_PLANET,\r\n          param: id,\r\n        });\r\n        if(name) {\r\n          const model = new PlanetDetails(url);\r\n          model.name = name;\r\n          model.population = population;\r\n          model.climate = climate;\r\n\r\n          dispatch(getPlanetDataDispatch(model));\r\n        }\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n        //todo Add message about exception\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { handleActions } from \"redux-actions\";\r\nimport { UserInfoStore } from \"../models/storeModels\";\r\nimport { UserInfoActions } from \"../actions\";\r\n\r\nconst { SET_USER_INFO } = UserInfoActions;\r\n\r\nexport const initialState = new UserInfoStore();\r\n\r\nexport const userInfoReducer = handleActions(\r\n  {\r\n    [SET_USER_INFO]: (userData, { payload }) => {\r\n      const { userName, offlineMode, userInfo } = payload;\r\n      return {\r\n        ...userData,\r\n        timeStamp: Date.now(),\r\n        userName,\r\n        offlineMode,\r\n        userInfo\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { PeopleStore } from \"../models/storeModels\";\r\nimport { PeopleActions } from \"../actions\";\r\n\r\nconst {\r\n  SET_PEOPLE_PAGE_LOADING_STATE,\r\n  SET_PEOPLE_PAGE_DISPAY_TYPE,\r\n  SET_PEOPLE_PAGE_PAGINATION_PAGE,\r\n  RESET_PEOPLE_DATA,\r\n  CLEAR_PEOPLE_DATA,\r\n  GET_PEOPLE_DATA,\r\n  UPDATE_HERO_DATA,\r\n  SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE,\r\n  TOGGLE_FAVORITE_HEROES,\r\n  SET_OBSERVED_ITEM_INDEX,\r\n} = PeopleActions;\r\n\r\nexport const initialState = new PeopleStore();\r\n\r\nexport const peopleReducer = handleActions(\r\n  {\r\n    [SET_PEOPLE_PAGE_LOADING_STATE]: (peopleData, { payload }) => {\r\n      const { state } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        loading: state,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_DISPAY_TYPE]: (peopleData, { payload }) => {\r\n      const { type } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        displayType: type,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_PAGINATION_PAGE]: (peopleData, { payload }) => {\r\n      const { page } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        currentPage: page,\r\n        timeStamp: Date.now(),\r\n        observerIndex: 0,\r\n      };\r\n    },\r\n    [RESET_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        people: [],\r\n        observerIndex: 0,\r\n        currentPage: \"1\",\r\n        uploadedPages: [],\r\n      };\r\n    },\r\n    [CLEAR_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      return new PeopleStore();\r\n    },\r\n    [GET_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      const { data, count, page, search } = payload;\r\n\r\n      const newUploadedPages = [\r\n        ...new Set([...peopleData.uploadedPages, page]),\r\n      ];\r\n\r\n      const clearUploadedPages = newUploadedPages.length > 3;\r\n\r\n      const pageToClear = clearUploadedPages ? newUploadedPages.shift() : null;\r\n\r\n      const updatedPeopleList = clearUploadedPages\r\n        ? peopleData.people.map((x) => {\r\n            if (x && x.fromPage === pageToClear) {\r\n              return null;\r\n            }\r\n            return x;\r\n          })\r\n        : [...peopleData.people];\r\n\r\n      const firstUpdateIndex = (page - 1) * peopleData.itemsPerPage;\r\n      for (let i = 0; i < peopleData.itemsPerPage; i++) {\r\n        if (data[i]) {\r\n          updatedPeopleList[i + firstUpdateIndex] = {\r\n            ...data[i],\r\n            fromPage: page,\r\n          };\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...peopleData,\r\n        observerIndex: 0,\r\n        totalPeopleCount: count,\r\n        currentPage: page,\r\n        uploadedPages: newUploadedPages,\r\n        people: updatedPeopleList,\r\n        filterName: search,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [UPDATE_HERO_DATA]: (peopleData, { payload }) => {\r\n      const { hero } = payload;\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        people: peopleData.people.map((x) => {\r\n          if (x && x.id === hero.id) {\r\n            return {\r\n              ...x,\r\n              ...hero,\r\n            };\r\n          }\r\n          return x;\r\n        }),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE]: (peopleData, { payload }) => {\r\n      const { state } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        showFavoritesOnly: state,\r\n        people: peopleData.people.filter(\r\n          (x) => x && x.id in peopleData.favoriteHeroes\r\n        ),\r\n      };\r\n    },\r\n    [TOGGLE_FAVORITE_HEROES]: (peopleData, { payload }) => {\r\n      const { items } = payload;\r\n\r\n      const newFavorites = { ...peopleData.favoriteHeroes };\r\n      for (let i in items) {\r\n        if (i in newFavorites) {\r\n          delete newFavorites[i];\r\n        } else {\r\n          newFavorites[i] = items[i];\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        favoriteHeroes: newFavorites,\r\n      };\r\n    },\r\n    [SET_OBSERVED_ITEM_INDEX]: (peopleData, { payload }) => {\r\n      const { index } = payload;\r\n      return {\r\n        ...peopleData,\r\n        observerIndex: index,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { RelationshipsStore } from \"../models/storeModels\";\r\nimport { RelationshipsActions } from \"../actions\";\r\n\r\nconst { GET_FILM_DATA, GET_PLANET_DATA } = RelationshipsActions;\r\n\r\nexport const initialState = new RelationshipsStore();\r\n\r\nexport const relationshipsReducer = handleActions(\r\n  {\r\n    [GET_FILM_DATA]: (relationshipsData, { payload }) => {\r\n      const { film } = payload;\r\n      return {\r\n        ...relationshipsData,\r\n        timeStamp: Date.now(),\r\n        filmsData: {\r\n          ...relationshipsData.filmsData,\r\n          [film.id]: film,\r\n        },\r\n      };\r\n    },\r\n    [GET_PLANET_DATA]: (relationshipsData, { payload }) => {\r\n      const { planet } = payload;\r\n      return {\r\n        ...relationshipsData,\r\n        timeStamp: Date.now(),\r\n        planestsData: {\r\n          ...relationshipsData.planestsData,\r\n          [planet.id]: planet,\r\n        },\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  initialState as userInfoState,\r\n  userInfoReducer,\r\n} from \"./userInfoReducer\";\r\n\r\nimport { initialState as peopleState, peopleReducer } from \"./peopleReducer\";\r\n\r\nimport {\r\n  initialState as relationshipsState,\r\n  relationshipsReducer,\r\n} from \"./relationshipsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  userInfo: userInfoReducer,\r\n  peopleData: peopleReducer,\r\n  relationships: relationshipsReducer,\r\n});\r\n\r\nexport const initialState = {\r\n  userInfo: userInfoState,\r\n  peopleData: peopleState,\r\n  relationships: relationshipsState,\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { initialState, rootReducer } from '../reducer';\r\n\r\nfunction configureStore(initialState) {\r\n  const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n  let middleware = composeEnhancers(applyMiddleware(thunk));\r\n  const store = createStore(rootReducer, initialState, middleware);\r\n  return store;\r\n}\r\n\r\nconst store = configureStore(initialState);\r\n\r\nexport default store;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ParagraphMock = ({ width, height = 22 }) => (\r\n  <div\r\n    className=\"paragraph-mock ui placeholder\"\r\n    style={{\r\n      width,\r\n      height,\r\n    }}\r\n  ></div>\r\n);\r\n\r\nParagraphMock.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport { Button, Icon, Transition } from \"semantic-ui-react\";\r\n\r\nimport { ParagraphMock } from \"../helpersComponents/Mocks\";\r\n\r\nconst NavigationBar = ({ className, data, actions }) => {\r\n  /**Play lil animation only single time */\r\n  const [showHelloLabel, setShowHelloLabel] = useState(false);\r\n  useEffect(() => {\r\n    setShowHelloLabel(true);\r\n  }, []);\r\n\r\n  const userName = data.userInfo.userName;\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <Transition\r\n          visible={showHelloLabel}\r\n          animation=\"slide up\"\r\n          duration={800}\r\n        >\r\n          <h3 style={{ marginBottom: \".2em\" }}>\r\n            May the force be with you,\r\n            <span className=\"ui teal\" style={{ fontSize: \"1.35rem\" }}>\r\n              &nbsp;\r\n              {userName ? userName : <ParagraphMock height={16} width={100} />}\r\n            </span>\r\n            !\r\n          </h3>\r\n        </Transition>\r\n      </div>\r\n      <div>\r\n        {/* <Button animated=\"vertical\">\r\n          <Button.Content visible>Setting</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"settings\" size=\"large\" />\r\n          </Button.Content>\r\n        </Button> */}\r\n        <Button\r\n          animated=\"vertical\"\r\n          as={Link}\r\n          to={RouteData.Login}\r\n          style={{ marginLeft: \"1.35em\" }}\r\n        >\r\n          <Button.Content visible>LogOut</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"log out\" size=\"large\" flipped=\"horizontally\" />\r\n          </Button.Content>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigationBar.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { userInfo } = state;\r\n  return {\r\n    data: {\r\n      userInfo,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {},\r\n  };\r\n};\r\n\r\nconst NavigationBarConnected = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavigationBar);\r\n\r\nconst NavigationBarComponent = (props) => <NavigationBarConnected {...props} />;\r\n\r\nexport default NavigationBarComponent;\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getUserInfoFromCookie, getFirebaseUserInfo } from \"../../helpers\";\r\n\r\nimport { setUserInfo as setUserInfoAction } from \"../../actions/userInfoActions\";\r\n\r\nimport { Divider } from \"semantic-ui-react\";\r\n\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nexport class Layout extends PureComponent {\r\n  componentDidMount() {\r\n    const { data, actions } = this.props;\r\n    if (!data.userInfo.userName) {\r\n      setTimeout(() => {\r\n        actions.getUserInfoDataFromStorages();\r\n      }, 1);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-container\">\r\n        <NavigationBar className=\"layout-container__navigation-bar\" />\r\n        <Divider fitted />\r\n        <div className=\"layout-container__content\"> {this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { userInfo } = state;\r\n  return {\r\n    data: {\r\n      userInfo,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      getUserInfoDataFromStorages: () => {\r\n        const { userName, offlineMode } = getUserInfoFromCookie();\r\n        let user = offlineMode ? null : getFirebaseUserInfo();\r\n\r\n        dispatch(\r\n          setUserInfoAction(\r\n            userName,\r\n            offlineMode && !!user,\r\n            !!user ? user : null\r\n          )\r\n        );\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst LayoutComponent = connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n\r\nexport default LayoutComponent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nconst PageAreNotExist = () => (\r\n  <Segment\r\n    style={{\r\n      maxWidth: 680,\r\n      height: 200,\r\n      margin: \"3em auto 0\",\r\n      padding: \"3em\",\r\n    }}\r\n  >\r\n    <Header className=\"not-exist-label\" size=\"huge\">\r\n      Sorry, that page does not exist.\r\n    </Header>\r\n    <Divider />\r\n    <Grid centered columns={3}>\r\n      <Grid.Column>\r\n        <Button\r\n          color=\"blue\"\r\n          as={Link}\r\n          to={RouteData.Base}\r\n          style={{ marginTop: \".85em\", width: 125 }}\r\n        >\r\n          <Icon name=\"log out\" size=\"large\" flipped=\"horizontally\" />\r\n          Back to main\r\n        </Button>\r\n      </Grid.Column>\r\n    </Grid>\r\n  </Segment>\r\n);\r\n\r\nexport default PageAreNotExist;\r\n","import React from \"react\";\r\n\r\nexport default ({ children, fill, stroke, height, width, style, ...props }) => (\r\n  <svg\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    fill={fill}\r\n    stroke={stroke}\r\n    width={width}\r\n    height={height}\r\n    style={style}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nimport IconPattern from \"./IconPattern\";\r\n\r\nexport const DeathStarIcon = ({ height = 25, width = 25, ...props }) => {\r\n  return (\r\n    <IconPattern height={height} width={width} {...props} viewBox=\"0 0 540 500\">\r\n      <g xmlns=\"http://www.w3.org/2000/svg\" id=\"svg_3\">\r\n        <circle r=\"32\" cy=\"138.667\" cx=\"224\" />\r\n        <path\r\n          d=\"m437.333,245.333c5.896,0 10.667,-4.771 10.667,-10.667l0,-42.666l32,0c5.896,0\r\n          10.667,-4.771 10.667,-10.667l0,-42.667c0,-5.896 -4.771,-10.667\r\n          -10.667,-10.667l-53.333,0l0,-42.666l15.5,0c4.406,0 8.354,-2.708 9.948,\r\n          -6.823c1.594,-4.104 0.49,-8.771 -2.771,-11.729c-47.344,-43.062\r\n          -108.427,-66.781 -172.011,-66.781c-141.156,0 -256,114.844\r\n          -256,256s114.844,256 256,256c63.583,0 124.667,-23.719 172.01,\r\n          -66.781c3.26,-2.958 4.365,-7.625 2.771,-11.729c-1.594,-4.115\r\n          -5.542,-6.823 -9.948,-6.823l-15.5,0l0,-21.333l53.334,0c5.896,\r\n          0 10.667,-4.771 10.667,-10.667l0,-64c0,-5.896 -4.771,-10.667\r\n          -10.667,-10.667l-74.667,0l0,-53.333l-362.126,0c-0.161,-3.561\r\n          -0.54,-7.066 -0.54,-10.667s0.379,-7.105 0.54,-10.667l394.126,\r\n          0zm-96,-117.333l42.667,0c5.896,0 10.667,4.771 10.667,10.667c0,\r\n          5.896 -4.771,10.667 -10.667,10.667l-42.667,0c-5.896,0 -10.667,\r\n          -4.771 -10.667,-10.667c0.001,-5.896 4.772,-10.667 10.667,-10.667zm-117.333,\r\n          -64c41.167,0 74.667,33.5 74.667,74.667c0,41.167 -33.5,74.667\r\n          -74.667,74.667s-74.667,-33.5 -74.667,-74.667c0,-41.167 33.5,-74.667 74.667,\r\n          -74.667zm-128,64l21.333,0c5.896,0 10.667,4.771 10.667,10.667c0,5.896\r\n          -4.771,10.667 -10.667,10.667l-21.333,0c-5.896,0 -10.667,-4.771 -10.667,\r\n          -10.667c0,-5.896 4.771,-10.667 10.667,-10.667zm234.667,192l32,0c5.896,0\r\n          10.667,4.771 10.667,10.667c0,5.896 -4.771,10.667 -10.667,10.667l-32,0c-5.896,\r\n          0 -10.667,-4.771 -10.667,-10.667c0,-5.896 4.771,-10.667 10.667,-10.667zm-192,\r\n          64l-42.667,0c-5.896,0 -10.667,-4.771 -10.667,-10.667c0,-5.896 4.771,\r\n          -10.667 10.667,-10.667l42.667,0c5.896,0 10.667,4.771 10.667,10.667c-0.001,\r\n          5.896 -4.771,10.667 -10.667,10.667zm-53.334,-85.333l96,0c5.896,0 10.667,\r\n          4.771 10.667,10.667c0,5.896 -4.771,10.667 -10.667,10.667l-96,0c-5.896,\r\n          0 -10.667,-4.771 -10.667,-10.667c0.001,-5.896 4.772,-10.667 10.667,-10.667z\"\r\n        />\r\n      </g>\r\n    </IconPattern>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { Form, Button, Message } from \"semantic-ui-react\";\r\n\r\nconst SingInForm = ({ setVisible, loginWithForm, loginViaGoogleForm }) => (\r\n    <Form className=\"firebase-singin-form\" widths=\"equal\">\r\n      <Form.Input\r\n        icon=\"at\"\r\n        iconPosition=\"left\"\r\n        label=\"Email\"\r\n        key=\"login-email\"\r\n        id=\"login-email\"\r\n        placeholder=\"Email\"\r\n      />\r\n      <Form.Input\r\n        icon=\"lock\"\r\n        iconPosition=\"left\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        key=\"login-password\"\r\n        id=\"login-password\"\r\n        placeholder=\"Password\"\r\n      />\r\n\r\n      <Button\r\n        content=\"Login via firebase\"\r\n        primary\r\n        style={{ marginTop: \"2em\", marginBottom: \"1.5em\" }}\r\n        onClick={async ({ target }) => {\r\n          const emailEl = document.querySelector(\"#login-email\");\r\n          const passwordEl = document.querySelector(\"#login-password\");\r\n          await loginWithForm((emailEl || {}).value, (passwordEl || {}).value);\r\n        }}\r\n      />\r\n      <Message style={{ margin: \"0 .7em\" }}>\r\n        First time here?&nbsp;\r\n        <Link to=\"#\" style={{ maginLeft: \".3em\" }} onClick={setVisible}>\r\n          Sing Up!\r\n        </Link>\r\n        &nbsp;or&nbsp;\r\n        <Button\r\n          icon=\"google\"\r\n          size=\"small\"\r\n          type=\"google-btn\"\r\n          onClick={loginViaGoogleForm}\r\n          style={{\r\n            display: \"inline-block\",\r\n            background: \"#4286f5\",\r\n            color: \"white\",\r\n          }}\r\n        />\r\n      </Message>\r\n    </Form>\r\n  );\r\n\r\n\r\nSingInForm.propTypes = {\r\n  setVisible: PT.func.isRequired,\r\n  loginWithForm: PT.func.isRequired,\r\n  loginViaGoogleForm: PT.func.isRequired,\r\n};\r\n\r\nexport default SingInForm;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { Form, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst RegisterForm = ({ visible, setVisible, create }) => (\r\n  <Form\r\n    className=\"firebase-register-form\"\r\n    widths=\"equal\"\r\n    onSubmit={async ({ target }) => {\r\n      const emailEl = target.querySelector(\"#create-email\");\r\n      const passwordEl = target.querySelector(\"#create-password\");\r\n      await create((emailEl || {}).value, (passwordEl || {}).value);\r\n    }}\r\n  >\r\n    <Icon\r\n      name={visible ? \"angle up\" : \"minus\"}\r\n      className=\"back-to-signin\"\r\n      size=\"large\"\r\n      title=\"Back to SignIn\"\r\n      onClick={setVisible}\r\n    />\r\n    <Form.Input\r\n      icon=\"at\"\r\n      iconPosition=\"left\"\r\n      label=\"Email\"\r\n      id=\"create-email\"\r\n      placeholder=\"Enter email\"\r\n    />\r\n    <Form.Input\r\n      disabled\r\n      icon=\"user\"\r\n      iconPosition=\"left\"\r\n      label=\"Username\"\r\n      id=\"create-username\"\r\n      placeholder=\"Username\"\r\n    />\r\n    <Form.Input\r\n      icon=\"lock\"\r\n      iconPosition=\"left\"\r\n      label=\"Password\"\r\n      type=\"Enter password\"\r\n      id=\"create-password\"\r\n      placeholder=\"Password\"\r\n    />\r\n\r\n    <Button\r\n      content=\"Register\"\r\n      primary\r\n      style={{ marginTop: \"1.5em\", marginBottom: \"1em\" }}\r\n    />\r\n  </Form>\r\n);\r\n\r\nRegisterForm.propTypes = {\r\n  visible: PT.bool.isRequired,\r\n  setVisible: PT.func.isRequired,\r\n  create: PT.func.isRequired,\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { DeathStarIcon } from \"../helpersComponents/Icons\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport {\r\n  setUserCookies,\r\n  deleteAllCookies,\r\n  setFirebaseAuthInfo,\r\n  createUserWithFirebase,\r\n  signInWithFormFirebase,\r\n  signInWithGoogleFirebase,\r\n  signOutFirebase,\r\n} from \"../../helpers\";\r\n\r\nimport { setUserInfo as setUserInfoAction } from \"../../actions/userInfoActions\";\r\n\r\nimport SingInForm from \"./SingInForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nconst AuthPage = ({ history, data, actions }) => {\r\n  useEffect(() => {\r\n    // on component mount only\r\n    deleteAllCookies();\r\n    signOutFirebase();\r\n  }, []);\r\n\r\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  //const [singinEr, setFormLoading] = useState(false);\r\n\r\n  const { authOffline, authOnline } = actions;\r\n  async function createNewUser(email, password) {\r\n    setFormLoading(true);\r\n    const user = await createUserWithFirebase(email, password);\r\n    if (user) {\r\n      authOnline(user);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setFormLoading(false);\r\n    }\r\n  }\r\n  async function loginWithForm(email, password) {\r\n    setFormLoading(true);\r\n    const user = await signInWithFormFirebase(email, password);\r\n    if (user) {\r\n      authOnline(user);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setFormLoading(false);\r\n    }\r\n  }\r\n  async function loginViaGoogleForm() {\r\n    setFormLoading(true);\r\n    const user = await signInWithGoogleFirebase();\r\n    if (user) {\r\n      authOnline(user);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setFormLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"login-screen\">\r\n      <Segment>\r\n      {formLoading && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"huge\">Loading...</Loader>\r\n          </Dimmer>\r\n        )}\r\n        <Header as=\"h2\" icon className=\"login-header full-width\">\r\n          <DeathStarIcon width={45} height={45} />\r\n          <div>Star Wars API</div>\r\n          <Header.Subheader>\r\n            Test task to check react skill of mine.\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment className=\"login-form\" placeholder>\r\n          <Grid columns={2} relaxed=\"very\" stackable divided>\r\n            <Grid.Column\r\n              className={`firebase-auth-forms-column ${\r\n                showRegisterForm ? \"register\" : \"login\"\r\n              }`}\r\n            >\r\n              <SingInForm\r\n                visible={!showRegisterForm}\r\n                setVisible={() => {\r\n                  setShowRegisterForm(true);\r\n                }}\r\n                loginWithForm={loginWithForm}\r\n                loginViaGoogleForm={loginViaGoogleForm}\r\n              />\r\n              <Divider className=\"firebase-auth-form-divider\" />\r\n              <RegisterForm\r\n                visible={showRegisterForm}\r\n                setVisible={() => {\r\n                  setShowRegisterForm(false);\r\n                }}\r\n                create={createNewUser}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign=\"middle\" className=\"offline-section\">\r\n              <Popup\r\n                content=\"All your changes will be stored in your browser.\"\r\n                trigger={\r\n                  <Button\r\n                    basic\r\n                    color=\"purple\"\r\n                    size=\"big\"\r\n                    className=\"offline-btn\"\r\n                    onClick={authOffline}\r\n                    as={Link}\r\n                    to={RouteData.Base}\r\n                  >\r\n                    <Icon.Group>\r\n                      <Icon name=\"wifi\" />\r\n                      <Icon corner name=\"x\" color=\"red\" />\r\n                    </Icon.Group>\r\n                    &nbsp; Enter offline\r\n                  </Button>\r\n                }\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Divider className=\"vertical-devider\" vertical>\r\n            Or\r\n          </Divider>\r\n        </Segment>\r\n      </Segment>\r\n      <div id=\"developer-signature\">\r\n        developed by\r\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Sinfulelf\">\r\n          &nbsp;Anton Nastolnyi\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    data: {},\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      authOffline: () => {\r\n        const userName = \"Anonymous\";\r\n        setUserCookies(JSON.stringify({ userName, offlineMode: true }));\r\n        dispatch(setUserInfoAction(userName, true, null));\r\n      },\r\n      authOnline: (user) => {\r\n        const userName = user.additionalUserInfo.profile.name;\r\n        setUserCookies(JSON.stringify({ userName, offlineMode: false }));\r\n        setFirebaseAuthInfo(user);\r\n        dispatch(setUserInfoAction(userName, true, user));\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst AuthPageComponent = connect(mapStateToProps, mapDispatchToProps, null, {\r\n  pure: true,\r\n  areOwnPropsEqual: () => true,\r\n})(AuthPage);\r\n\r\nexport default withRouter((props) => <AuthPageComponent {...props} />);\r\n","import React, { useState } from \"react\";\r\nimport PT from \"prop-types\";\r\nimport { Input, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst HeaderFilterInputItem = ({ search }) => {\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const onChange = ({ target }) => {\r\n    setFilterValue(target.value);\r\n  };\r\n  const onButtonClick = () => {\r\n    search(filterValue);\r\n  };\r\n  return (\r\n    <Input\r\n      className=\"header-input\"\r\n      label={\r\n        <Button primary onClick={onButtonClick}>\r\n          Search\r\n        </Button>\r\n      }\r\n      onChange={onChange}\r\n      value={filterValue}\r\n      labelPosition=\"right\"\r\n      placeholder=\"Filter by name\"\r\n    />\r\n  );\r\n};\r\n\r\nHeaderFilterInputItem.propTypes = {\r\n  search: PT.func.isRequired,\r\n};\r\n\r\nexport const HeaderFilterInput = HeaderFilterInputItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst HeaderPaginationItem = ({ isFavorites, showFavoriteOnly }) => (\r\n  <Menu pointing secondary size=\"large\">\r\n    <Menu.Item\r\n      name=\"people\"\r\n      key=\"people\"\r\n      className=\"people-menu\"\r\n      active={!isFavorites}\r\n      onClick={() => {\r\n        showFavoriteOnly(false);\r\n      }}\r\n      style={{ margin: \"0 .5em -2px\" }}\r\n    >\r\n      <Icon name=\"users\" />\r\n      &#8201; People\r\n    </Menu.Item>\r\n    <Menu.Item\r\n      name=\"favorites\"\r\n      key=\"favorites\"\r\n      className=\"favorites-menu\"\r\n      active={isFavorites}\r\n      onClick={() => {\r\n        showFavoriteOnly(true);\r\n      }}\r\n      style={{ margin: \"0 .5em -2px\" }}\r\n    >\r\n      <Icon name=\"heart outline\" />\r\n      &#8201; Favorite\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nHeaderPaginationItem.propTypes = {\r\n  isFavorites: PT.bool.isRequired,\r\n  showFavoriteOnly: PT.func.isRequired,\r\n};\r\n\r\nexport const HeaderPagination = HeaderPaginationItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { PeoplePageDispaType } from \"../../models/dataModels\";\r\n\r\nimport { Form, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport { HeaderFilterInput } from \"./HeaderFilterInput\";\r\nimport { HeaderPagination } from \"./HeaderPagination\";\r\n\r\nconst Header = ({\r\n  pageName,\r\n  isFavorites,\r\n  showFavoriteOnly,\r\n  displayType,\r\n  setPeoplePagedisplayType,\r\n  search\r\n}) => {\r\n  return (\r\n    <div className={`page-header ${pageName}__header`}>\r\n      <Form className=\"header-toggle\">\r\n        <Form.Field>\r\n          <Checkbox\r\n            slider\r\n            label=\"Show cards\"\r\n            checked={displayType === PeoplePageDispaType.cards}\r\n            onChange={() => {\r\n              setPeoplePagedisplayType(\r\n                displayType === PeoplePageDispaType.cards\r\n                  ? PeoplePageDispaType.list\r\n                  : PeoplePageDispaType.cards\r\n              );\r\n            }}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n      <HeaderFilterInput search={search} />\r\n      <HeaderPagination\r\n        isFavorites={isFavorites}\r\n        showFavoriteOnly={showFavoriteOnly}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  isFavorites: PropTypes.bool.isRequired,\r\n  showFavoriteOnly: PropTypes.func.isRequired,\r\n  displayType: PropTypes.string.isRequired,\r\n  setPeoplePagedisplayType: PropTypes.func.isRequired,\r\n  search: PropTypes.func.isRequired\r\n};\r\n\r\nexport const PeoplePageHeader = Header;\r\n","import { PeoplePageDispaType } from \"../../models/dataModels\";\r\n\r\nexport const personCardConfig = {\r\n  stylesConfigs: {\r\n    [PeoplePageDispaType.list]: {\r\n      width: 235,\r\n      height: 35,\r\n      gap: 8,\r\n\r\n      userInfoMargin: 25,\r\n    },\r\n    [PeoplePageDispaType.cards]: {\r\n      width: 250,\r\n      height: 216,\r\n      horizontalGap: 12,\r\n      verticalGap: 14,\r\n    },\r\n  },\r\n  shouldRecalculateStyle(nextProps, prevState) {\r\n    const { displayType, index, wrapperWidth } = nextProps;\r\n    const { styleConditions } = prevState;\r\n\r\n    return (\r\n      displayType !== styleConditions.displayType ||\r\n      index !== styleConditions.index ||\r\n      (displayType === PeoplePageDispaType.cards &&\r\n        wrapperWidth !== styleConditions.wrapperWidth)\r\n    );\r\n  },\r\n\r\n  recalculateStyle(nextProps) {\r\n    const { displayType, index, wrapperWidth } = nextProps;\r\n    if (displayType === PeoplePageDispaType.list) {\r\n      const { width, height, gap } = this.stylesConfigs[\r\n        PeoplePageDispaType.list\r\n      ];\r\n      return {\r\n        top: (height + gap) * index,\r\n        left: 0,\r\n        width,\r\n        height,\r\n      };\r\n    } else {\r\n      const { width, height, horizontalGap, verticalGap } = this.stylesConfigs[\r\n        PeoplePageDispaType.cards\r\n      ];\r\n\r\n      const cardSpace = width + horizontalGap;\r\n\r\n      const itemsPreRow = Math.floor(wrapperWidth / cardSpace);\r\n      const rowUsableWidth = itemsPreRow * cardSpace;\r\n      const totalLeftWidth = index * cardSpace;\r\n      const row = Math.floor(totalLeftWidth / rowUsableWidth);\r\n\r\n      const top = row * (height + verticalGap);\r\n      const left = totalLeftWidth - row * rowUsableWidth;\r\n\r\n      return {\r\n        top: top,\r\n        left: left,\r\n        width,\r\n        height,\r\n        marginBottom: verticalGap,\r\n      };\r\n    }\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nconst HeroPropertyItem = ({ name, value = \"\" }) => (\r\n  <div className=\"property\">\r\n    {!!name && <h5 className=\"property-name\">{name}:</h5>}\r\n    <div className=\"property-content\">\r\n      <div style={{ paddingRight: \".3em\" }}>●</div>\r\n      <div className=\"ellipsis\">{value}</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nHeroPropertyItem.propTypes = {\r\n  name: PT.string,\r\n  value: PT.oneOfType([PT.string, PT.number, PT.element]),\r\n};\r\n\r\nexport const HeroProperty = HeroPropertyItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroInfoPropertiesItem = ({ item }) => (\r\n  <div className=\"full-space hero-info__properties\">\r\n    <HeroProperty\r\n      key=\"height\"\r\n      name=\"Height\"\r\n      value={item.loaded ? item.height : <ParagraphMock width={120} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"mass\"\r\n      name=\"Mass\"\r\n      value={item.loaded ? item.mass : <ParagraphMock width={70} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"hairColour\"\r\n      name=\"Hair color\"\r\n      value={item.loaded ? item.hairColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"skinColour\"\r\n      name=\"Skin color\"\r\n      value={item.loaded ? item.skinColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"eyeColour\"\r\n      name=\"Eye Color\"\r\n      value={item.loaded ? item.eyeColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"birthYear\"\r\n      name=\"Birth Year\"\r\n      value={item.loaded ? item.birthYear : <ParagraphMock width={70} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"gender\"\r\n      name=\"Gender\"\r\n      value={item.loaded ? item.gender : <ParagraphMock width={75} />}\r\n    />\r\n  </div>\r\n);\r\n\r\nHeroInfoPropertiesItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  cardView: PT.bool,\r\n};\r\n\r\nexport const HeroInfoProperties = HeroInfoPropertiesItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroHomePropertyItem = ({ item, planets }) => {\r\n  const planet = planets[item.planet.id];\r\n  return (\r\n    <div className=\"full-space hero-info__home\">\r\n      <h3 className=\"title\">Home world</h3>\r\n      <HeroProperty\r\n        key=\"name\"\r\n        name=\"Name\"\r\n        value={\r\n          !!planet ? planet.name : <ParagraphMock width={110} />\r\n        }\r\n      />\r\n      <HeroProperty\r\n        key=\"population\"\r\n        name=\"Population\"\r\n        value={\r\n          !!planet ? (\r\n            planet.population\r\n          ) : (\r\n            <ParagraphMock width={120}  />\r\n          )\r\n        }\r\n      />\r\n      <HeroProperty\r\n        key=\"climate\"\r\n        name=\"Climate\"\r\n        value={\r\n          !!planet ? planet.climate : <ParagraphMock width={180}  />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroHomePropertyItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  planets: PT.object.isRequired,\r\n};\r\n\r\nexport const HeroHomeProperty = HeroHomePropertyItem;\r\n","import React, { useEffect } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroFilmsPropertyItem = ({ item, films }) => {\r\n  return (\r\n    <div className=\"full-space hero-info__films\">\r\n      <h3 className=\"title\">Films</h3>\r\n      {item.films.map((x) => (\r\n        <HeroProperty\r\n          key={x.url}\r\n          value={\r\n            films[x.id] ? (\r\n              `${films[x.id].title} by ${films[x.id].releaseDate}`\r\n            ) : (\r\n              <ParagraphMock width={240}  />\r\n            )\r\n          }\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroFilmsPropertyItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  films: PT.object.isRequired,\r\n};\r\n\r\nexport const HeroFilmsProperty = HeroFilmsPropertyItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../../models/storeModels\";\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\n\r\nimport { Divider } from \"semantic-ui-react\";\r\n\r\nimport { HeroInfoProperties } from \"./HeroInfoProperties\";\r\nimport { HeroHomeProperty } from \"./HeroHomeProperty\";\r\nimport { HeroFilmsProperty } from \"./HeroFilmsProperty\";\r\n\r\nclass HeroInfoItem extends PureComponent {\r\n  async componentDidMount() {\r\n    await this.uploadHeroAdditionalData();\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    const { item, showFullInfo } = this.props;\r\n    if (\r\n      item.id !== prevProps.item.id ||\r\n      showFullInfo !== prevProps.showFullInfo ||\r\n      (!prevProps.planet && item.planet) ||\r\n      (prevProps.films && prevProps.films.length !== item.films.length)\r\n    ) {\r\n      await this.uploadHeroAdditionalData();\r\n    }\r\n  }\r\n\r\n  uploadHeroAdditionalData = async () => {\r\n    const {\r\n      item,\r\n      getFilmData,\r\n      getPlanetData,\r\n      relationships,\r\n      showFullInfo,\r\n    } = this.props;\r\n    if (showFullInfo) {\r\n      if (item.planet && !(item.planet.id in relationships.planestsData)) {\r\n        await getPlanetData(item.planet.id);\r\n      }\r\n\r\n      for (let film of item.films) {\r\n        if (film && !(film.id in relationships.filmsData)) {\r\n          await getFilmData(film.id);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { item, relationships, showFullInfo = false } = this.props;\r\n\r\n    return (\r\n      <div className=\"hero-info\">\r\n        {!showFullInfo && <Divider style={{ marginTop: 0 }} />}\r\n        <HeroInfoProperties item={item} />\r\n        {!showFullInfo ? (\r\n          <div className=\"bottom-mask\"></div>\r\n        ) : (\r\n          <>\r\n            {!!item.planet && (\r\n              <>\r\n                <Divider />\r\n                <HeroHomeProperty\r\n                  item={item}\r\n                  planets={relationships.planestsData}\r\n                />\r\n              </>\r\n            )}\r\n            <Divider />\r\n            <HeroFilmsProperty item={item} films={relationships.filmsData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeroInfoItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  relationships: PT.shape(RelationshipsStorePropTypes),\r\n  getFilmData: PT.func,\r\n  getPlanetData: PT.func,\r\n  showFullInfo: PT.bool,\r\n};\r\n\r\nexport const HeroInfo = HeroInfoItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport {\r\n  HeroDetailsPropTypes,\r\n  PeoplePageDispaType,\r\n} from \"../../models/dataModels\";\r\n\r\nimport { personCardConfig } from \"./personCardConfig\";\r\n\r\nimport { Header, Icon, Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nimport { HeroInfo } from \"./HeroInfo\";\r\n\r\nclass PersonCardItem extends PureComponent {\r\n  state = {\r\n    style: {},\r\n    styleConditions: {\r\n      displayType: \"\",\r\n      index: -1,\r\n      wrapperWidth: -1,\r\n    },\r\n    isActive: false,\r\n    heartIconFilled: false,\r\n  };\r\n\r\n  stylesConfigs = {\r\n    [PeoplePageDispaType.list]: {\r\n      width: 200,\r\n      height: 30,\r\n      gap: 5,\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (personCardConfig.shouldRecalculateStyle(nextProps, prevState)) {\r\n      return {\r\n        style: personCardConfig.recalculateStyle(nextProps),\r\n        styleConditions: {\r\n          displayType: nextProps.displayType,\r\n          index: nextProps.index,\r\n          wrapperWidth: nextProps.wrapperWidth,\r\n        },\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setCardActiveState = (state) => {\r\n    const { displayType } = this.props;\r\n    if (displayType === PeoplePageDispaType.list)\r\n      this.setState({\r\n        isActive: state,\r\n      });\r\n  };\r\n\r\n  setHeartIconFilled = (state) => {\r\n    this.setState({\r\n      heartIconFilled: state,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      item,\r\n      displayType,\r\n      toggleFavoriteHero,\r\n      favoriteHeroes,\r\n      observerIndex,\r\n      index,\r\n      setObservedItemIndex,\r\n    } = this.props;\r\n    const { style, isActive, heartIconFilled } = this.state;\r\n\r\n    const isFavorite = !!favoriteHeroes[item.id];\r\n    const isObserved = index === observerIndex;\r\n\r\n    return (\r\n      <div\r\n        className={`hero-card ${\r\n          isActive || (isObserved && displayType === PeoplePageDispaType.list)\r\n            ? \"active\"\r\n            : \"\"\r\n        } ${displayType}`}\r\n        style={style}\r\n        onClick={() => {\r\n          if (!isObserved && displayType === PeoplePageDispaType.list) {\r\n            setObservedItemIndex(index);\r\n          }\r\n        }}\r\n      >\r\n        {!item.loaded && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"small\" />\r\n          </Dimmer>\r\n        )}\r\n        <div className=\"hero-card__header\">\r\n          <Header\r\n            as=\"h3\"\r\n            title={item.name}\r\n            className=\"hero-name\"\r\n            onMouseUp={(_) => {\r\n              this.setCardActiveState(false);\r\n            }}\r\n            onMouseLeave={(_) => {\r\n              this.setCardActiveState(false);\r\n            }}\r\n            onMouseDown={(_) => {\r\n              this.setCardActiveState(true);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Header>\r\n          <Icon\r\n            name=\"heart\"\r\n            className={`favor-icon ${\r\n              isFavorite ? \"red\" : heartIconFilled ? \"pale-red\" : \"outline\"\r\n            }`}\r\n            onMouseEnter={(_) => this.setHeartIconFilled(true)}\r\n            onMouseLeave={(_) => this.setHeartIconFilled(false)}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              toggleFavoriteHero(item.id, item.name);\r\n            }}\r\n          />\r\n          {displayType === PeoplePageDispaType.list && isObserved && (\r\n            <Icon className=\"observer-caret\" name=\"caret right\" size=\"big\" />\r\n          )}\r\n        </div>\r\n        {displayType === PeoplePageDispaType.cards && (\r\n          <HeroInfo item={item} showFullInfo={false} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPersonCardItem.propTypes = {\r\n  wrapperWidth: PT.number.isRequired,\r\n  index: PT.number.isRequired,\r\n  displayType: PT.oneOf([PeoplePageDispaType.cards, PeoplePageDispaType.list])\r\n    .isRequired,\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  favoriteHeroes: PT.object.isRequired,\r\n  toggleFavoriteHero: PT.func.isRequired,\r\n  observerIndex: PT.number.isRequired,\r\n  setObservedItemIndex: PT.func.isRequired,\r\n};\r\n\r\nexport const PersonCard = PersonCardItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../models/storeModels\";\r\n\r\nimport {\r\n  HeroDetailsPropTypes,\r\n  PeoplePageDispaType,\r\n} from \"../../models/dataModels\";\r\n\r\nimport { personCardConfig } from \"./personCardConfig\";\r\n\r\nimport ReactResizeDetector from \"react-resize-detector\";\r\nimport { Dimmer, Loader, Segment, Transition } from \"semantic-ui-react\";\r\n\r\nimport { PersonCard } from \"./PersonCard\";\r\nimport { HeroInfo } from \"./HeroInfo\";\r\n\r\nclass Content extends PureComponent {\r\n  render() {\r\n    const {\r\n      pageName,\r\n      loading,\r\n      data,\r\n      displayType,\r\n      toggleFavoriteHero,\r\n      favoriteHeroes,\r\n      observerIndex,\r\n      setObservedItemIndex,\r\n      relationships,\r\n      getFilmData,\r\n      getPlanetData,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={`page-content ${pageName}__content`}\r\n        style={{\r\n          paddingTop: \"1.75em\",\r\n          paddingBottom: \"1.75em\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {loading && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"huge\">\r\n              Loading\r\n            </Loader>\r\n          </Dimmer>\r\n        )}\r\n        {!loading && !data.length && <h2>No data to display.</h2>}\r\n        <ReactResizeDetector handleWidth>\r\n          {({ width }) => (\r\n            <div className=\"heroes-cards__wrapper\">\r\n              {data.map((item, index) => (\r\n                <PersonCard\r\n                  key={item.urlValue || index}\r\n                  wrapperWidth={width}\r\n                  index={index}\r\n                  displayType={displayType}\r\n                  item={item}\r\n                  favoriteHeroes={favoriteHeroes}\r\n                  toggleFavoriteHero={toggleFavoriteHero}\r\n                  observerIndex={observerIndex}\r\n                  setObservedItemIndex={setObservedItemIndex}\r\n                />\r\n              ))}\r\n              {!!data[observerIndex] && (\r\n                <Transition\r\n                  visible={displayType === PeoplePageDispaType.list}\r\n                  animation=\"scale\"\r\n                  duration={400}\r\n                >\r\n                  <div\r\n                    className=\"full-space\"\r\n                    style={{\r\n                      paddingLeft:\r\n                        personCardConfig.stylesConfigs[PeoplePageDispaType.list]\r\n                          .width +\r\n                        personCardConfig.stylesConfigs[PeoplePageDispaType.list]\r\n                          .userInfoMargin,\r\n                    }}\r\n                  >\r\n                    <Segment className=\"user-info\">\r\n                      <HeroInfo\r\n                        item={data[observerIndex]}\r\n                        relationships={relationships}\r\n                        getFilmData={getFilmData}\r\n                        getPlanetData={getPlanetData}\r\n                        showFullInfo={displayType === PeoplePageDispaType.list}\r\n                      />\r\n                    </Segment>\r\n                  </div>\r\n                </Transition>\r\n              )}\r\n            </div>\r\n          )}\r\n        </ReactResizeDetector>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  displayType: PropTypes.oneOf([\r\n    PeoplePageDispaType.cards,\r\n    PeoplePageDispaType.list,\r\n  ]).isRequired,\r\n  observerIndex: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.shape(HeroDetailsPropTypes)).isRequired,\r\n  favoriteHeroes: PropTypes.object.isRequired,\r\n  toggleFavoriteHero: PropTypes.func.isRequired,\r\n  setObservedItemIndex: PropTypes.func.isRequired,\r\n  relationships: PropTypes.shape(RelationshipsStorePropTypes).isRequired,\r\n  getFilmData: PropTypes.func.isRequired,\r\n  getPlanetData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const PeoplePageContent = Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Pagination } from \"semantic-ui-react\";\r\n\r\nconst Footer = ({\r\n  pageName,\r\n  activePage = 1,\r\n  totalPages,\r\n  onPageChange,\r\n  loading,\r\n}) => {\r\n  const paginationConfig = !totalPages\r\n    ? {\r\n        totalPages: 10,\r\n        disabled: true,\r\n      }\r\n    : {\r\n        activePage,\r\n        totalPages,\r\n        ellipsisItem: { className: \"disabled\", content: \"...\" },\r\n        async onPageChange(_, { activePage }) {\r\n          await onPageChange(activePage);\r\n        },\r\n        disabled: loading,\r\n      };\r\n  return (\r\n    <div className={`page-footer ${pageName}__footer`}>\r\n      <Pagination {...paginationConfig} firstItem={null} lastItem={null} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  activePage: PropTypes.string,\r\n  totalPages: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n\r\nexport const PeoplePageFooter = Footer;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { HeroDetails } from \"../../models/dataModels\";\r\n\r\nimport {\r\n  setPeoplePagedisplayType as setPeoplePagedisplayTypeAction,\r\n  getPeopleData as getPeopleDataAction,\r\n  clearPeopleData as clearPeopleDataAction,\r\n  toggleFavoritesHeroes as toggleFavoritesHeroesAction,\r\n  getFavoriteHeroes as getFavoriteHeroesAction,\r\n  setObservedItemIndex as setObservedItemIndexAction,\r\n  setPeoplePageFavoritesViewMode as setPeoplePageFavoritesViewModeAction,\r\n} from \"../../actions/peopleActions\";\r\n\r\nimport {\r\n  getFilmData as getFilmDataAction,\r\n  getPlanetData as getPlanetDataAction,\r\n} from \"../../actions/relationshipsActions\";\r\n\r\nimport { PeoplePageHeader } from \"./Header\";\r\nimport { PeoplePageContent } from \"./Content\";\r\nimport { PeoplePageFooter } from \"./Footer\";\r\n\r\nclass PeoplePage extends PureComponent {\r\n  pageName = \"people-page\";\r\n\r\n  async componentDidMount() {\r\n    const { data, actions } = this.props;\r\n    const { people, currentPage } = data.peopleData;\r\n    if (!people.length) {\r\n      await actions.getPeople(currentPage);\r\n      await actions.getFavoriteHeroes();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.actions.clearPeopleData();\r\n  }\r\n\r\n  getPaginationsItemsCount = () => {\r\n    const { totalPeopleCount, itemsPerPage } = this.props.data.peopleData;\r\n    return !!totalPeopleCount ? Math.ceil(totalPeopleCount / itemsPerPage) : 10;\r\n  };\r\n\r\n  onPaginationPageChange = async (page) => {\r\n    const { data, actions } = this.props;\r\n    if (data.peopleData.currentPage != page) {\r\n      await actions.getPeople(page, data.peopleData.filterName);\r\n    }\r\n  };\r\n\r\n  showFavoriteOnly = (state) => {\r\n    const { showFavoritesOnly } = this.props.data.peopleData;\r\n    if (showFavoritesOnly !== state) {\r\n      this.props.actions.setPeoplePageFavoritesViewMode(state);\r\n    }\r\n  };\r\n\r\n  filterByName = async (value) => {\r\n    const { data, actions } = this.props;\r\n    if (data.peopleData.filterName !== value) {\r\n      await actions.getPeople(1, value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, actions } = this.props;\r\n    const { peopleData, relationships, paginatedData } = data;\r\n    const {\r\n      setPeoplePagedisplayType,\r\n      toggleFavoriteHero,\r\n      setObservedItemIndex,\r\n      getFilmData,\r\n      getPlanetData,\r\n    } = actions;\r\n\r\n    const paginationsCount = this.getPaginationsItemsCount();\r\n    return (\r\n      <div className={`page-wrapper ${this.pageName}`}>\r\n        <PeoplePageHeader\r\n          pageName={this.pageName}\r\n          isFavorites={peopleData.showFavoritesOnly}\r\n          showFavoriteOnly={this.showFavoriteOnly}\r\n          displayType={peopleData.displayType}\r\n          setPeoplePagedisplayType={setPeoplePagedisplayType}\r\n          search={this.filterByName}\r\n        />\r\n        <PeoplePageContent\r\n          pageName={this.pageName}\r\n          loading={peopleData.loading}\r\n          isFavorites={peopleData.showFavoritesOnly}\r\n          displayType={peopleData.displayType}\r\n          data={paginatedData}\r\n          favoriteHeroes={peopleData.favoriteHeroes}\r\n          toggleFavoriteHero={toggleFavoriteHero}\r\n          observerIndex={peopleData.observerIndex}\r\n          setObservedItemIndex={setObservedItemIndex}\r\n          getFilmData={getFilmData}\r\n          getPlanetData={getPlanetData}\r\n          relationships={relationships}\r\n        />\r\n        <PeoplePageFooter\r\n          pageName={this.pageName}\r\n          loading={peopleData.loading}\r\n          activePage={peopleData.currentPage}\r\n          totalPages={paginationsCount}\r\n          onPageChange={this.onPaginationPageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { peopleData, relationships } = state;\r\n\r\n  const { people, currentPage, itemsPerPage } = peopleData;\r\n\r\n  //const paginatedData = people.filter((x) => x && x.fromPage === currentPage);\r\n\r\n  const paginatedData = people\r\n    .slice(itemsPerPage * (currentPage - 1), itemsPerPage * currentPage)\r\n    .filter((x) => typeof x !== \"undefined\")\r\n    .map((x) => x || new HeroDetails());\r\n\r\n  return {\r\n    data: {\r\n      peopleData,\r\n      relationships,\r\n      paginatedData,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      setPeoplePagedisplayType: (type) => {\r\n        dispatch(setPeoplePagedisplayTypeAction(type));\r\n      },\r\n      getPeople: async (page, search = \"\") => {\r\n        await dispatch(getPeopleDataAction(page, search));\r\n      },\r\n      clearPeopleData: () => {\r\n        dispatch(clearPeopleDataAction());\r\n      },\r\n      toggleFavoriteHero: (id, name) => {\r\n        dispatch(toggleFavoritesHeroesAction({[id]: name}));\r\n      },\r\n      getFavoriteHeroes: async () => {\r\n        await dispatch(getFavoriteHeroesAction());\r\n      },\r\n      setObservedItemIndex: (index) => {\r\n        dispatch(setObservedItemIndexAction(index));\r\n      },\r\n      setPeoplePageFavoritesViewMode: (state) => {\r\n        dispatch(setPeoplePageFavoritesViewModeAction(state));\r\n      },\r\n      getFilmData: async (id) => {\r\n        await dispatch(getFilmDataAction(id));\r\n      },\r\n      getPlanetData: async (id) => {\r\n        await dispatch(getPlanetDataAction(id));\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst PeoplePageComponent = connect(mapStateToProps, mapDispatchToProps, null, {\r\n  pure: true,\r\n  areOwnPropsEqual: (nextOwnProps, ownProps) => {\r\n    return nextOwnProps.location.pathname === ownProps.location.pathname;\r\n  },\r\n  areStatesEqual: (next, prev) => {\r\n    //update page only when peopleData change\r\n    return (\r\n      !!next.peopleData.timeStamp &&\r\n      next.peopleData.timeStamp === prev.peopleData.timeStamp &&\r\n      next.relationships.timeStamp === prev.relationships.timeStamp\r\n    );\r\n  },\r\n})(PeoplePage);\r\n\r\nexport default withRouter((props) => <PeoplePageComponent {...props} />);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./style/index.scss\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport { RouteData } from \"./data\";\r\n\r\nimport { checkCookiesOnExists } from \"./helpers\";\r\n\r\nimport Layout from \"./components/generaComponents/Layout\";\r\n\r\nimport PageAreNotExist from \"./components/InfoPages/PageAreNotExists\";\r\n\r\nimport AuthPage from \"./components/AuthorizePage\";\r\nimport PeopleListPage from \"./components/PeoplePage\";\r\n\r\nexport default class App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <Route exact path={RouteData.Login} component={AuthPage} />\r\n          <Layout>\r\n            <Switch>\r\n              <InnerRoute\r\n                exact\r\n                path={[RouteData.Base, RouteData.People]}\r\n                component={PeopleListPage}\r\n              />\r\n              <InnerRoute component={PageAreNotExist} />\r\n            </Switch>\r\n          </Layout>\r\n        </Switch>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst InnerRoute = ({ exact, path, component }) => {\r\n  return checkCookiesOnExists() ? (\r\n    <Route exact={exact} path={path} component={component} />\r\n  ) : (\r\n    <Redirect to={{ pathname: RouteData.Login }} />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={'/'}>\r\n    <App />\r\n  </HashRouter>,\r\n  rootElement);\r\n"],"sourceRoot":""}