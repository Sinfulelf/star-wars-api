{"version":3,"sources":["models/generalModels/IdUrlModel.js","data/routeData.js","data/urlData.js","models/dataModels/planetDetailsModel.js","models/dataModels/heroDetailsModel.js","models/dataModels/filmDetailModel.js","models/dataModels/peoplePageDispaType.js","models/storeModels/peopleStoreModel.js","models/storeModels/userInfoStoreModel.js","models/storeModels/relationshipsStoreModel.js","helpers/cookiesHelpers.js","helpers/httpHelpers.js","helpers/storageHelpers.js","helpers/validationHelper.js","helpers/firebaseHelpers.js","actions/peopleActions.js","actions/userInfoActions.js","actions/relationshipsActions.js","reducer/userInfoReducer.js","reducer/peopleReducer.js","reducer/relationshipsReducer.js","reducer/index.js","store/index.js","components/helpersComponents/Mocks/ParagraphMock.js","components/generaComponents/NavigationBar.js","components/generaComponents/Layout.js","components/InfoPages/PageAreNotExists.js","components/helpersComponents/Icons/IconPattern.js","components/helpersComponents/Icons/DeathStar.js","components/AuthorizePage/SingInForm.js","components/AuthorizePage/RegisterForm.js","components/AuthorizePage/index.js","components/PeoplePage/HeaderFilterInput.js","components/PeoplePage/HeaderPagination.js","components/PeoplePage/Header.js","components/PeoplePage/personCardConfig.js","components/PeoplePage/HeroInfo/HeroProperty.js","components/PeoplePage/HeroInfo/HeroInfoProperties.js","components/PeoplePage/HeroInfo/HeroHomeProperty.js","components/PeoplePage/HeroInfo/HeroFilmsProperty.js","components/PeoplePage/HeroInfo/index.js","components/PeoplePage/PersonCard.js","components/PeoplePage/Content.js","components/PeoplePage/Footer.js","components/PeoplePage/index.js","App.js","index.js"],"names":["IdUrlModel","pettern","this","urlValue","val","id","matchVal","exec","length","Number","replace","IdUrlModelPropTypes","PT","oneOfType","string","number","isRequired","url","RouteData","baseStarWarsAPIUrl","process","StarWarsUrlData","GET_PEOPLE","GET_PLANET","GET_FILM","StartWarsUrlGetIdRegEx","PlanetDetails","name","population","climate","PlanetDetailsPropTypes","HeroDetails","height","mass","hairColour","skinColour","eyeColour","birthYear","gender","planet","films","loaded","fromPage","resultItem","entity","birth_year","eye_color","map","x","FilmDetail","hair_color","homeworld","skin_color","shape","arrayOf","FilmDetailPropTypes","title","releaseDate","instanceOf","Date","PeoplePageDispaType","Object","freeze","list","cards","PeopleStore","timeStamp","loading","people","totalPeopleCount","observerIndex","filterName","currentPage","uploadedPages","favoriteHeroes","itemsPerPage","exFavorite","selectedCardId","displayType","showFavoritesOnly","UserInfoStore","bool","object","oneOf","userName","offlineMode","user","checkCookiesOnExists","document","cookie","updateCookiesInterval","userInfoKey","setUserCookies","userInfo","time","setTimeForCookies","clearInterval","setInterval","toGMTString","seconds","now","getTime","setTime","getUserInfoFromCookie","ca","split","i","c","charAt","substring","indexOf","JSON","parse","ex","console","log","getData","urlData","postBody","a","input","getUrl","fetch","headers","Accept","method","body","stringify","response","json","data","baseUrl","param","query","URLSearchParams","toString","favoritesHeroesKey","getFavoritesHeroesFromStorage","favoritesHeroes","localStorage","getItem","setFavoritesHeroesToStorage","items","setItem","validateForm","email","password","validateEmail","validatePassword","realAuthDomainName","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseDb","database","createUserWithFirebase","auth","setPersistence","Auth","Persistence","LOCAL","createUserWithEmailAndPassword","Error","signInWithFormFirebase","signInWithEmailAndPassword","signInWithGoogleFirebase","provider","GoogleAuthProvider","signInWithPopup","signOut","PeopleActions","setPeoplePageLoadingState","state","dispatch","type","payload","setPeoplePageLoadingStateDispatch","setPeoplePagedisplayTypeDispatch","setPeoplePagePaginationPageDispatch","page","clearPeopleData","getPeopleDataDispatch","count","search","getPeopleData","getState","pageStr","peopleData","newSearch","results","new","getPeopleFavoriteData","setPeoplePageFavoritesViewModeDispatch","toggleFavoritesHeroesDispatch","setSelectedCardItem","setSelectedCardItemDispatch","favoritesIsAlreadyLoaded","getFavoriteHeroes","favorites","uid","ref","once","value","setObservedItemIndex","index","setObservedItemIndexDispatch","toLowerCase","filteredItems","keys","key","filter","idsPerPage","slice","itemsToUpload","item","find","push","mockItem","updateHeroData","updateHeroDataDispatch","hero","UserInfoActions","clearUserInfo","setUserInfo","setUserInfoDispatch","getAuthorizedOnlineUser","reloginCallBack","userExistsCallback","userNotExistsCallback","getAuthorizedOnlineUserDispatch","onAuthStateChanged","RelationshipsActions","getFilmData","relationships","filmsData","release_date","model","film","warn","getPlanetData","planestsData","CLEAR_USER_INFO","SET_USER_INFO","GET_AUTHORIZED_ONLINE_USER_DATA","initialState","userInfoReducer","handleActions","userData","SET_PEOPLE_PAGE_LOADING_STATE","SET_PEOPLE_PAGE_DISPAY_TYPE","SET_PEOPLE_PAGE_PAGINATION_PAGE","RESET_PEOPLE_DATA","CLEAR_PEOPLE_DATA","GET_PEOPLE_DATA","UPDATE_HERO_DATA","SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE","TOGGLE_FAVORITE_HEROES","SET_OBSERVED_ITEM_INDEX","SET_SELECTED_CARD_ITEM","peopleReducer","newUploadedPages","Set","clearUploadedPages","pageToClear","shift","updatedPeopleList","firstUpdateIndex","newFavorites","GET_FILM_DATA","GET_PLANET_DATA","relationshipsReducer","relationshipsData","rootReducer","combineReducers","store","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","configureStore","userInfoState","peopleState","relationshipsState","ParagraphMock","width","className","style","NavigationBarConnected","connect","ownProps","actions","useState","showHelloLabel","setShowHelloLabel","useEffect","Transition","visible","animation","duration","marginBottom","fontSize","Button","animated","as","Link","to","marginLeft","Content","hidden","Icon","size","flipped","NavigationBarComponent","props","Layout","history","getUserInfoDataFromStorages","location","pathname","Divider","fitted","children","PureComponent","LayoutComponent","withRouter","logout","setUserInfoAction","getAuthorizedOnlineUserAction","PageAreNotExist","Segment","maxWidth","margin","padding","Grid","centered","columns","Column","color","marginTop","fill","stroke","y","DeathStarIcon","IconPattern","viewBox","xmlns","r","cy","cx","d","SingInForm","setVisible","loginWithForm","loginViaGoogleForm","error","removeErrorState","Form","widths","Input","icon","iconPosition","label","placeholder","onChange","content","primary","onClick","target","emailEl","querySelector","passwordEl","Message","maginLeft","display","background","RegisterForm","create","onSubmit","disabled","getCapitalizedEmailStart","emailStart","toUpperCase","AuthPageComponent","clearUserInfoAction","authOffline","authOnline","displayName","cutomDisplayName","pure","areOwnPropsEqual","cookies","temp","eqPos","substr","deleteAllCookies","signOutFirebase","showRegisterForm","setShowRegisterForm","formLoading","setFormLoading","singInErrorState","setSingInErrorState","registrationErrorState","setRegistrationErrorState","Dimmer","active","inverted","Loader","Subheader","relaxed","stackable","divided","verticalAlign","Popup","trigger","basic","Group","corner","vertical","rel","href","HeaderFilterInput","filterValue","setFilterValue","labelPosition","HeaderPagination","isFavorites","showFavoriteOnly","Menu","pointing","secondary","Item","PeoplePageHeader","pageName","setPeoplePagedisplayType","Field","Checkbox","slider","checked","personCardConfig","stylesConfigs","gap","userInfoMargin","horizontalGap","verticalGap","selectedCardStyle","left","right","top","zIndex","shouldRecalculateStyle","nextProps","prevState","wrapperWidth","styleConditions","recalculateStyle","cardSpace","rowUsableWidth","Math","floor","totalLeftWidth","row","HeroProperty","paddingRight","HeroInfoProperties","HeroHomeProperty","planets","HeroFilmsProperty","HeroInfo","uploadHeroAdditionalData","showFullInfo","prevProps","PersonCard","isActive","heartIconFilled","setCardActiveState","setState","setHeartIconFilled","toggleFavoriteHero","setSelectedCard","favoritesNotUploaded","isFavorite","isObserved","itemCardIdSelected","onMouseUp","_","onMouseLeave","onMouseDown","onMouseEnter","e","stopPropagation","PeoplePageContent","paddingTop","paddingBottom","overflow","handleWidth","paddingLeft","PeoplePageFooter","activePage","totalPages","onPageChange","paginationConfig","ellipsisItem","Pagination","firstItem","lastItem","PeoplePage","getPaginationsItemsCount","ceil","onPaginationPageChange","getPeople","setPeoplePageFavoritesViewMode","filterByName","paginatedData","paginationsCount","PeoplePageComponent","setPeoplePagedisplayTypeAction","getPeopleDataAction","clearPeopleDataAction","set","setTimeout","getFavoriteHeroesAction","setObservedItemIndexAction","setPeoplePageFavoritesViewModeAction","getFilmDataAction","getPlanetDataAction","setSelectedCardItemAction","nextOwnProps","areStatesEqual","next","prev","dotenv","config","path","App","exact","component","AuthPage","PeopleListPage","InnerRoute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.644b6cf5.chunk.js","sourcesContent":["import PT from \"prop-types\";\r\n\r\nexport class IdUrlModel {\r\n  constructor(pettern) {\r\n    this.#pattern = pettern;\r\n  }\r\n  #pattern = \"\";\r\n\r\n  get url() {\r\n    return this.urlValue;\r\n  }\r\n  set url(val) {\r\n    if (!this.id && val) {\r\n      const matchVal = this.#pattern.exec(val);\r\n      if (matchVal && matchVal.length >= 2) {\r\n        this.id = Number(matchVal[1].replace(\"/\", \"\"));\r\n      }\r\n    }\r\n    this.urlValue = val;\r\n  }\r\n}\r\n\r\nexport const IdUrlModelPropTypes = {\r\n  id: PT.oneOfType([PT.string, PT.number]).isRequired,\r\n  url: PT.string,\r\n};\r\n","export const RouteData = {\r\n  Base: \"/\",\r\n  Login: \"/login\",\r\n  People: \"/people\",\r\n  Hero: \"/hero/:id\",\r\n\r\n  NotExists: '/404'\r\n};\r\n","const baseStarWarsAPIUrl = process.env.REACT_APP_STARWARS_API_URL;\r\n\r\nexport const StarWarsUrlData = {\r\n  GET_PEOPLE: `${baseStarWarsAPIUrl}/people/`,\r\n  GET_PLANET: `${baseStarWarsAPIUrl}/planets/`,\r\n  GET_FILM: `${baseStarWarsAPIUrl}/films/`,\r\n};\r\n\r\nexport const StartWarsUrlGetIdRegEx = {\r\n  GET_PEOPLE_REGEX: /people\\/(.*)/,\r\n  GET_PLANET_REGEX: /planets\\/(.*)/,\r\n  GET_FILM_REGEX: /films\\/(.*)/,\r\n};","import PT from \"prop-types\";\r\n\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class PlanetDetails extends IdUrlModel {\r\n  constructor(url) {\r\n    super(StartWarsUrlGetIdRegEx.GET_PLANET_REGEX);\r\n    this.url = url;\r\n  }\r\n\r\n  name = \"\";\r\n  population = 0;\r\n  climate = \"\";\r\n}\r\n\r\nexport const PlanetDetailsPropTypes ={\r\n  ...IdUrlModelPropTypes,\r\n  name: PT.string,\r\n  population: PT.number,\r\n  climate: PT.string,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport {\r\n  PlanetDetails,\r\n  FilmDetail,\r\n  FilmDetailPropTypes,\r\n  PlanetDetailsPropTypes,\r\n} from \"./\";\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class HeroDetails extends IdUrlModel {\r\n  constructor() {\r\n    super(StartWarsUrlGetIdRegEx.GET_PEOPLE_REGEX);\r\n  }\r\n  name = \"\";\r\n  height = \"\";\r\n  mass = 0;\r\n  hairColour = \"\";\r\n  skinColour = \"\";\r\n  eyeColour = \"\";\r\n  birthYear = \"\";\r\n  gender = \"\";\r\n  planet = null;\r\n  films = [];\r\n\r\n  loaded = true;\r\n\r\n  fromPage = \"\";\r\n\r\n  static new(resultItem) {\r\n    const entity = new HeroDetails();\r\n\r\n    if (\"birth_year\" in resultItem) entity.birthYear = resultItem.birth_year;\r\n    if (\"eye_color\" in resultItem) entity.eyeColour = resultItem.eye_color;\r\n    if (\"films\" in resultItem)\r\n      entity.films = (resultItem.films || []).map((x) => new FilmDetail(x));\r\n    if (\"gender\" in resultItem) entity.gender = resultItem.gender;\r\n    if (\"hair_color\" in resultItem) entity.hairColour = resultItem.hair_color;\r\n    if (\"height\" in resultItem) entity.height = resultItem.height;\r\n    if (\"homeworld\" in resultItem)\r\n      entity.planet = new PlanetDetails(resultItem.homeworld);\r\n    if (\"mass\" in resultItem) entity.mass = resultItem.mass;\r\n    if (\"name\" in resultItem) entity.name = resultItem.name;\r\n    if (\"skin_color\" in resultItem) entity.skinColour = resultItem.skin_color;\r\n    if (\"url\" in resultItem) entity.url = resultItem.url;\r\n\r\n    return entity;\r\n  }\r\n}\r\n\r\nexport const HeroDetailsPropTypes = {\r\n  ...IdUrlModelPropTypes,\r\n  name: PT.string.isRequired,\r\n  height: PT.oneOfType([PT.number, PT.string]).isRequired,\r\n  mass: PT.oneOfType([PT.number, PT.string]).isRequired,\r\n  hairColour: PT.string.isRequired,\r\n  skinColour: PT.string.isRequired,\r\n  eyeColour: PT.string.isRequired,\r\n  birthYear: PT.string.isRequired,\r\n  gender: PT.string.isRequired,\r\n  planet: PT.shape(PlanetDetailsPropTypes),\r\n  films: PT.arrayOf(PT.shape(FilmDetailPropTypes)).isRequired,\r\n  fromPage: PT.oneOfType([PT.string, PT.number]).isRequired,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class FilmDetail extends IdUrlModel {\r\n  constructor(url) {\r\n    super(StartWarsUrlGetIdRegEx.GET_FILM_REGEX);\r\n    this.url = url;\r\n  }\r\n\r\n  title = \"\";\r\n  releaseDate = null;\r\n}\r\n\r\nexport const FilmDetailPropTypes = {\r\n  ...IdUrlModelPropTypes,\r\n  title: PT.string.isRequired,\r\n  releaseDate: PT.oneOfType([PT.string, PT.instanceOf(Date)]),\r\n};\r\n","export const PeoplePageDispaType = Object.freeze({\r\n  list: \"list\",\r\n  cards: \"cards\",\r\n});","import PT from \"prop-types\";\r\nimport { HeroDetails, PeoplePageDispaType } from \"../dataModels\";\r\n\r\nexport class PeopleStore {\r\n  timeStamp = 0;\r\n  loading = true;\r\n  people = [];\r\n  totalPeopleCount = 0;\r\n\r\n  observerIndex = 0;\r\n\r\n  filterName = \"\";\r\n\r\n  currentPage = \"1\";\r\n  uploadedPages = [];\r\n\r\n  favoriteHeroes = null;\r\n\r\n  itemsPerPage = 10;\r\n  exFavorite = false;\r\n\r\n  selectedCardId = null;\r\n\r\n  displayType = PeoplePageDispaType.list;\r\n  showFavoritesOnly = false;\r\n}\r\n\r\nexport const PeopleStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  loading: PT.bool,\r\n  people: PT.arrayOf(PT.instanceOf(HeroDetails)),\r\n  totalPeopleCount: PT.number,\r\n  observerIndex: PT.number,\r\n  currentPage: PT.string,\r\n  filterName: PT.string,\r\n  uploadedPages: PT.arrayOf(PT.string),\r\n\r\n  favoriteHeroes: PT.object,\r\n\r\n  exFavorite: PT.bool,\r\n\r\n  displayType: PT.oneOf([PeoplePageDispaType.list, PeoplePageDispaType.cards]),\r\n  showFavoritesOnly: PT.bool,\r\n\r\n  selectedCardId: PT.number,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nexport class UserInfoStore {\r\n  timeStamp = 0;\r\n\r\n  userName = \"\";\r\n  offlineMode = true;\r\n  user = null;\r\n}\r\n\r\nexport const UserInfoStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  userName: PT.string,\r\n  offlineMode: PT.bool,\r\n  userId: PT.object,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nexport class RelationshipsStore {\r\n  timeStamp = 0;\r\n\r\n  filmsData = {};\r\n  planestsData = {};\r\n}\r\n\r\nexport const RelationshipsStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  filmsData: PT.object,\r\n  planestsData: PT.object,\r\n};\r\n","import { UserInfoStore } from \"../models/storeModels\";\r\n\r\n/**\r\n * Coockies helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.cookiesHelpers\r\n */\r\n\r\n/**\r\n * Check site cookies on exists and not expires;\r\n *\r\n * @returns {boolean}\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function checkCookiesOnExists() {\r\n  const cookie = !!document.cookie;\r\n  return cookie;\r\n}\r\n\r\nlet updateCookiesInterval = 0;\r\nconst userInfoKey = \"userInfo\";\r\n/**\r\n * Set user data to cookies;\r\n * <pre>\r\n * - When cookie expires and session is actiove, we reset they;\r\n * </pre>\r\n * @param {string} userInfo auth user stringified data\r\n * @param {number} time additional time to expires (default: 10 min)\r\n *\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function setUserCookies(userInfo, time = 600_000) {\r\n  document.cookie = `${userInfoKey}=${userInfo}; expires=${setTimeForCookies(\r\n    time\r\n  )}`;\r\n  if (updateCookiesInterval) {\r\n    clearInterval(updateCookiesInterval);\r\n  }\r\n\r\n  if (time) {\r\n    updateCookiesInterval = setInterval(() => {\r\n      document.cookie = `${document.cookie}; expires=${setTimeForCookies(\r\n        new Date(time).toGMTString()\r\n      )}`;\r\n    }, time * 0.8);\r\n  }\r\n}\r\n\r\nexport function deleteAllCookies() {\r\n  const cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n      let temp = cookies[i];\r\n      const eqPos = temp.indexOf(\"=\");\r\n      const name = eqPos > -1 ? temp.substr(0, eqPos) : temp;\r\n      document.cookie = name + \"=;expires=\"+new Date(0).toGMTString();\r\n  }\r\n}\r\n\r\nfunction setTimeForCookies(seconds) {\r\n  const now = new Date();\r\n  let time = now.getTime();\r\n\r\n  time += seconds * 1000;\r\n  now.setTime(time);\r\n  return now;\r\n}\r\n\r\n/**\r\n * Get user Info data from cookies; (code from `w3schools`)\r\n *\r\n * @returns instanse of userInfo\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function getUserInfoFromCookie() {\r\n  try {\r\n    if (checkCookiesOnExists()) {\r\n      const ca = document.cookie.split(\";\");\r\n      for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) === \" \") {\r\n          c = c.substring(1);\r\n        }\r\n        if (c.indexOf(userInfoKey) === 0) {\r\n          return JSON.parse(c.substring(userInfoKey.length + 1, c.length));\r\n        }\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    console.log(`getUserInfoFromCookie exception: ${ex}`);\r\n  }\r\n  return new UserInfoStore();\r\n}\r\n","/**\r\n * Networks helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.httpHelpers\r\n */\r\n\r\n/**\r\n * Get json data via fetch;\r\n * @param {Object} urlData `{ baseUrl, param, query }`\r\n * @param {RequestInit} postBody request body\r\n *\r\n * @memberof Helpers.httpHelpers\r\n */\r\nexport async function getData(urlData, postBody) {\r\n  const input = getUrl(urlData);\r\n\r\n  let response = !postBody\r\n    ? await fetch(input)\r\n    : await fetch(input, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(postBody),\r\n      });\r\n  let data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport function getUrl(urlData) {\r\n  const { baseUrl, param, query } = urlData;\r\n  let url = baseUrl;\r\n  if (param) {\r\n    url += `${param}/`;\r\n  }\r\n  if (query) {\r\n    url += \"?\" + new URLSearchParams(query).toString();\r\n  }\r\n  return url;\r\n}","/**\r\n * LocalStorage helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.storageHelpers\r\n */\r\n\r\nconst favoritesHeroesKey = \"star-wars-api-favorites-heroes\";\r\n/**\r\n * Get favorites heroes from localStorage;\r\n *\r\n * @returns {Object} id-name of heroes\r\n *\r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function getFavoritesHeroesFromStorage() {\r\n  const favoritesHeroes = localStorage.getItem(favoritesHeroesKey);\r\n  if (favoritesHeroes) {\r\n    return JSON.parse(favoritesHeroes);\r\n  }\r\n  return [];\r\n}\r\n\r\n/**\r\n * Set favorites heroes to localStorage;\r\n * @param {Object} items id-name of favorite heroes\r\n *\r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function setFavoritesHeroesToStorage(items) {\r\n  localStorage.setItem(favoritesHeroesKey, JSON.stringify(items));\r\n}","export function validateEmail(email) {\r\n  if (email) {\r\n    const val = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.exec(email);\r\n    if (val && val.length) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function validatePassword(password) {\r\n  return (\r\n    password && password.length && password.length > 5 && password.length < 25\r\n  );\r\n}\r\n\r\nexport function validateForm(email, password) {\r\n  return validateEmail(email) && validatePassword(password);\r\n}\r\n","import firebase from \"firebase\";\r\nimport { validateForm } from \".\";\r\n\r\nconst realAuthDomainName = `${process.env.NODE_ENV === \"production\" ? \"https://\" : \"\"}${\r\n  process.env.REACT_APP_FIREBASE_AUTH_DOMAIN\r\n}`;\r\n\r\nconst getFirebaseConfig = () => ({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: realAuthDomainName,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORE_BUCJET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGIN_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nfirebase.initializeApp(getFirebaseConfig());\r\n\r\nexport const firebaseDb = firebase.database();\r\n\r\nexport async function createUserWithFirebase(email, password) {\r\n  try {\r\n    if (validateForm(email, password)) {\r\n      const auth = firebase.auth();\r\n      await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n      return await auth.createUserWithEmailAndPassword(email, password);\r\n    } else {\r\n      throw Error(\"incorrect form\");\r\n    }\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signInWithFormFirebase(email, password) {\r\n  try {\r\n    if (validateForm(email, password)) {\r\n      const auth = firebase.auth();\r\n      await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n      return await auth.signInWithEmailAndPassword(email, password);\r\n    } else {\r\n      throw Error(\"incorrect form\");\r\n    }\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signInWithGoogleFirebase() {\r\n  try {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const auth = firebase.auth();\r\n    await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n    return await auth.signInWithPopup(provider);\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport function observeFirebaseUser(userExistsCallback, userNotExistsCallback) {\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      if (userExistsCallback && typeof userExistsCallback === \"function\")\r\n        userExistsCallback(user);\r\n    } else {\r\n      if (userNotExistsCallback && typeof userNotExistsCallback === \"function\")\r\n        userNotExistsCallback();\r\n    }\r\n  });\r\n}\r\n\r\nexport async function signOutFirebase() {\r\n  await firebase.auth().signOut();\r\n}\r\n","import { getData } from \"../helpers\";\r\nimport { StarWarsUrlData } from \"../data\";\r\nimport { HeroDetails } from \"../models/dataModels\";\r\n\r\nimport {\r\n  firebaseDb,\r\n  getFavoritesHeroesFromStorage,\r\n  setFavoritesHeroesToStorage,\r\n} from \"../helpers\";\r\n\r\nexport const PeopleActions = {\r\n  SET_PEOPLE_PAGE_LOADING_STATE: \"SET_PEOPLE_PAGE_LOADING_STATE\",\r\n  SET_PEOPLE_PAGE_DISPAY_TYPE: \"SET_PEOPLE_PAGE_DISPAY_TYPE\",\r\n  SET_PEOPLE_PAGE_PAGINATION_PAGE: \"SET_PEOPLE_PAGE_PAGINATION_PAGE\",\r\n  RESET_PEOPLE_DATA: \"RESET_PEOPLE_DATA\",\r\n  CLEAR_PEOPLE_DATA: \"CLEAR_PEOPLE_DATA\",\r\n  GET_PEOPLE_DATA: \"GET_PEOPLE_DATA\",\r\n  UPDATE_HERO_DATA: \"UPDATE_HERO_DATA\",\r\n  SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE: \"SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE\",\r\n\r\n  SET_SELECTED_CARD_ITEM: \"SET_SELECTED_CARD_ITEM\",\r\n\r\n  TOGGLE_FAVORITE_HEROES: \"TOGGLE_FAVORITE_HEROES\",\r\n  SET_OBSERVED_ITEM_INDEX: \"SET_OBSERVED_ITEM_INDEX\",\r\n};\r\n\r\nconst setPeoplePageLoadingStateDispatch = (state) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_LOADING_STATE,\r\n  payload: { state },\r\n});\r\n\r\nfunction setPeoplePageLoadingState(state) {\r\n  return (dispatch) => {\r\n    dispatch(setPeoplePageLoadingStateDispatch(state));\r\n  };\r\n}\r\n\r\nconst setPeoplePagedisplayTypeDispatch = (type) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_DISPAY_TYPE,\r\n  payload: { type },\r\n});\r\n\r\nexport function setPeoplePagedisplayType(type) {\r\n  return async (dispatch, getState) => {\r\n    const { peopleData } = getState();\r\n    if (peopleData.displayType !== type) {\r\n      dispatch(setPeoplePagedisplayTypeDispatch(type));\r\n    }\r\n  };\r\n}\r\n\r\nconst setPeoplePagePaginationPageDispatch = (page) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_PAGINATION_PAGE,\r\n  payload: { page },\r\n});\r\n\r\nconst resetPeopleDataDispatch = () => ({\r\n  type: PeopleActions.RESET_PEOPLE_DATA,\r\n});\r\n\r\nconst clearPeopleDataDispatch = () => ({\r\n  type: PeopleActions.CLEAR_PEOPLE_DATA,\r\n});\r\n\r\nexport function clearPeopleData() {\r\n  return (dispatch) => {\r\n    dispatch(clearPeopleDataDispatch());\r\n  };\r\n}\r\n\r\nconst getPeopleDataDispatch = (data, count, page, search) => ({\r\n  type: PeopleActions.GET_PEOPLE_DATA,\r\n  payload: { data, count, page, search },\r\n});\r\n\r\nexport function getPeopleData(page, search) {\r\n  return async (dispatch, getState) => {\r\n    const pageStr = (page || 1).toString();\r\n    const { peopleData } = getState();\r\n    const newSearch = search !== peopleData.filterName;\r\n    if (newSearch) {\r\n      dispatch(resetPeopleDataDispatch());\r\n    }\r\n    if (!peopleData.showFavoritesOnly) {\r\n      if (newSearch || peopleData.uploadedPages.indexOf(pageStr) === -1) {\r\n        try {\r\n          dispatch(setPeoplePageLoadingState(true));\r\n\r\n          const query = { page };\r\n          if (search) query.search = search;\r\n\r\n          const { count, results } = await getData({\r\n            baseUrl: StarWarsUrlData.GET_PEOPLE,\r\n            query,\r\n          });\r\n          if (results) {\r\n            dispatch(\r\n              getPeopleDataDispatch(\r\n                results.map((x) => HeroDetails.new(x)),\r\n                count,\r\n                pageStr,\r\n                search\r\n              )\r\n            );\r\n          } else {\r\n            const exMessage = \"No data from response\";\r\n            throw exMessage;\r\n          }\r\n        } catch (ex) {\r\n          console.log(\"ex\", ex);\r\n          //todo Add message about exception\r\n        } finally {\r\n          dispatch(setPeoplePageLoadingState(false));\r\n        }\r\n      } else {\r\n        dispatch(setPeoplePagePaginationPageDispatch(pageStr));\r\n      }\r\n    } else {\r\n      await dispatch(getPeopleFavoriteData(page, search));\r\n    }\r\n  };\r\n}\r\n\r\nconst setPeoplePageFavoritesViewModeDispatch = (state) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE,\r\n  payload: { state },\r\n});\r\nexport function setPeoplePageFavoritesViewMode(state) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setPeoplePageFavoritesViewModeDispatch(state));\r\n\r\n    const { peopleData } = getState();\r\n    const { filterName } = peopleData;\r\n    if (state) {\r\n      await dispatch(getPeopleFavoriteData(1, filterName));\r\n    } else {\r\n      //dispatch(resetPeopleDataDispatch());\r\n      await dispatch(getPeopleData(1, filterName));\r\n    }\r\n  };\r\n}\r\n\r\nconst toggleFavoritesHeroesDispatch = (items) => ({\r\n  type: PeopleActions.TOGGLE_FAVORITE_HEROES,\r\n  payload: { items },\r\n});\r\nexport function toggleFavoritesHeroes(items) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(toggleFavoritesHeroesDispatch(items));\r\n    const { userInfo, peopleData } = getState();\r\n    if (userInfo.offlineMode) {\r\n      setFavoritesHeroesToStorage(peopleData.favoriteHeroes);\r\n    } else {\r\n      const { user } = userInfo;\r\n      if (user && user.uid) {\r\n        try {\r\n          firebaseDb\r\n            .ref(user.uid)\r\n            .set(JSON.stringify(peopleData.favoriteHeroes));\r\n        } catch (ex) {\r\n          console.log(ex);\r\n        }\r\n      }\r\n    }\r\n    if (peopleData.showFavoritesOnly) {\r\n      setTimeout(() => {\r\n        const { currentPage, filterName } = peopleData;\r\n        dispatch(getPeopleFavoriteData(currentPage, filterName));\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nconst setSelectedCardItemDispatch = (id) => ({\r\n  type: PeopleActions.SET_SELECTED_CARD_ITEM,\r\n  payload: { id },\r\n});\r\nexport const setSelectedCardItem = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(setSelectedCardItemDispatch(id));\r\n  };\r\n};\r\n\r\nlet favoritesIsAlreadyLoaded = false;\r\n\r\nexport function getFavoriteHeroes() {\r\n  return async (dispatch, getState) => {\r\n    const { userInfo, peopleData } = getState();\r\n\r\n    if (peopleData.favoriteHeroes === null) {\r\n      if (userInfo.offlineMode) {\r\n        const favorites = getFavoritesHeroesFromStorage();\r\n        dispatch(toggleFavoritesHeroesDispatch(favorites || {}));\r\n      } else {\r\n        const { user } = userInfo;\r\n        if (user && user.uid) {\r\n          try {\r\n            if (!favoritesIsAlreadyLoaded) {\r\n              favoritesIsAlreadyLoaded = true;\r\n              const value = await firebaseDb.ref(user.uid).once(\"value\");\r\n              favoritesIsAlreadyLoaded = false;\r\n              if (value && value.val) {\r\n                const favorites = value.val();\r\n                if (favorites)\r\n                  dispatch(\r\n                    toggleFavoritesHeroesDispatch(JSON.parse(favorites))\r\n                  );\r\n                else dispatch(toggleFavoritesHeroesDispatch({}));\r\n              }\r\n            }\r\n          } catch (ex) {\r\n            console.log(ex);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst setObservedItemIndexDispatch = (index) => ({\r\n  type: PeopleActions.SET_OBSERVED_ITEM_INDEX,\r\n  payload: { index },\r\n});\r\nexport function setObservedItemIndex(index) {\r\n  return (dispatch) => {\r\n    dispatch(setObservedItemIndexDispatch(index));\r\n  };\r\n}\r\n\r\nfunction getPeopleFavoriteData(page, search) {\r\n  return async (dispatch, getState) => {\r\n    const { peopleData } = getState();\r\n    const { favoriteHeroes, people, itemsPerPage } = peopleData;\r\n\r\n    try {\r\n      dispatch(setPeoplePageLoadingState(true));\r\n      const filterName = (search || \"\").toLowerCase();\r\n      const filteredItems = Object.keys(favoriteHeroes || {})\r\n        .map((key) => ({ id: Number(key), name: (favoriteHeroes || {})[key] }))\r\n        .filter(\r\n          (x) =>\r\n            x &&\r\n            (x.name || \"\").toString().toLowerCase().indexOf(filterName) !== -1\r\n        );\r\n\r\n      const idsPerPage = filteredItems.slice(\r\n        itemsPerPage * (page - 1),\r\n        itemsPerPage * page\r\n      );\r\n      if (!idsPerPage.length && page > 1) {\r\n        await dispatch(getPeopleFavoriteData(page - 1, search));\r\n      } else {\r\n        const itemsToUpload = [];\r\n        const items = [];\r\n\r\n        for (let i of idsPerPage) {\r\n          const item = people.find((x) => x && x.id === i.id);\r\n          if (item) {\r\n            items.push(item);\r\n          } else {\r\n            itemsToUpload.push(i.id);\r\n            const mockItem = new HeroDetails();\r\n            mockItem.id = i.id;\r\n            mockItem.name = i.name;\r\n            mockItem.loaded = false;\r\n            items.push(mockItem);\r\n          }\r\n        }\r\n\r\n        dispatch(\r\n          getPeopleDataDispatch(\r\n            items,\r\n            Object.keys(filteredItems).length,\r\n            page.toString(),\r\n            search\r\n          )\r\n        );\r\n        dispatch(setPeoplePageLoadingState(false));\r\n        for (let id of itemsToUpload) {\r\n          await dispatch(updateHeroData(id));\r\n        }\r\n      }\r\n    } catch (ex) {\r\n      console.log(\"ex\", ex);\r\n      //todo Add message about exception\r\n      dispatch(setPeoplePageLoadingState(false));\r\n    }\r\n  };\r\n}\r\n\r\nconst updateHeroDataDispatch = (hero) => ({\r\n  type: PeopleActions.UPDATE_HERO_DATA,\r\n  payload: { hero },\r\n});\r\n\r\nfunction updateHeroData(id) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await getData({\r\n        baseUrl: StarWarsUrlData.GET_PEOPLE,\r\n        param: id,\r\n      });\r\n\r\n      const hero = HeroDetails.new(data);\r\n      dispatch(updateHeroDataDispatch(hero));\r\n    } catch (ex) {\r\n      console.log(\"ex\", ex);\r\n      //todo Add message about exception\r\n    }\r\n  };\r\n}\r\n","import { observeFirebaseUser } from \"../helpers\";\r\n\r\nimport { getFavoriteHeroes } from \"./peopleActions\";\r\n\r\nexport const UserInfoActions = {\r\n  CLEAR_USER_INFO: \"CLEAR_USER_INFO\",\r\n  SET_USER_INFO: \"SET_USER_INFO\",\r\n  GET_AUTHORIZED_ONLINE_USER_DATA: \"GET_AUTHORIZED_ONLINE_USER_DATA\",\r\n};\r\n\r\n/**\r\n * Actions and events about user information.\r\n * @memberof Actions\r\n * @namespace Actions.userInfoActions\r\n */\r\n\r\nconst clearUserInfoDispatch = () => ({\r\n  type: UserInfoActions.CLEAR_USER_INFO,\r\n});\r\nexport function clearUserInfo() {\r\n  return (dispatch) => {\r\n    dispatch(clearUserInfoDispatch());\r\n  };\r\n}\r\n\r\nconst setUserInfoDispatch = (userName, offlineMode) => ({\r\n  type: UserInfoActions.SET_USER_INFO,\r\n  payload: { userName, offlineMode },\r\n});\r\n\r\n/**\r\n * Set user Auth info;\r\n * @param {string} userName the name of user\r\n * @param {boolean} offlineMode update data with localstorage, instead firebase\r\n *\r\n * @memberof Actions.userInfoActions\r\n */\r\nexport function setUserInfo(userName, offlineMode) {\r\n  return (dispatch) => {\r\n    dispatch(setUserInfoDispatch(userName, offlineMode));\r\n  };\r\n}\r\n\r\nconst getAuthorizedOnlineUserDispatch = (user) => ({\r\n  type: UserInfoActions.GET_AUTHORIZED_ONLINE_USER_DATA,\r\n  payload: { user },\r\n});\r\n\r\nexport function getAuthorizedOnlineUser(reloginCallBack) {\r\n  return (dispatch, getState) => {\r\n    observeFirebaseUser(\r\n      (user) => {\r\n        if (!getState().userInfo.user) {\r\n          dispatch(getAuthorizedOnlineUserDispatch(user));\r\n          dispatch(getFavoriteHeroes());\r\n        }\r\n      },\r\n      () => reloginCallBack()\r\n    );\r\n  };\r\n}\r\n","import { getData } from \"../helpers\";\r\nimport { StarWarsUrlData } from \"../data\";\r\n\r\nimport { FilmDetail, PlanetDetails } from \"../models/dataModels\";\r\n\r\nexport const RelationshipsActions = {\r\n  GET_FILM_DATA: \"GET_FILM_DATA\",\r\n  GET_PLANET_DATA: \"GET_PLANET_DATA\",\r\n};\r\n\r\n/**\r\n * Actions and events about main data dependency.\r\n * @memberof Actions\r\n * @namespace Actions.relationshipsActions\r\n */\r\n\r\nconst getFilmDataDispatch = (film) => ({\r\n  type: RelationshipsActions.GET_FILM_DATA,\r\n  payload: { film },\r\n});\r\n\r\n/**\r\n * Upload film full info;\r\n * @param {number} id film Id\r\n * \r\n * @memberof Actions.relationshipsActions\r\n * @async\r\n */\r\nexport function getFilmData(id) {\r\n  return async (dispatch, getState) => {\r\n    const { relationships } = getState();\r\n    if (!(id in relationships.filmsData)) {\r\n      try {\r\n        const { title, url, release_date } = await getData({\r\n          baseUrl: StarWarsUrlData.GET_FILM,\r\n          param: id,\r\n        });\r\n        if (title) {\r\n          const model = new FilmDetail(url);\r\n          model.title = title;\r\n          model.releaseDate = release_date;\r\n\r\n          dispatch(getFilmDataDispatch(model));\r\n        }\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n        //todo Add message about exception\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst getPlanetDataDispatch = (planet) => ({\r\n  type: RelationshipsActions.GET_PLANET_DATA,\r\n  payload: { planet },\r\n});\r\n\r\n/**\r\n * Upload planet full info;\r\n * @param {number} id planet Id\r\n * \r\n * @memberof Actions.relationshipsActions\r\n * @async\r\n */\r\nexport function getPlanetData(id) {\r\n  return async (dispatch, getState) => {\r\n    const { relationships } = getState();\r\n    if (!(id in relationships.planestsData)) {\r\n      try {\r\n        const {\r\n          url,\r\n          name,\r\n          population,\r\n          climate\r\n        } = await getData({\r\n          baseUrl: StarWarsUrlData.GET_PLANET,\r\n          param: id,\r\n        });\r\n        if(name) {\r\n          const model = new PlanetDetails(url);\r\n          model.name = name;\r\n          model.population = population;\r\n          model.climate = climate;\r\n\r\n          dispatch(getPlanetDataDispatch(model));\r\n        }\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n        //todo Add message about exception\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { handleActions } from \"redux-actions\";\r\nimport { UserInfoStore } from \"../models/storeModels\";\r\nimport { UserInfoActions } from \"../actions\";\r\n\r\nconst {\r\n  CLEAR_USER_INFO,\r\n  SET_USER_INFO,\r\n  GET_AUTHORIZED_ONLINE_USER_DATA,\r\n} = UserInfoActions;\r\n\r\nexport const initialState = new UserInfoStore();\r\n\r\nexport const userInfoReducer = handleActions(\r\n  {\r\n    [CLEAR_USER_INFO]: () => new UserInfoStore(),\r\n    [SET_USER_INFO]: (userData, { payload }) => {\r\n      const { userName, offlineMode } = payload;\r\n      return {\r\n        ...userData,\r\n        timeStamp: Date.now(),\r\n        userName,\r\n        offlineMode,\r\n      };\r\n    },\r\n    [GET_AUTHORIZED_ONLINE_USER_DATA]: (userData, { payload }) => {\r\n      const { user } = payload;\r\n      return {\r\n        ...userData,\r\n        timeStamp: Date.now(),\r\n        user,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { PeopleStore } from \"../models/storeModels\";\r\nimport { PeopleActions } from \"../actions\";\r\n\r\nconst {\r\n  SET_PEOPLE_PAGE_LOADING_STATE,\r\n  SET_PEOPLE_PAGE_DISPAY_TYPE,\r\n  SET_PEOPLE_PAGE_PAGINATION_PAGE,\r\n  RESET_PEOPLE_DATA,\r\n  CLEAR_PEOPLE_DATA,\r\n  GET_PEOPLE_DATA,\r\n  UPDATE_HERO_DATA,\r\n  SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE,\r\n  TOGGLE_FAVORITE_HEROES,\r\n  SET_OBSERVED_ITEM_INDEX,\r\n  SET_SELECTED_CARD_ITEM,\r\n} = PeopleActions;\r\n\r\nexport const initialState = new PeopleStore();\r\n\r\nexport const peopleReducer = handleActions(\r\n  {\r\n    [SET_PEOPLE_PAGE_LOADING_STATE]: (peopleData, { payload }) => {\r\n      const { state } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        loading: state,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_DISPAY_TYPE]: (peopleData, { payload }) => {\r\n      const { type } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        displayType: type,\r\n        timeStamp: Date.now(),\r\n        selectedCardId: null,\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_PAGINATION_PAGE]: (peopleData, { payload }) => {\r\n      const { page } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        currentPage: page,\r\n        timeStamp: Date.now(),\r\n        observerIndex: 0,\r\n        selectedCardId: null,\r\n      };\r\n    },\r\n    [RESET_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        people: [],\r\n        observerIndex: 0,\r\n        currentPage: \"1\",\r\n        uploadedPages: [],\r\n        selectedCardId: null,\r\n      };\r\n    },\r\n    [CLEAR_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      return new PeopleStore();\r\n    },\r\n    [GET_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      const { data, count, page, search } = payload;\r\n\r\n      const newUploadedPages = [\r\n        ...new Set([...peopleData.uploadedPages, page]),\r\n      ];\r\n\r\n      const clearUploadedPages = newUploadedPages.length > 3;\r\n\r\n      const pageToClear = clearUploadedPages ? newUploadedPages.shift() : null;\r\n\r\n      const updatedPeopleList = clearUploadedPages\r\n        ? peopleData.people.map((x) => {\r\n            if (x && x.fromPage === pageToClear) {\r\n              return null;\r\n            }\r\n            return x;\r\n          })\r\n        : [...peopleData.people];\r\n\r\n      const firstUpdateIndex = (page - 1) * peopleData.itemsPerPage;\r\n      for (let i = 0; i < peopleData.itemsPerPage; i++) {\r\n        if (data[i]) {\r\n          updatedPeopleList[i + firstUpdateIndex] = {\r\n            ...data[i],\r\n            fromPage: page,\r\n          };\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...peopleData,\r\n        observerIndex: 0,\r\n        totalPeopleCount: count,\r\n        currentPage: page,\r\n        uploadedPages: newUploadedPages,\r\n        people: updatedPeopleList,\r\n        filterName: search,\r\n        timeStamp: Date.now(),\r\n        selectedCardId: null\r\n      };\r\n    },\r\n    [UPDATE_HERO_DATA]: (peopleData, { payload }) => {\r\n      const { hero } = payload;\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        people: peopleData.people.map((x) => {\r\n          if (x && x.id === hero.id) {\r\n            return {\r\n              ...x,\r\n              ...hero,\r\n            };\r\n          }\r\n          return x;\r\n        }),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE]: (peopleData, { payload }) => {\r\n      const { state } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        showFavoritesOnly: state,\r\n        currentPage: \"1\",\r\n        uploadedPages: [],\r\n        people: peopleData.people.filter(\r\n          (x) => x && x.id in peopleData.favoriteHeroes\r\n        ),\r\n        selectedCardId: null,\r\n      };\r\n    },\r\n    [TOGGLE_FAVORITE_HEROES]: (peopleData, { payload }) => {\r\n      const { items } = payload;\r\n\r\n      const newFavorites = { ...peopleData.favoriteHeroes };\r\n      for (let i in items) {\r\n        if (i in newFavorites) {\r\n          delete newFavorites[i];\r\n        } else {\r\n          newFavorites[i] = items[i];\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        favoriteHeroes: newFavorites,\r\n        people: peopleData.showFavoritesOnly\r\n          ? peopleData.people.filter((x) => x && x.id in newFavorites)\r\n          : peopleData.people,\r\n        selectedCardId:\r\n          peopleData.selectedCardId &&\r\n          peopleData.showFavoritesOnly &&\r\n          !(peopleData.selectedCardId in newFavorites)\r\n            ? null\r\n            : peopleData.selectedCardId,\r\n      };\r\n    },\r\n    [SET_OBSERVED_ITEM_INDEX]: (peopleData, { payload }) => {\r\n      const { index } = payload;\r\n      return {\r\n        ...peopleData,\r\n        observerIndex: index,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [SET_SELECTED_CARD_ITEM]: (peopleData, { payload }) => {\r\n      const { id } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        selectedCardId: id,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { RelationshipsStore } from \"../models/storeModels\";\r\nimport { RelationshipsActions } from \"../actions\";\r\n\r\nconst { GET_FILM_DATA, GET_PLANET_DATA } = RelationshipsActions;\r\n\r\nexport const initialState = new RelationshipsStore();\r\n\r\nexport const relationshipsReducer = handleActions(\r\n  {\r\n    [GET_FILM_DATA]: (relationshipsData, { payload }) => {\r\n      const { film } = payload;\r\n      return {\r\n        ...relationshipsData,\r\n        timeStamp: Date.now(),\r\n        filmsData: {\r\n          ...relationshipsData.filmsData,\r\n          [film.id]: film,\r\n        },\r\n      };\r\n    },\r\n    [GET_PLANET_DATA]: (relationshipsData, { payload }) => {\r\n      const { planet } = payload;\r\n      return {\r\n        ...relationshipsData,\r\n        timeStamp: Date.now(),\r\n        planestsData: {\r\n          ...relationshipsData.planestsData,\r\n          [planet.id]: planet,\r\n        },\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  initialState as userInfoState,\r\n  userInfoReducer,\r\n} from \"./userInfoReducer\";\r\n\r\nimport { initialState as peopleState, peopleReducer } from \"./peopleReducer\";\r\n\r\nimport {\r\n  initialState as relationshipsState,\r\n  relationshipsReducer,\r\n} from \"./relationshipsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  userInfo: userInfoReducer,\r\n  peopleData: peopleReducer,\r\n  relationships: relationshipsReducer,\r\n});\r\n\r\nexport const initialState = {\r\n  userInfo: userInfoState,\r\n  peopleData: peopleState,\r\n  relationships: relationshipsState,\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { initialState, rootReducer } from '../reducer';\r\n\r\nfunction configureStore(initialState) {\r\n  const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n  let middleware = composeEnhancers(applyMiddleware(thunk));\r\n  const store = createStore(rootReducer, initialState, middleware);\r\n  return store;\r\n}\r\n\r\nconst store = configureStore(initialState);\r\n\r\nexport default store;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ParagraphMock = ({ width, height = 22 }) => (\r\n  <div\r\n    className=\"paragraph-mock ui placeholder\"\r\n    style={{\r\n      width,\r\n      height,\r\n    }}\r\n  ></div>\r\n);\r\n\r\nParagraphMock.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport { Button, Icon, Transition } from \"semantic-ui-react\";\r\n\r\nimport { ParagraphMock } from \"../helpersComponents/Mocks\";\r\n\r\nconst NavigationBar = ({ className, data, actions }) => {\r\n  /**Play lil animation only single time */\r\n  const [showHelloLabel, setShowHelloLabel] = useState(false);\r\n  useEffect(() => {\r\n    setShowHelloLabel(true);\r\n  }, []);\r\n\r\n  const userName = data.userInfo.userName;\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <Transition\r\n          visible={showHelloLabel}\r\n          animation=\"slide up\"\r\n          duration={800}\r\n        >\r\n          <h3 style={{ marginBottom: \".2em\" }}>\r\n            May the force be with you,\r\n            <span className=\"ui teal\" style={{ fontSize: \"1.35rem\" }}>\r\n              &nbsp;\r\n              {userName ? userName : <ParagraphMock height={16} width={100} />}\r\n            </span>\r\n            !\r\n          </h3>\r\n        </Transition>\r\n      </div>\r\n      <div>\r\n        {/* <Button animated=\"vertical\">\r\n          <Button.Content visible>Setting</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"settings\" size=\"large\" />\r\n          </Button.Content>\r\n        </Button> */}\r\n        <Button\r\n          animated=\"vertical\"\r\n          as={Link}\r\n          to={RouteData.Login}\r\n          style={{ marginLeft: \"1.35em\" }}\r\n        >\r\n          <Button.Content visible>LogOut</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"log out\" size=\"large\" flipped=\"horizontally\" />\r\n          </Button.Content>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigationBar.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { userInfo } = state;\r\n  return {\r\n    data: {\r\n      userInfo,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {},\r\n  };\r\n};\r\n\r\nconst NavigationBarConnected = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavigationBar);\r\n\r\nconst NavigationBarComponent = (props) => <NavigationBarConnected {...props} />;\r\n\r\nexport default NavigationBarComponent;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport { getUserInfoFromCookie } from \"../../helpers\";\r\n\r\nimport {\r\n  setUserInfo as setUserInfoAction,\r\n  getAuthorizedOnlineUser as getAuthorizedOnlineUserAction,\r\n} from \"../../actions/userInfoActions\";\r\n\r\nimport { Divider } from \"semantic-ui-react\";\r\n\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nexport class Layout extends PureComponent {\r\n  componentDidMount() {\r\n    const { history, data, actions } = this.props;\r\n    if (!data.userInfo.userName) {\r\n      const getPath = () => history.location.pathname;\r\n      actions.getUserInfoDataFromStorages(() => {\r\n        if (getPath() !== RouteData.Login) history.push(RouteData.Login);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-container\">\r\n        <NavigationBar className=\"layout-container__navigation-bar\" />\r\n        <Divider fitted />\r\n        <div className=\"layout-container__content\"> {this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { userInfo } = state;\r\n  return {\r\n    data: {\r\n      userInfo,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      getUserInfoDataFromStorages: async (logout) => {\r\n        const { userName, offlineMode } = getUserInfoFromCookie();\r\n        dispatch(setUserInfoAction(userName, offlineMode));\r\n        if (!offlineMode) {\r\n          dispatch(getAuthorizedOnlineUserAction(logout));\r\n        }\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst LayoutComponent = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(Layout)\r\n);\r\n\r\nexport default LayoutComponent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nconst PageAreNotExist = () => (\r\n  <Segment\r\n    style={{\r\n      maxWidth: 680,\r\n      height: 200,\r\n      margin: \"3em auto 0\",\r\n      padding: \"3em\",\r\n    }}\r\n  >\r\n    <Header className=\"not-exist-label\" size=\"huge\">\r\n      Sorry, that page does not exist.\r\n    </Header>\r\n    <Divider />\r\n    <Grid centered columns={3}>\r\n      <Grid.Column>\r\n        <Button\r\n          color=\"blue\"\r\n          as={Link}\r\n          to={RouteData.Base}\r\n          style={{ marginTop: \".85em\", width: 125 }}\r\n        >\r\n          <Icon name=\"log out\" size=\"large\" flipped=\"horizontally\" />\r\n          Back to main\r\n        </Button>\r\n      </Grid.Column>\r\n    </Grid>\r\n  </Segment>\r\n);\r\n\r\nexport default PageAreNotExist;\r\n","import React from \"react\";\r\n\r\nexport default ({ children, fill, stroke, height, width, style, ...props }) => (\r\n  <svg\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    fill={fill}\r\n    stroke={stroke}\r\n    width={width}\r\n    height={height}\r\n    style={style}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nimport IconPattern from \"./IconPattern\";\r\n\r\nexport const DeathStarIcon = ({ height = 25, width = 25, ...props }) => {\r\n  return (\r\n    <IconPattern height={height} width={width} {...props} viewBox=\"0 0 540 500\">\r\n      <g xmlns=\"http://www.w3.org/2000/svg\" id=\"svg_3\">\r\n        <circle r=\"32\" cy=\"138.667\" cx=\"224\" />\r\n        <path\r\n          d=\"m437.333,245.333c5.896,0 10.667,-4.771 10.667,-10.667l0,-42.666l32,0c5.896,0\r\n          10.667,-4.771 10.667,-10.667l0,-42.667c0,-5.896 -4.771,-10.667\r\n          -10.667,-10.667l-53.333,0l0,-42.666l15.5,0c4.406,0 8.354,-2.708 9.948,\r\n          -6.823c1.594,-4.104 0.49,-8.771 -2.771,-11.729c-47.344,-43.062\r\n          -108.427,-66.781 -172.011,-66.781c-141.156,0 -256,114.844\r\n          -256,256s114.844,256 256,256c63.583,0 124.667,-23.719 172.01,\r\n          -66.781c3.26,-2.958 4.365,-7.625 2.771,-11.729c-1.594,-4.115\r\n          -5.542,-6.823 -9.948,-6.823l-15.5,0l0,-21.333l53.334,0c5.896,\r\n          0 10.667,-4.771 10.667,-10.667l0,-64c0,-5.896 -4.771,-10.667\r\n          -10.667,-10.667l-74.667,0l0,-53.333l-362.126,0c-0.161,-3.561\r\n          -0.54,-7.066 -0.54,-10.667s0.379,-7.105 0.54,-10.667l394.126,\r\n          0zm-96,-117.333l42.667,0c5.896,0 10.667,4.771 10.667,10.667c0,\r\n          5.896 -4.771,10.667 -10.667,10.667l-42.667,0c-5.896,0 -10.667,\r\n          -4.771 -10.667,-10.667c0.001,-5.896 4.772,-10.667 10.667,-10.667zm-117.333,\r\n          -64c41.167,0 74.667,33.5 74.667,74.667c0,41.167 -33.5,74.667\r\n          -74.667,74.667s-74.667,-33.5 -74.667,-74.667c0,-41.167 33.5,-74.667 74.667,\r\n          -74.667zm-128,64l21.333,0c5.896,0 10.667,4.771 10.667,10.667c0,5.896\r\n          -4.771,10.667 -10.667,10.667l-21.333,0c-5.896,0 -10.667,-4.771 -10.667,\r\n          -10.667c0,-5.896 4.771,-10.667 10.667,-10.667zm234.667,192l32,0c5.896,0\r\n          10.667,4.771 10.667,10.667c0,5.896 -4.771,10.667 -10.667,10.667l-32,0c-5.896,\r\n          0 -10.667,-4.771 -10.667,-10.667c0,-5.896 4.771,-10.667 10.667,-10.667zm-192,\r\n          64l-42.667,0c-5.896,0 -10.667,-4.771 -10.667,-10.667c0,-5.896 4.771,\r\n          -10.667 10.667,-10.667l42.667,0c5.896,0 10.667,4.771 10.667,10.667c-0.001,\r\n          5.896 -4.771,10.667 -10.667,10.667zm-53.334,-85.333l96,0c5.896,0 10.667,\r\n          4.771 10.667,10.667c0,5.896 -4.771,10.667 -10.667,10.667l-96,0c-5.896,\r\n          0 -10.667,-4.771 -10.667,-10.667c0.001,-5.896 4.772,-10.667 10.667,-10.667z\"\r\n        />\r\n      </g>\r\n    </IconPattern>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { Form, Button, Message } from \"semantic-ui-react\";\r\n\r\nconst SingInForm = ({\r\n  setVisible,\r\n  loginWithForm,\r\n  loginViaGoogleForm,\r\n  error,\r\n  removeErrorState\r\n}) => (\r\n  <Form className=\"firebase-singin-form\" widths=\"equal\">\r\n    <Form.Input\r\n      icon=\"at\"\r\n      iconPosition=\"left\"\r\n      label=\"Email\"\r\n      key=\"login-email\"\r\n      id=\"login-email\"\r\n      placeholder=\"Email\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n    <Form.Input\r\n      icon=\"lock\"\r\n      iconPosition=\"left\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      key=\"login-password\"\r\n      id=\"login-password\"\r\n      placeholder=\"Password\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n\r\n    <Button\r\n      content=\"Login via firebase\"\r\n      primary\r\n      style={{ marginTop: \"2em\", marginBottom: \"1.5em\" }}\r\n      onClick={async ({ target }) => {\r\n        const emailEl = document.querySelector(\"#login-email\");\r\n        const passwordEl = document.querySelector(\"#login-password\");\r\n        await loginWithForm((emailEl || {}).value, (passwordEl || {}).value);\r\n      }}\r\n    />\r\n    <Message style={{ margin: \"0 .7em\" }}>\r\n      First time here?&nbsp;\r\n      <Link to=\"#\" style={{ maginLeft: \".3em\" }} onClick={setVisible}>\r\n        Sing Up!\r\n      </Link>\r\n      &nbsp;or&nbsp;\r\n      <Button\r\n        icon=\"google\"\r\n        size=\"small\"\r\n        type=\"google-btn\"\r\n        onClick={loginViaGoogleForm}\r\n        style={{\r\n          display: \"inline-block\",\r\n          background: \"#4286f5\",\r\n          color: \"white\",\r\n        }}\r\n      />\r\n    </Message>\r\n  </Form>\r\n);\r\n\r\nSingInForm.propTypes = {\r\n  setVisible: PT.func.isRequired,\r\n  loginWithForm: PT.func.isRequired,\r\n  loginViaGoogleForm: PT.func.isRequired,\r\n  error: PT.bool.isRequired,\r\n  removeErrorState: PT.func.isRequired,\r\n};\r\n\r\nexport default SingInForm;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { Form, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst RegisterForm = ({ visible, setVisible, create, error, removeErrorState }) => (\r\n  <Form\r\n    className=\"firebase-register-form\"\r\n    widths=\"equal\"\r\n    onSubmit={async ({ target }) => {\r\n      const emailEl = target.querySelector(\"#create-email\");\r\n      const passwordEl = target.querySelector(\"#create-password\");\r\n      await create((emailEl || {}).value, (passwordEl || {}).value);\r\n    }}\r\n  >\r\n    <Icon\r\n      name={visible ? \"angle up\" : \"minus\"}\r\n      className=\"back-to-signin\"\r\n      size=\"large\"\r\n      title=\"Back to SignIn\"\r\n      onClick={setVisible}\r\n    />\r\n    <Form.Input\r\n      icon=\"at\"\r\n      iconPosition=\"left\"\r\n      label=\"Email\"\r\n      id=\"create-email\"\r\n      placeholder=\"Enter email\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n    <Form.Input\r\n      disabled\r\n      icon=\"user\"\r\n      iconPosition=\"left\"\r\n      label=\"Username\"\r\n      id=\"create-username\"\r\n      placeholder=\"Username\"\r\n      error={error}\r\n    />\r\n    <Form.Input\r\n      icon=\"lock\"\r\n      iconPosition=\"left\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      id=\"create-password\"\r\n      placeholder=\"Enter password\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n\r\n    <Button\r\n      content=\"Register\"\r\n      primary\r\n      style={{ marginTop: \"1.5em\", marginBottom: \"1em\" }}\r\n    />\r\n  </Form>\r\n);\r\n\r\nRegisterForm.propTypes = {\r\n  visible: PT.bool.isRequired,\r\n  setVisible: PT.func.isRequired,\r\n  create: PT.func.isRequired,\r\n  error: PT.bool.isRequired,\r\n  removeErrorState: PT.func.isRequired,\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { DeathStarIcon } from \"../helpersComponents/Icons\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport {\r\n  setUserCookies,\r\n  deleteAllCookies,\r\n  createUserWithFirebase,\r\n  signInWithFormFirebase,\r\n  signInWithGoogleFirebase,\r\n  signOutFirebase,\r\n} from \"../../helpers\";\r\n\r\nimport {\r\n  clearUserInfo as clearUserInfoAction,\r\n  setUserInfo as setUserInfoAction,\r\n  getAuthorizedOnlineUser as getAuthorizedOnlineUserAction,\r\n} from \"../../actions/userInfoActions\";\r\n\r\nimport SingInForm from \"./SingInForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nfunction getCapitalizedEmailStart(email) {\r\n  const emailStart = (email.split(\"@\") || [])[0] || \"None\";\r\n  return emailStart.charAt(0).toUpperCase() + emailStart.slice(1);\r\n}\r\n\r\nconst AuthPage = ({ history, data, actions }) => {\r\n  useEffect(() => {\r\n    // on component mount only\r\n    actions.clearUserInfo();\r\n    deleteAllCookies();\r\n    signOutFirebase();\r\n  }, [actions]);\r\n\r\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [singInErrorState, setSingInErrorState] = useState(false);\r\n  const [registrationErrorState, setRegistrationErrorState] = useState(false);\r\n\r\n  const removeSingInErrorState = () => setSingInErrorState(false);\r\n  const removeRegistrationErrorState = () => setRegistrationErrorState(false);\r\n\r\n  const { authOffline, authOnline } = actions;\r\n\r\n  const getPath = () => history.location.pathname;\r\n  const logout = () => {\r\n    if (getPath() !== RouteData.Login) history.push(RouteData.Login);\r\n  };\r\n\r\n  async function createNewUser(email, password) {\r\n    setFormLoading(true);\r\n\r\n    const user = await createUserWithFirebase(email, password);\r\n    user.user.cutomDisplayName = getCapitalizedEmailStart(email);\r\n\r\n    setFormLoading(false);\r\n    if (user) {\r\n      authOnline(user, logout);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setRegistrationErrorState(true);\r\n    }\r\n  }\r\n  async function loginWithForm(email, password) {\r\n    setFormLoading(true);\r\n\r\n    const user = await signInWithFormFirebase(email, password);\r\n    user.user.cutomDisplayName = getCapitalizedEmailStart(email);\r\n\r\n    setFormLoading(false);\r\n    if (user) {\r\n      authOnline(user, logout);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setSingInErrorState(true);\r\n    }\r\n  }\r\n  async function loginViaGoogleForm() {\r\n    setFormLoading(true);\r\n    const user = await signInWithGoogleFirebase();\r\n    setFormLoading(false);\r\n    if (user) {\r\n      authOnline(user, logout);\r\n      history.push(RouteData.Base);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"login-screen\">\r\n      <Segment>\r\n        {formLoading && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"huge\">\r\n              Loading...\r\n            </Loader>\r\n          </Dimmer>\r\n        )}\r\n        <Header as=\"h2\" icon className=\"login-header full-width\">\r\n          <DeathStarIcon width={45} height={45} />\r\n          <div>Star Wars API</div>\r\n          <Header.Subheader>\r\n            Test task to check react skill of mine.\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment className=\"login-form\" placeholder>\r\n          <Grid columns={2} relaxed=\"very\" stackable divided>\r\n            <Grid.Column\r\n              className={`firebase-auth-forms-column ${\r\n                showRegisterForm ? \"register\" : \"login\"\r\n              }`}\r\n            >\r\n              <SingInForm\r\n                visible={!showRegisterForm}\r\n                setVisible={() => {\r\n                  setShowRegisterForm(true);\r\n                }}\r\n                loginWithForm={loginWithForm}\r\n                loginViaGoogleForm={loginViaGoogleForm}\r\n                error={singInErrorState}\r\n                removeErrorState={removeSingInErrorState}\r\n              />\r\n              {/* <Divider className=\"firebase-auth-form-divider\" /> */}\r\n              <RegisterForm\r\n                visible={showRegisterForm}\r\n                setVisible={() => {\r\n                  setShowRegisterForm(false);\r\n                }}\r\n                create={createNewUser}\r\n                error={registrationErrorState}\r\n                removeErrorState={removeRegistrationErrorState}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign=\"middle\" className=\"offline-section\">\r\n              <Popup\r\n                content=\"All your changes will be stored in your browser.\"\r\n                trigger={\r\n                  <Button\r\n                    basic\r\n                    color=\"purple\"\r\n                    size=\"big\"\r\n                    className=\"offline-btn\"\r\n                    onClick={authOffline}\r\n                    as={Link}\r\n                    to={RouteData.Base}\r\n                  >\r\n                    <Icon.Group>\r\n                      <Icon name=\"wifi\" />\r\n                      <Icon corner name=\"x\" color=\"red\" />\r\n                    </Icon.Group>\r\n                    &nbsp; Enter offline\r\n                  </Button>\r\n                }\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Divider className=\"vertical-devider\" vertical>\r\n            Or\r\n          </Divider>\r\n        </Segment>\r\n      </Segment>\r\n      <div id=\"developer-signature\">\r\n        developed by\r\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Sinfulelf\">\r\n          &nbsp;Anton Nastolnyi\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    data: {},\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      clearUserInfo: () => {\r\n        dispatch(clearUserInfoAction());\r\n      },\r\n      authOffline: () => {\r\n        const userName = \"Anonymous\";\r\n        setUserCookies(JSON.stringify({ userName, offlineMode: true }));\r\n        dispatch(setUserInfoAction(userName, true));\r\n      },\r\n      authOnline: (user, logout) => {\r\n        const userName = user.user.displayName || user.user.cutomDisplayName;\r\n        setUserCookies(JSON.stringify({ userName, offlineMode: false }));\r\n        dispatch(setUserInfoAction(userName, false));\r\n        dispatch(getAuthorizedOnlineUserAction(logout));\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst AuthPageComponent = connect(mapStateToProps, mapDispatchToProps, null, {\r\n  pure: true,\r\n  areOwnPropsEqual: () => true,\r\n})(AuthPage);\r\n\r\nexport default withRouter((props) => <AuthPageComponent {...props} />);\r\n","import React, { useState } from \"react\";\r\nimport PT from \"prop-types\";\r\nimport { Input, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst HeaderFilterInputItem = ({ search }) => {\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const onChange = ({ target }) => {\r\n    setFilterValue(target.value);\r\n  };\r\n  const onButtonClick = () => {\r\n    search(filterValue);\r\n  };\r\n  return (\r\n    <Input\r\n      className=\"header-input\"\r\n      label={\r\n        <Button primary onClick={onButtonClick}>\r\n          Search\r\n        </Button>\r\n      }\r\n      onChange={onChange}\r\n      value={filterValue}\r\n      labelPosition=\"right\"\r\n      placeholder=\"Filter by name\"\r\n    />\r\n  );\r\n};\r\n\r\nHeaderFilterInputItem.propTypes = {\r\n  search: PT.func.isRequired,\r\n};\r\n\r\nexport const HeaderFilterInput = HeaderFilterInputItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst HeaderPaginationItem = ({ isFavorites, showFavoriteOnly }) => (\r\n  <Menu pointing secondary size=\"large\">\r\n    <Menu.Item\r\n      name=\"people\"\r\n      key=\"people\"\r\n      className=\"people-menu\"\r\n      active={!isFavorites}\r\n      onClick={() => {\r\n        showFavoriteOnly(false);\r\n      }}\r\n      style={{ margin: \"0 .5em -2px\" }}\r\n    >\r\n      <Icon name=\"users\" />\r\n      &#8201; People\r\n    </Menu.Item>\r\n    <Menu.Item\r\n      name=\"favorites\"\r\n      key=\"favorites\"\r\n      className=\"favorites-menu\"\r\n      active={isFavorites}\r\n      onClick={() => {\r\n        showFavoriteOnly(true);\r\n      }}\r\n      style={{ margin: \"0 .5em -2px\" }}\r\n    >\r\n      <Icon name=\"heart outline\" />\r\n      &#8201; Favorite\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nHeaderPaginationItem.propTypes = {\r\n  isFavorites: PT.bool.isRequired,\r\n  showFavoriteOnly: PT.func.isRequired,\r\n};\r\n\r\nexport const HeaderPagination = HeaderPaginationItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { PeoplePageDispaType } from \"../../models/dataModels\";\r\n\r\nimport { Form, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport { HeaderFilterInput } from \"./HeaderFilterInput\";\r\nimport { HeaderPagination } from \"./HeaderPagination\";\r\n\r\nconst Header = ({\r\n  pageName,\r\n  isFavorites,\r\n  showFavoriteOnly,\r\n  displayType,\r\n  setPeoplePagedisplayType,\r\n  search\r\n}) => {\r\n  return (\r\n    <div className={`page-header ${pageName}__header`}>\r\n      <Form className=\"header-toggle\">\r\n        <Form.Field>\r\n          <Checkbox\r\n            slider\r\n            label=\"Show cards\"\r\n            checked={displayType === PeoplePageDispaType.cards}\r\n            onChange={() => {\r\n              setPeoplePagedisplayType(\r\n                displayType === PeoplePageDispaType.cards\r\n                  ? PeoplePageDispaType.list\r\n                  : PeoplePageDispaType.cards\r\n              );\r\n            }}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n      <HeaderFilterInput search={search} />\r\n      <HeaderPagination\r\n        isFavorites={isFavorites}\r\n        showFavoriteOnly={showFavoriteOnly}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  isFavorites: PropTypes.bool.isRequired,\r\n  showFavoriteOnly: PropTypes.func.isRequired,\r\n  displayType: PropTypes.string.isRequired,\r\n  setPeoplePagedisplayType: PropTypes.func.isRequired,\r\n  search: PropTypes.func.isRequired\r\n};\r\n\r\nexport const PeoplePageHeader = Header;\r\n","import { PeoplePageDispaType } from \"../../models/dataModels\";\r\n\r\nexport const personCardConfig = {\r\n  stylesConfigs: {\r\n    [PeoplePageDispaType.list]: {\r\n      width: 235,\r\n      height: 35,\r\n      gap: 8,\r\n\r\n      userInfoMargin: 25,\r\n    },\r\n    [PeoplePageDispaType.cards]: {\r\n      width: 250,\r\n      height: 216,\r\n      horizontalGap: 12,\r\n      verticalGap: 14,\r\n    },\r\n  },\r\n  selectedCardStyle: {\r\n    width: 'auto',\r\n    left: '6%',\r\n    right: '6%',\r\n    top: '10%',\r\n    height: 'auto',\r\n    zIndex: 6\r\n  },\r\n  shouldRecalculateStyle(nextProps, prevState) {\r\n    const { displayType, index, wrapperWidth } = nextProps;\r\n    const { styleConditions } = prevState;\r\n\r\n    return (\r\n      displayType !== styleConditions.displayType ||\r\n      index !== styleConditions.index ||\r\n      (displayType === PeoplePageDispaType.cards &&\r\n        wrapperWidth !== styleConditions.wrapperWidth)\r\n    );\r\n  },\r\n\r\n  recalculateStyle(nextProps) {\r\n    const { displayType, index, wrapperWidth } = nextProps;\r\n    if (displayType === PeoplePageDispaType.list) {\r\n      const { width, height, gap } = this.stylesConfigs[\r\n        PeoplePageDispaType.list\r\n      ];\r\n      return {\r\n        top: (height + gap) * index,\r\n        left: 0,\r\n        width,\r\n        height,\r\n      };\r\n    } else {\r\n      const { width, height, horizontalGap, verticalGap } = this.stylesConfigs[\r\n        PeoplePageDispaType.cards\r\n      ];\r\n\r\n      const cardSpace = width + horizontalGap;\r\n\r\n      const itemsPreRow = Math.floor(wrapperWidth / cardSpace);\r\n      const rowUsableWidth = itemsPreRow * cardSpace;\r\n      const totalLeftWidth = index * cardSpace;\r\n      const row = Math.floor(totalLeftWidth / rowUsableWidth);\r\n\r\n      const top = row * (height + verticalGap);\r\n      const left = totalLeftWidth - row * rowUsableWidth;\r\n\r\n      return {\r\n        top: top,\r\n        left: left,\r\n        width,\r\n        height,\r\n        marginBottom: verticalGap,\r\n      };\r\n    }\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nconst HeroPropertyItem = ({ name, value = \"\" }) => (\r\n  <div className=\"property\">\r\n    {!!name && <h5 className=\"property-name\">{name}:</h5>}\r\n    <div className=\"property-content\">\r\n      <div style={{ paddingRight: \".3em\" }}>●</div>\r\n      <div className=\"ellipsis\">{value}</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nHeroPropertyItem.propTypes = {\r\n  name: PT.string,\r\n  value: PT.oneOfType([PT.string, PT.number, PT.element]),\r\n};\r\n\r\nexport const HeroProperty = HeroPropertyItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroInfoPropertiesItem = ({ item }) => (\r\n  <div className=\"full-space hero-info__properties\">\r\n    <HeroProperty\r\n      key=\"height\"\r\n      name=\"Height\"\r\n      value={item.loaded ? item.height : <ParagraphMock width={120} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"mass\"\r\n      name=\"Mass\"\r\n      value={item.loaded ? item.mass : <ParagraphMock width={70} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"hairColour\"\r\n      name=\"Hair color\"\r\n      value={item.loaded ? item.hairColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"skinColour\"\r\n      name=\"Skin color\"\r\n      value={item.loaded ? item.skinColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"eyeColour\"\r\n      name=\"Eye Color\"\r\n      value={item.loaded ? item.eyeColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"birthYear\"\r\n      name=\"Birth Year\"\r\n      value={item.loaded ? item.birthYear : <ParagraphMock width={70} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"gender\"\r\n      name=\"Gender\"\r\n      value={item.loaded ? item.gender : <ParagraphMock width={75} />}\r\n    />\r\n  </div>\r\n);\r\n\r\nHeroInfoPropertiesItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  cardView: PT.bool,\r\n};\r\n\r\nexport const HeroInfoProperties = HeroInfoPropertiesItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroHomePropertyItem = ({ item, planets }) => {\r\n  const planet = planets[item.planet.id];\r\n  return (\r\n    <div className=\"full-space hero-info__home\">\r\n      <h3 className=\"title\">Home world</h3>\r\n      <HeroProperty\r\n        key=\"name\"\r\n        name=\"Name\"\r\n        value={\r\n          !!planet ? planet.name : <ParagraphMock width={110} />\r\n        }\r\n      />\r\n      <HeroProperty\r\n        key=\"population\"\r\n        name=\"Population\"\r\n        value={\r\n          !!planet ? (\r\n            planet.population\r\n          ) : (\r\n            <ParagraphMock width={120}  />\r\n          )\r\n        }\r\n      />\r\n      <HeroProperty\r\n        key=\"climate\"\r\n        name=\"Climate\"\r\n        value={\r\n          !!planet ? planet.climate : <ParagraphMock width={180}  />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroHomePropertyItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  planets: PT.object.isRequired,\r\n};\r\n\r\nexport const HeroHomeProperty = HeroHomePropertyItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroFilmsPropertyItem = ({ item, films }) => {\r\n  return (\r\n    <div className=\"full-space hero-info__films\">\r\n      <h3 className=\"title\">Films</h3>\r\n      {item.films.map((x) => (\r\n        <HeroProperty\r\n          key={x.url}\r\n          value={\r\n            films[x.id] ? (\r\n              `${films[x.id].title} by ${films[x.id].releaseDate}`\r\n            ) : (\r\n              <ParagraphMock width={240}  />\r\n            )\r\n          }\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroFilmsPropertyItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  films: PT.object.isRequired,\r\n};\r\n\r\nexport const HeroFilmsProperty = HeroFilmsPropertyItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../../models/storeModels\";\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\n\r\nimport { Divider } from \"semantic-ui-react\";\r\n\r\nimport { HeroInfoProperties } from \"./HeroInfoProperties\";\r\nimport { HeroHomeProperty } from \"./HeroHomeProperty\";\r\nimport { HeroFilmsProperty } from \"./HeroFilmsProperty\";\r\n\r\nclass HeroInfoItem extends PureComponent {\r\n  async componentDidMount() {\r\n    await this.uploadHeroAdditionalData();\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    const { item, showFullInfo } = this.props;\r\n\r\n    if (\r\n      item.id !== prevProps.item.id ||\r\n      showFullInfo !== prevProps.showFullInfo ||\r\n      (!prevProps.item?.planet && item.planet) ||\r\n      (prevProps.item?.films && prevProps.item?.films.length !== item.films.length)\r\n    ) {\r\n      await this.uploadHeroAdditionalData();\r\n    }\r\n  }\r\n\r\n  uploadHeroAdditionalData = async () => {\r\n    const {\r\n      item,\r\n      getFilmData,\r\n      getPlanetData,\r\n      relationships,\r\n      showFullInfo,\r\n    } = this.props;\r\n    if (showFullInfo) {\r\n      if (item.planet && !(item.planet.id in relationships.planestsData)) {\r\n        await getPlanetData(item.planet.id);\r\n      }\r\n\r\n      for (let film of item.films) {\r\n        if (film && !(film.id in relationships.filmsData)) {\r\n          await getFilmData(film.id);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { item, relationships, showFullInfo = false } = this.props;\r\n\r\n    return (\r\n      <div className=\"hero-info\">\r\n        {!showFullInfo && <Divider style={{ marginTop: 0 }} />}\r\n        <HeroInfoProperties item={item} />\r\n        {!showFullInfo ? (\r\n          <div className=\"bottom-mask\"></div>\r\n        ) : (\r\n          <>\r\n            {!!item.planet && (\r\n              <>\r\n                <Divider />\r\n                <HeroHomeProperty\r\n                  item={item}\r\n                  planets={relationships.planestsData}\r\n                />\r\n              </>\r\n            )}\r\n            <Divider />\r\n            <HeroFilmsProperty item={item} films={relationships.filmsData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeroInfoItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  relationships: PT.shape(RelationshipsStorePropTypes),\r\n  getFilmData: PT.func,\r\n  getPlanetData: PT.func,\r\n  showFullInfo: PT.bool,\r\n};\r\n\r\nexport const HeroInfo = HeroInfoItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../models/storeModels\";\r\n\r\nimport {\r\n  HeroDetailsPropTypes,\r\n  PeoplePageDispaType,\r\n} from \"../../models/dataModels\";\r\n\r\nimport { personCardConfig } from \"./personCardConfig\";\r\n\r\nimport { Header, Icon, Dimmer, Loader, Divider } from \"semantic-ui-react\";\r\n\r\nimport { HeroInfo } from \"./HeroInfo\";\r\n\r\nclass PersonCardItem extends PureComponent {\r\n  state = {\r\n    style: {},\r\n    styleConditions: {\r\n      displayType: \"\",\r\n      index: -1,\r\n      wrapperWidth: -1,\r\n    },\r\n    isActive: false,\r\n    heartIconFilled: false,\r\n    selectedCardId: null,\r\n  };\r\n\r\n  stylesConfigs = {\r\n    [PeoplePageDispaType.list]: {\r\n      width: 200,\r\n      height: 30,\r\n      gap: 5,\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (personCardConfig.shouldRecalculateStyle(nextProps, prevState)) {\r\n      return {\r\n        style: personCardConfig.recalculateStyle(nextProps),\r\n        styleConditions: {\r\n          displayType: nextProps.displayType,\r\n          index: nextProps.index,\r\n          wrapperWidth: nextProps.wrapperWidth,\r\n        },\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setCardActiveState = (state) => {\r\n    const { displayType } = this.props;\r\n    if (displayType === PeoplePageDispaType.list)\r\n      this.setState({\r\n        isActive: state,\r\n      });\r\n  };\r\n\r\n  setHeartIconFilled = (state) => {\r\n    this.setState({\r\n      heartIconFilled: state,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      item,\r\n      displayType,\r\n      toggleFavoriteHero,\r\n      favoriteHeroes,\r\n      observerIndex,\r\n      index,\r\n      setObservedItemIndex,\r\n      setSelectedCard,\r\n      selectedCardId,\r\n      relationships,\r\n      getFilmData,\r\n      getPlanetData,\r\n    } = this.props;\r\n    const { style, isActive, heartIconFilled } = this.state;\r\n\r\n    const favoritesNotUploaded = favoriteHeroes === null;\r\n    const isFavorite = !!(favoriteHeroes || {})[item.id];\r\n    const isObserved = index === observerIndex;\r\n    const itemCardIdSelected =\r\n      displayType === PeoplePageDispaType.cards &&\r\n      item.id &&\r\n      item.id === selectedCardId;\r\n\r\n    return (\r\n      <div\r\n        className={`hero-card ${\r\n          isActive || (isObserved && displayType === PeoplePageDispaType.list)\r\n            ? \"active\"\r\n            : \"\"\r\n        } ${displayType} ${itemCardIdSelected ? \"selected\" : \"\"}`}\r\n        style={itemCardIdSelected ? personCardConfig.selectedCardStyle : style}\r\n        onClick={() => {\r\n          if (!isObserved && displayType === PeoplePageDispaType.list) {\r\n            setObservedItemIndex(index);\r\n          }\r\n          if (\r\n            !itemCardIdSelected &&\r\n            displayType === PeoplePageDispaType.cards\r\n          ) {\r\n            setSelectedCard(item.id);\r\n          }\r\n        }}\r\n      >\r\n        {!item.loaded && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"small\" />\r\n          </Dimmer>\r\n        )}\r\n        <div className=\"hero-card__header\">\r\n          <div className=\"hero-card__header__data\">\r\n            <Header\r\n              as=\"h3\"\r\n              title={item.name}\r\n              className=\"hero-name\"\r\n              onMouseUp={(_) => {\r\n                this.setCardActiveState(false);\r\n              }}\r\n              onMouseLeave={(_) => {\r\n                this.setCardActiveState(false);\r\n              }}\r\n              onMouseDown={(_) => {\r\n                this.setCardActiveState(true);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </Header>\r\n            <Icon.Group>\r\n              <Icon\r\n                name=\"heart\"\r\n                className={`favor-icon ${\r\n                  isFavorite ? \"red\" : heartIconFilled ? \"pale-red\" : \"outline\"\r\n                }`}\r\n                disabled={favoritesNotUploaded}\r\n                onMouseEnter={(_) => this.setHeartIconFilled(true)}\r\n                onMouseLeave={(_) => this.setHeartIconFilled(false)}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  toggleFavoriteHero(item.id, item.name);\r\n                }}\r\n              />\r\n              {favoritesNotUploaded && (\r\n                <Icon\r\n                  size=\"small\"\r\n                  loading\r\n                  name=\"circle notch\"\r\n                  className=\"favor-icon-loading\"\r\n                />\r\n              )}\r\n            </Icon.Group>\r\n          </div>\r\n          {displayType === PeoplePageDispaType.list && isObserved && (\r\n            <Icon className=\"observer-caret\" name=\"caret right\" size=\"big\" />\r\n          )}\r\n          {itemCardIdSelected && (\r\n            <Icon\r\n              name=\"x\"\r\n              size=\"large\"\r\n              className=\"hover-active-item\"\r\n              onClick={() => {\r\n                setSelectedCard(null);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {displayType === PeoplePageDispaType.cards && (\r\n          <div className=\"hero-info-wrapper\">\r\n            {itemCardIdSelected && <Divider style={{ marginTop: 0 }} />}\r\n            <HeroInfo\r\n              item={item}\r\n              showFullInfo={itemCardIdSelected}\r\n              relationships={relationships}\r\n              getFilmData={getFilmData}\r\n              getPlanetData={getPlanetData}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPersonCardItem.propTypes = {\r\n  wrapperWidth: PT.number.isRequired,\r\n  index: PT.number.isRequired,\r\n  displayType: PT.oneOf([PeoplePageDispaType.cards, PeoplePageDispaType.list])\r\n    .isRequired,\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  favoriteHeroes: PT.object,\r\n  toggleFavoriteHero: PT.func.isRequired,\r\n  observerIndex: PT.number.isRequired,\r\n  setObservedItemIndex: PT.func.isRequired,\r\n  setSelectedCard: PT.func.isRequired,\r\n  selectedCardId: PT.number,\r\n  getFilmData: PT.func,\r\n  getPlanetData: PT.func,\r\n  relationships: PT.shape(RelationshipsStorePropTypes),\r\n};\r\n\r\nexport const PersonCard = PersonCardItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../models/storeModels\";\r\n\r\nimport {\r\n  HeroDetailsPropTypes,\r\n  PeoplePageDispaType,\r\n} from \"../../models/dataModels\";\r\n\r\nimport { personCardConfig } from \"./personCardConfig\";\r\n\r\nimport ReactResizeDetector from \"react-resize-detector\";\r\nimport { Dimmer, Loader, Segment, Transition } from \"semantic-ui-react\";\r\n\r\nimport { PersonCard } from \"./PersonCard\";\r\nimport { HeroInfo } from \"./HeroInfo\";\r\n\r\nclass Content extends PureComponent {\r\n\r\n  render() {\r\n    const {\r\n      pageName,\r\n      loading,\r\n      data,\r\n      displayType,\r\n      toggleFavoriteHero,\r\n      favoriteHeroes,\r\n      observerIndex,\r\n      setObservedItemIndex,\r\n      relationships,\r\n      getFilmData,\r\n      getPlanetData,\r\n      setSelectedCardItem,\r\n      selectedCardId\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={`page-content ${pageName}__content`}\r\n        style={{\r\n          paddingTop: \"1.75em\",\r\n          paddingBottom: \"1.75em\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {loading && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"huge\">\r\n              Loading\r\n            </Loader>\r\n          </Dimmer>\r\n        )}\r\n        {!loading &&\r\n          displayType === PeoplePageDispaType.cards &&\r\n          !!selectedCardId && (\r\n            <Dimmer active inverted className=\"p-absolute card-open-mask\" />\r\n          )}\r\n        {!loading && !data.length && <h2>No data to display.</h2>}\r\n        <ReactResizeDetector handleWidth>\r\n          {({ width }) => (\r\n            <div className=\"heroes-cards__wrapper\">\r\n              {data.map((item, index) => (\r\n                <PersonCard\r\n                  key={item.urlValue || index}\r\n                  wrapperWidth={width}\r\n                  index={index}\r\n                  displayType={displayType}\r\n                  item={item}\r\n                  favoriteHeroes={favoriteHeroes}\r\n                  toggleFavoriteHero={toggleFavoriteHero}\r\n                  observerIndex={observerIndex}\r\n                  setObservedItemIndex={setObservedItemIndex}\r\n                  setSelectedCard={setSelectedCardItem}\r\n                  selectedCardId={selectedCardId}\r\n                  relationships={relationships}\r\n                  getFilmData={getFilmData}\r\n                  getPlanetData={getPlanetData}\r\n                />\r\n              ))}\r\n              {!!data[observerIndex] && (\r\n                <Transition\r\n                  visible={displayType === PeoplePageDispaType.list}\r\n                  animation=\"scale\"\r\n                  duration={400}\r\n                >\r\n                  <div\r\n                    className=\"full-space\"\r\n                    style={{\r\n                      paddingLeft:\r\n                        personCardConfig.stylesConfigs[PeoplePageDispaType.list]\r\n                          .width +\r\n                        personCardConfig.stylesConfigs[PeoplePageDispaType.list]\r\n                          .userInfoMargin,\r\n                    }}\r\n                  >\r\n                    <Segment className=\"user-info\">\r\n                      <HeroInfo\r\n                        item={data[observerIndex]}\r\n                        relationships={relationships}\r\n                        getFilmData={getFilmData}\r\n                        getPlanetData={getPlanetData}\r\n                        showFullInfo={displayType === PeoplePageDispaType.list}\r\n                      />\r\n                    </Segment>\r\n                  </div>\r\n                </Transition>\r\n              )}\r\n            </div>\r\n          )}\r\n        </ReactResizeDetector>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  displayType: PropTypes.oneOf([\r\n    PeoplePageDispaType.cards,\r\n    PeoplePageDispaType.list,\r\n  ]).isRequired,\r\n  observerIndex: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.shape(HeroDetailsPropTypes)).isRequired,\r\n  favoriteHeroes: PropTypes.object,\r\n  toggleFavoriteHero: PropTypes.func.isRequired,\r\n  setObservedItemIndex: PropTypes.func.isRequired,\r\n  relationships: PropTypes.shape(RelationshipsStorePropTypes).isRequired,\r\n  getFilmData: PropTypes.func.isRequired,\r\n  getPlanetData: PropTypes.func.isRequired,\r\n  setSelectedCardItem: PropTypes.func.isRequired,\r\n  selectedCardId: PropTypes.number\r\n};\r\n\r\nexport const PeoplePageContent = Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Pagination } from \"semantic-ui-react\";\r\n\r\nconst Footer = ({\r\n  pageName,\r\n  activePage = 1,\r\n  totalPages,\r\n  onPageChange,\r\n  loading,\r\n}) => {\r\n  const paginationConfig = !totalPages\r\n    ? {\r\n        totalPages: 10,\r\n        disabled: true,\r\n      }\r\n    : {\r\n        activePage,\r\n        totalPages,\r\n        ellipsisItem: { className: \"disabled\", content: \"...\" },\r\n        async onPageChange(_, { activePage }) {\r\n          await onPageChange(activePage);\r\n        },\r\n        disabled: loading,\r\n      };\r\n  return (\r\n    <div className={`page-footer ${pageName}__footer`}>\r\n      <Pagination {...paginationConfig} firstItem={null} lastItem={null} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  activePage: PropTypes.string,\r\n  totalPages: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n\r\nexport const PeoplePageFooter = Footer;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { HeroDetails } from \"../../models/dataModels\";\r\n\r\nimport {\r\n  setPeoplePagedisplayType as setPeoplePagedisplayTypeAction,\r\n  getPeopleData as getPeopleDataAction,\r\n  clearPeopleData as clearPeopleDataAction,\r\n  toggleFavoritesHeroes as toggleFavoritesHeroesAction,\r\n  getFavoriteHeroes as getFavoriteHeroesAction,\r\n  setObservedItemIndex as setObservedItemIndexAction,\r\n  setPeoplePageFavoritesViewMode as setPeoplePageFavoritesViewModeAction,\r\n  setSelectedCardItem as setSelectedCardItemAction,\r\n} from \"../../actions/peopleActions\";\r\n\r\nimport {\r\n  getFilmData as getFilmDataAction,\r\n  getPlanetData as getPlanetDataAction,\r\n} from \"../../actions/relationshipsActions\";\r\n\r\nimport { PeoplePageHeader } from \"./Header\";\r\nimport { PeoplePageContent } from \"./Content\";\r\nimport { PeoplePageFooter } from \"./Footer\";\r\n\r\nclass PeoplePage extends PureComponent {\r\n  pageName = \"people-page\";\r\n\r\n  async componentDidMount() {\r\n    const { data, actions } = this.props;\r\n    const { people, currentPage } = data.peopleData;\r\n    if (!people.length) {\r\n      await actions.getPeople(currentPage);\r\n      await actions.getFavoriteHeroes();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.actions.clearPeopleData();\r\n  }\r\n\r\n  getPaginationsItemsCount = () => {\r\n    const { totalPeopleCount, itemsPerPage } = this.props.data.peopleData;\r\n    return !!totalPeopleCount ? Math.ceil(totalPeopleCount / itemsPerPage) : 10;\r\n  };\r\n\r\n  onPaginationPageChange = async (page) => {\r\n    if (page || page === 0) {\r\n      const { data, actions } = this.props;\r\n      if (data.peopleData.currentPage !== page.toString()) {\r\n        await actions.getPeople(page, data.peopleData.filterName);\r\n      }\r\n    }\r\n  };\r\n\r\n  showFavoriteOnly = (state) => {\r\n    const { showFavoritesOnly } = this.props.data.peopleData;\r\n    if (showFavoritesOnly !== state) {\r\n      this.props.actions.setPeoplePageFavoritesViewMode(state);\r\n    }\r\n  };\r\n\r\n  filterByName = async (value) => {\r\n    const { data, actions } = this.props;\r\n    if (data.peopleData.filterName !== value) {\r\n      await actions.getPeople(1, value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, actions } = this.props;\r\n    const { peopleData, relationships, paginatedData } = data;\r\n    const {\r\n      setPeoplePagedisplayType,\r\n      toggleFavoriteHero,\r\n      setObservedItemIndex,\r\n      getFilmData,\r\n      getPlanetData,\r\n      setSelectedCardItem,\r\n    } = actions;\r\n\r\n    const paginationsCount = this.getPaginationsItemsCount();\r\n    return (\r\n      <div className={`page-wrapper ${this.pageName}`}>\r\n        <PeoplePageHeader\r\n          pageName={this.pageName}\r\n          isFavorites={peopleData.showFavoritesOnly}\r\n          showFavoriteOnly={this.showFavoriteOnly}\r\n          displayType={peopleData.displayType}\r\n          setPeoplePagedisplayType={setPeoplePagedisplayType}\r\n          search={this.filterByName}\r\n        />\r\n        <PeoplePageContent\r\n          pageName={this.pageName}\r\n          loading={peopleData.loading}\r\n          isFavorites={peopleData.showFavoritesOnly}\r\n          displayType={peopleData.displayType}\r\n          data={paginatedData}\r\n          favoriteHeroes={peopleData.favoriteHeroes}\r\n          toggleFavoriteHero={toggleFavoriteHero}\r\n          observerIndex={peopleData.observerIndex}\r\n          setObservedItemIndex={setObservedItemIndex}\r\n          getFilmData={getFilmData}\r\n          getPlanetData={getPlanetData}\r\n          relationships={relationships}\r\n          setSelectedCardItem={setSelectedCardItem}\r\n          selectedCardId={peopleData.selectedCardId}\r\n        />\r\n        <PeoplePageFooter\r\n          pageName={this.pageName}\r\n          loading={peopleData.loading}\r\n          activePage={peopleData.currentPage}\r\n          totalPages={paginationsCount}\r\n          onPageChange={this.onPaginationPageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { peopleData, relationships } = state;\r\n\r\n  const { people, currentPage, itemsPerPage } = peopleData;\r\n\r\n  //const paginatedData = people.filter((x) => x && x.fromPage === currentPage);\r\n\r\n  const paginatedData = people\r\n    .slice(itemsPerPage * (currentPage - 1), itemsPerPage * currentPage)\r\n    .filter((x) => typeof x !== \"undefined\")\r\n    .map((x) => x || new HeroDetails());\r\n\r\n  return {\r\n    data: {\r\n      peopleData,\r\n      relationships,\r\n      paginatedData,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      setPeoplePagedisplayType: (type) => {\r\n        dispatch(setPeoplePagedisplayTypeAction(type));\r\n      },\r\n      getPeople: async (page, search = \"\") => {\r\n        await dispatch(getPeopleDataAction(page, search));\r\n      },\r\n      clearPeopleData: () => {\r\n        dispatch(clearPeopleDataAction());\r\n      },\r\n      toggleFavoriteHero: (id, name) => {\r\n        dispatch(toggleFavoritesHeroesAction({ [id]: name }));\r\n      },\r\n      getFavoriteHeroes: async () => {\r\n        await dispatch(getFavoriteHeroesAction());\r\n      },\r\n      setObservedItemIndex: (index) => {\r\n        dispatch(setObservedItemIndexAction(index));\r\n      },\r\n      setPeoplePageFavoritesViewMode: (state) => {\r\n        dispatch(setPeoplePageFavoritesViewModeAction(state));\r\n      },\r\n      getFilmData: async (id) => {\r\n        await dispatch(getFilmDataAction(id));\r\n      },\r\n      getPlanetData: async (id) => {\r\n        await dispatch(getPlanetDataAction(id));\r\n      },\r\n      setSelectedCardItem: (id) => {\r\n        dispatch(setSelectedCardItemAction(id));\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst PeoplePageComponent = connect(mapStateToProps, mapDispatchToProps, null, {\r\n  pure: true,\r\n  areOwnPropsEqual: (nextOwnProps, ownProps) => {\r\n    return nextOwnProps.location.pathname === ownProps.location.pathname;\r\n  },\r\n  areStatesEqual: (next, prev) => {\r\n    //update page only when peopleData change\r\n    return (\r\n      !!next.peopleData.timeStamp &&\r\n      next.peopleData.timeStamp === prev.peopleData.timeStamp &&\r\n      next.relationships.timeStamp === prev.relationships.timeStamp\r\n    );\r\n  },\r\n})(PeoplePage);\r\n\r\nexport default withRouter((props) => <PeoplePageComponent {...props} />);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router\";\r\nimport { Provider } from \"react-redux\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport \"./style/index.scss\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport { RouteData } from \"./data\";\r\n\r\nimport { checkCookiesOnExists } from \"./helpers\";\r\n\r\nimport Layout from \"./components/generaComponents/Layout\";\r\n\r\nimport PageAreNotExist from \"./components/InfoPages/PageAreNotExists\";\r\n\r\nimport AuthPage from \"./components/AuthorizePage\";\r\nimport PeopleListPage from \"./components/PeoplePage\";\r\n\r\ndotenv.config({ path: \"../\" });\r\n\r\nexport default class App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <Route exact path={RouteData.Login} component={AuthPage} />\r\n          <Layout>\r\n            <Switch>\r\n              <InnerRoute\r\n                exact\r\n                path={[RouteData.Base, RouteData.People]}\r\n                component={PeopleListPage}\r\n              />\r\n              <InnerRoute component={PageAreNotExist} />\r\n            </Switch>\r\n          </Layout>\r\n        </Switch>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst InnerRoute = ({ exact, path, component }) => {\r\n  return checkCookiesOnExists() ? (\r\n    <Route exact={exact} path={path} component={component} />\r\n  ) : (\r\n    <Redirect to={{ pathname: RouteData.Login }} />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={'/'}>\r\n    <App />\r\n  </HashRouter>,\r\n  rootElement);\r\n"],"sourceRoot":""}