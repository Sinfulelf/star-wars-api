{"version":3,"sources":["models/generalModels/IdUrlModel.js","data/routeData.js","data/urlData.js","models/dataModels/planetDetailsModel.js","models/dataModels/heroDetailsModel.js","models/dataModels/filmDetailModel.js","models/dataModels/peoplePageDispaType.js","models/storeModels/peopleStoreModel.js","models/storeModels/userInfoStoreModel.js","models/storeModels/relationshipsStoreModel.js","helpers/cookiesHelpers.js","helpers/httpHelpers.js","helpers/storageHelpers.js","helpers/validationHelper.js","helpers/firebaseHelpers.js","actions/peopleActions.js","actions/userInfoActions.js","actions/relationshipsActions.js","reducer/userInfoReducer.js","reducer/peopleReducer.js","reducer/relationshipsReducer.js","reducer/index.js","store/index.js","components/helpersComponents/Mocks/ParagraphMock.js","components/generaComponents/NavigationBar.js","components/generaComponents/Layout.js","components/InfoPages/PageAreNotExists.js","components/helpersComponents/Icons/IconPattern.js","components/helpersComponents/Icons/DeathStar.js","components/AuthorizePage/SingInForm.js","components/AuthorizePage/RegisterForm.js","components/AuthorizePage/index.js","components/PeoplePage/HeaderFilterInput.js","components/PeoplePage/HeaderPagination.js","components/PeoplePage/Header.js","components/PeoplePage/personCardConfig.js","components/PeoplePage/HeroInfo/HeroProperty.js","components/PeoplePage/HeroInfo/HeroInfoProperties.js","components/PeoplePage/HeroInfo/HeroHomeProperty.js","components/PeoplePage/HeroInfo/HeroFilmsProperty.js","components/PeoplePage/HeroInfo/index.js","components/PeoplePage/PersonCard.js","components/PeoplePage/Content.js","components/PeoplePage/Footer.js","components/PeoplePage/index.js","App.js","index.js"],"names":["IdUrlModel","pettern","this","urlValue","val","id","matchVal","exec","length","Number","replace","IdUrlModelPropTypes","PT","oneOfType","string","number","isRequired","url","RouteData","baseStarWarsAPIUrl","process","StarWarsUrlData","GET_PEOPLE","GET_PLANET","GET_FILM","StartWarsUrlGetIdRegEx","PlanetDetails","name","population","climate","PlanetDetailsPropTypes","HeroDetails","height","mass","hairColour","skinColour","eyeColour","birthYear","gender","planet","films","loaded","fromPage","resultItem","entity","birth_year","eye_color","map","x","FilmDetail","hair_color","homeworld","skin_color","shape","arrayOf","FilmDetailPropTypes","title","releaseDate","instanceOf","Date","PeoplePageDispaType","Object","freeze","list","cards","PeopleStore","timeStamp","loading","people","totalPeopleCount","observerIndex","filterName","currentPage","uploadedPages","favoriteHeroes","itemsPerPage","exFavorite","displayType","showFavoritesOnly","UserInfoStore","bool","object","oneOf","userName","offlineMode","user","checkCookiesOnExists","document","cookie","updateCookiesInterval","userInfoKey","setUserCookies","userInfo","time","setTimeForCookies","clearInterval","setInterval","toGMTString","seconds","now","getTime","setTime","getUserInfoFromCookie","ca","split","i","c","charAt","substring","indexOf","JSON","parse","ex","console","log","getData","urlData","postBody","a","input","getUrl","fetch","headers","Accept","method","body","stringify","response","json","data","baseUrl","param","query","URLSearchParams","toString","favoritesHeroesKey","getFavoritesHeroesFromStorage","favoritesHeroes","localStorage","getItem","setFavoritesHeroesToStorage","items","setItem","validateForm","email","password","validateEmail","validatePassword","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseDb","database","createUserWithFirebase","auth","setPersistence","Auth","Persistence","LOCAL","createUserWithEmailAndPassword","Error","signInWithFormFirebase","signInWithEmailAndPassword","signInWithGoogleFirebase","provider","GoogleAuthProvider","signInWithPopup","signOut","PeopleActions","setPeoplePageLoadingState","state","dispatch","type","payload","setPeoplePageLoadingStateDispatch","setPeoplePagedisplayTypeDispatch","setPeoplePagePaginationPageDispatch","page","resetPeopleDataDispatch","clearPeopleData","getPeopleDataDispatch","count","search","getPeopleData","getState","pageStr","peopleData","newSearch","results","new","getPeopleFavoriteData","setPeoplePageFavoritesViewModeDispatch","toggleFavoritesHeroesDispatch","getFavoriteHeroes","uid","ref","once","value","setObservedItemIndex","index","setObservedItemIndexDispatch","toLowerCase","filteredItems","keys","key","filter","idsPerPage","slice","itemsToUpload","item","find","push","mockItem","updateHeroData","updateHeroDataDispatch","hero","UserInfoActions","clearUserInfo","setUserInfo","setUserInfoDispatch","getAuthorizedOnlineUser","reloginCallBack","userExistsCallback","userNotExistsCallback","getAuthorizedOnlineUserDispatch","onAuthStateChanged","RelationshipsActions","getFilmData","relationships","filmsData","release_date","model","film","warn","getPlanetData","planestsData","CLEAR_USER_INFO","SET_USER_INFO","GET_AUTHORIZED_ONLINE_USER_DATA","initialState","userInfoReducer","handleActions","userData","SET_PEOPLE_PAGE_LOADING_STATE","SET_PEOPLE_PAGE_DISPAY_TYPE","SET_PEOPLE_PAGE_PAGINATION_PAGE","RESET_PEOPLE_DATA","CLEAR_PEOPLE_DATA","GET_PEOPLE_DATA","UPDATE_HERO_DATA","SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE","TOGGLE_FAVORITE_HEROES","SET_OBSERVED_ITEM_INDEX","peopleReducer","newUploadedPages","Set","clearUploadedPages","pageToClear","shift","updatedPeopleList","firstUpdateIndex","newFavorites","GET_FILM_DATA","GET_PLANET_DATA","relationshipsReducer","relationshipsData","rootReducer","combineReducers","store","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","configureStore","userInfoState","peopleState","relationshipsState","ParagraphMock","width","className","style","NavigationBarConnected","connect","ownProps","actions","useState","showHelloLabel","setShowHelloLabel","useEffect","Transition","visible","animation","duration","marginBottom","fontSize","Button","animated","as","Link","to","marginLeft","Content","hidden","Icon","size","flipped","NavigationBarComponent","props","Layout","history","getUserInfoDataFromStorages","location","pathname","Divider","fitted","children","PureComponent","LayoutComponent","withRouter","logout","setUserInfoAction","getAuthorizedOnlineUserAction","PageAreNotExist","Segment","maxWidth","margin","padding","Grid","centered","columns","Column","color","marginTop","fill","stroke","y","DeathStarIcon","IconPattern","viewBox","xmlns","r","cy","cx","d","SingInForm","setVisible","loginWithForm","loginViaGoogleForm","error","removeErrorState","Form","widths","Input","icon","iconPosition","label","placeholder","onChange","content","primary","onClick","target","emailEl","querySelector","passwordEl","Message","maginLeft","display","background","RegisterForm","create","onSubmit","disabled","getCapitalizedEmailStart","emailStart","toUpperCase","AuthPageComponent","clearUserInfoAction","authOffline","authOnline","displayName","cutomDisplayName","pure","areOwnPropsEqual","cookies","temp","eqPos","substr","deleteAllCookies","signOutFirebase","showRegisterForm","setShowRegisterForm","formLoading","setFormLoading","singInErrorState","setSingInErrorState","registrationErrorState","setRegistrationErrorState","Dimmer","active","inverted","Loader","Subheader","relaxed","stackable","divided","verticalAlign","Popup","trigger","basic","Group","corner","vertical","rel","href","HeaderFilterInput","filterValue","setFilterValue","labelPosition","HeaderPagination","isFavorites","showFavoriteOnly","Menu","pointing","secondary","Item","PeoplePageHeader","pageName","setPeoplePagedisplayType","Field","Checkbox","slider","checked","personCardConfig","stylesConfigs","gap","userInfoMargin","horizontalGap","verticalGap","shouldRecalculateStyle","nextProps","prevState","wrapperWidth","styleConditions","recalculateStyle","top","left","cardSpace","rowUsableWidth","Math","floor","totalLeftWidth","row","HeroProperty","paddingRight","HeroInfoProperties","HeroHomeProperty","planets","HeroFilmsProperty","HeroInfo","uploadHeroAdditionalData","showFullInfo","prevProps","PersonCard","isActive","heartIconFilled","setCardActiveState","setState","setHeartIconFilled","toggleFavoriteHero","isFavorite","isObserved","onMouseUp","_","onMouseLeave","onMouseDown","onMouseEnter","e","stopPropagation","PeoplePageContent","paddingTop","paddingBottom","overflow","handleWidth","paddingLeft","PeoplePageFooter","activePage","totalPages","onPageChange","paginationConfig","ellipsisItem","Pagination","firstItem","lastItem","PeoplePage","getPaginationsItemsCount","ceil","onPaginationPageChange","getPeople","setPeoplePageFavoritesViewMode","filterByName","paginatedData","paginationsCount","PeoplePageComponent","setPeoplePagedisplayTypeAction","getPeopleDataAction","clearPeopleDataAction","set","setTimeout","getFavoriteHeroesAction","setObservedItemIndexAction","setPeoplePageFavoritesViewModeAction","getFilmDataAction","getPlanetDataAction","nextOwnProps","areStatesEqual","next","prev","dotenv","config","path","App","exact","component","AuthPage","PeopleListPage","InnerRoute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.13aacd23.chunk.js","sourcesContent":["import PT from \"prop-types\";\r\n\r\nexport class IdUrlModel {\r\n  constructor(pettern) {\r\n    this.#pattern = pettern;\r\n  }\r\n  #pattern = \"\";\r\n\r\n  get url() {\r\n    return this.urlValue;\r\n  }\r\n  set url(val) {\r\n    if (!this.id && val) {\r\n      const matchVal = this.#pattern.exec(val);\r\n      if (matchVal && matchVal.length >= 2) {\r\n        this.id = Number(matchVal[1].replace(\"/\", \"\"));\r\n      }\r\n    }\r\n    this.urlValue = val;\r\n  }\r\n}\r\n\r\nexport const IdUrlModelPropTypes = {\r\n  id: PT.oneOfType([PT.string, PT.number]).isRequired,\r\n  url: PT.string,\r\n};\r\n","export const RouteData = {\r\n  Base: \"/\",\r\n  Login: \"/login\",\r\n  People: \"/people\",\r\n  Hero: \"/hero/:id\",\r\n\r\n  NotExists: '/404'\r\n};\r\n","const baseStarWarsAPIUrl = process.env.REACT_APP_STARWARS_API_URL;\r\n\r\nexport const StarWarsUrlData = {\r\n  GET_PEOPLE: `${baseStarWarsAPIUrl}/people/`,\r\n  GET_PLANET: `${baseStarWarsAPIUrl}/planets/`,\r\n  GET_FILM: `${baseStarWarsAPIUrl}/films/`,\r\n};\r\n\r\nexport const StartWarsUrlGetIdRegEx = {\r\n  GET_PEOPLE_REGEX: /people\\/(.*)/,\r\n  GET_PLANET_REGEX: /planets\\/(.*)/,\r\n  GET_FILM_REGEX: /films\\/(.*)/,\r\n};","import PT from \"prop-types\";\r\n\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class PlanetDetails extends IdUrlModel {\r\n  constructor(url) {\r\n    super(StartWarsUrlGetIdRegEx.GET_PLANET_REGEX);\r\n    this.url = url;\r\n  }\r\n\r\n  name = \"\";\r\n  population = 0;\r\n  climate = \"\";\r\n}\r\n\r\nexport const PlanetDetailsPropTypes ={\r\n  ...IdUrlModelPropTypes,\r\n  name: PT.string,\r\n  population: PT.number,\r\n  climate: PT.string,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport {\r\n  PlanetDetails,\r\n  FilmDetail,\r\n  FilmDetailPropTypes,\r\n  PlanetDetailsPropTypes,\r\n} from \"./\";\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class HeroDetails extends IdUrlModel {\r\n  constructor() {\r\n    super(StartWarsUrlGetIdRegEx.GET_PEOPLE_REGEX);\r\n  }\r\n  name = \"\";\r\n  height = \"\";\r\n  mass = 0;\r\n  hairColour = \"\";\r\n  skinColour = \"\";\r\n  eyeColour = \"\";\r\n  birthYear = \"\";\r\n  gender = \"\";\r\n  planet = null;\r\n  films = [];\r\n\r\n  loaded = true;\r\n\r\n  fromPage = \"\";\r\n\r\n  static new(resultItem) {\r\n    const entity = new HeroDetails();\r\n\r\n    if (\"birth_year\" in resultItem) entity.birthYear = resultItem.birth_year;\r\n    if (\"eye_color\" in resultItem) entity.eyeColour = resultItem.eye_color;\r\n    if (\"films\" in resultItem)\r\n      entity.films = (resultItem.films || []).map((x) => new FilmDetail(x));\r\n    if (\"gender\" in resultItem) entity.gender = resultItem.gender;\r\n    if (\"hair_color\" in resultItem) entity.hairColour = resultItem.hair_color;\r\n    if (\"height\" in resultItem) entity.height = resultItem.height;\r\n    if (\"homeworld\" in resultItem)\r\n      entity.planet = new PlanetDetails(resultItem.homeworld);\r\n    if (\"mass\" in resultItem) entity.mass = resultItem.mass;\r\n    if (\"name\" in resultItem) entity.name = resultItem.name;\r\n    if (\"skin_color\" in resultItem) entity.skinColour = resultItem.skin_color;\r\n    if (\"url\" in resultItem) entity.url = resultItem.url;\r\n\r\n    return entity;\r\n  }\r\n}\r\n\r\nexport const HeroDetailsPropTypes = {\r\n  ...IdUrlModelPropTypes,\r\n  name: PT.string.isRequired,\r\n  height: PT.oneOfType([PT.number, PT.string]).isRequired,\r\n  mass: PT.oneOfType([PT.number, PT.string]).isRequired,\r\n  hairColour: PT.string.isRequired,\r\n  skinColour: PT.string.isRequired,\r\n  eyeColour: PT.string.isRequired,\r\n  birthYear: PT.string.isRequired,\r\n  gender: PT.string.isRequired,\r\n  planet: PT.shape(PlanetDetailsPropTypes),\r\n  films: PT.arrayOf(PT.shape(FilmDetailPropTypes)).isRequired,\r\n  fromPage: PT.oneOfType([PT.string, PT.number]).isRequired,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nimport { IdUrlModel, IdUrlModelPropTypes } from \"../generalModels\";\r\nimport { StartWarsUrlGetIdRegEx } from \"../../data\";\r\n\r\nexport class FilmDetail extends IdUrlModel {\r\n  constructor(url) {\r\n    super(StartWarsUrlGetIdRegEx.GET_FILM_REGEX);\r\n    this.url = url;\r\n  }\r\n\r\n  title = \"\";\r\n  releaseDate = null;\r\n}\r\n\r\nexport const FilmDetailPropTypes = {\r\n  ...IdUrlModelPropTypes,\r\n  title: PT.string.isRequired,\r\n  releaseDate: PT.oneOfType([PT.string, PT.instanceOf(Date)]),\r\n};\r\n","export const PeoplePageDispaType = Object.freeze({\r\n  list: \"list\",\r\n  cards: \"cards\",\r\n});","import PT from \"prop-types\";\r\nimport { HeroDetails, PeoplePageDispaType } from \"../dataModels\";\r\n\r\nexport class PeopleStore {\r\n  timeStamp = 0;\r\n  loading = true;\r\n  people = [];\r\n  totalPeopleCount = 0;\r\n\r\n  observerIndex = 0;\r\n\r\n  filterName = \"\";\r\n\r\n  currentPage = \"1\";\r\n  uploadedPages = [];\r\n\r\n  favoriteHeroes = {};\r\n\r\n  itemsPerPage = 10;\r\n  exFavorite = false;\r\n\r\n  displayType = PeoplePageDispaType.list;\r\n  showFavoritesOnly = false;\r\n}\r\n\r\nexport const PeopleStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  loading: PT.bool,\r\n  people: PT.arrayOf(PT.instanceOf(HeroDetails)),\r\n  totalPeopleCount: PT.number,\r\n  observerIndex: PT.number,\r\n  currentPage: PT.string,\r\n  filterName: PT.string,\r\n  uploadedPages: PT.arrayOf(PT.string),\r\n\r\n  favoriteHeroes: PT.object,\r\n\r\n  exFavorite: PT.bool,\r\n\r\n  displayType: PT.oneOf([PeoplePageDispaType.list, PeoplePageDispaType.cards]),\r\n  showFavoritesOnly: PT.bool,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nexport class UserInfoStore {\r\n  timeStamp = 0;\r\n\r\n  userName = \"\";\r\n  offlineMode = true;\r\n  user = null;\r\n}\r\n\r\nexport const UserInfoStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  userName: PT.string,\r\n  offlineMode: PT.bool,\r\n  userId: PT.object,\r\n};\r\n","import PT from \"prop-types\";\r\n\r\nexport class RelationshipsStore {\r\n  timeStamp = 0;\r\n\r\n  filmsData = {};\r\n  planestsData = {};\r\n}\r\n\r\nexport const RelationshipsStorePropTypes = {\r\n  timeStamp: PT.number,\r\n  filmsData: PT.object,\r\n  planestsData: PT.object,\r\n};\r\n","import { UserInfoStore } from \"../models/storeModels\";\r\n\r\n/**\r\n * Coockies helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.cookiesHelpers\r\n */\r\n\r\n/**\r\n * Check site cookies on exists and not expires;\r\n *\r\n * @returns {boolean}\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function checkCookiesOnExists() {\r\n  const cookie = !!document.cookie;\r\n  return cookie;\r\n}\r\n\r\nlet updateCookiesInterval = 0;\r\nconst userInfoKey = \"userInfo\";\r\n/**\r\n * Set user data to cookies;\r\n * <pre>\r\n * - When cookie expires and session is actiove, we reset they;\r\n * </pre>\r\n * @param {string} userInfo auth user stringified data\r\n * @param {number} time additional time to expires (default: 10 min)\r\n *\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function setUserCookies(userInfo, time = 600_000) {\r\n  document.cookie = `${userInfoKey}=${userInfo}; expires=${setTimeForCookies(\r\n    time\r\n  )}`;\r\n  if (updateCookiesInterval) {\r\n    clearInterval(updateCookiesInterval);\r\n  }\r\n\r\n  if (time) {\r\n    updateCookiesInterval = setInterval(() => {\r\n      document.cookie = `${document.cookie}; expires=${setTimeForCookies(\r\n        new Date(time).toGMTString()\r\n      )}`;\r\n    }, time * 0.8);\r\n  }\r\n}\r\n\r\nexport function deleteAllCookies() {\r\n  const cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n      let temp = cookies[i];\r\n      const eqPos = temp.indexOf(\"=\");\r\n      const name = eqPos > -1 ? temp.substr(0, eqPos) : temp;\r\n      document.cookie = name + \"=;expires=\"+new Date(0).toGMTString();\r\n  }\r\n}\r\n\r\nfunction setTimeForCookies(seconds) {\r\n  const now = new Date();\r\n  let time = now.getTime();\r\n\r\n  time += seconds * 1000;\r\n  now.setTime(time);\r\n  return now;\r\n}\r\n\r\n/**\r\n * Get user Info data from cookies; (code from `w3schools`)\r\n *\r\n * @returns instanse of userInfo\r\n * @memberof Helpers.cookiesHelpers\r\n */\r\nexport function getUserInfoFromCookie() {\r\n  try {\r\n    if (checkCookiesOnExists()) {\r\n      const ca = document.cookie.split(\";\");\r\n      for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) === \" \") {\r\n          c = c.substring(1);\r\n        }\r\n        if (c.indexOf(userInfoKey) === 0) {\r\n          return JSON.parse(c.substring(userInfoKey.length + 1, c.length));\r\n        }\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    console.log(`getUserInfoFromCookie exception: ${ex}`);\r\n  }\r\n  return new UserInfoStore();\r\n}\r\n","/**\r\n * Networks helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.httpHelpers\r\n */\r\n\r\n/**\r\n * Get json data via fetch;\r\n * @param {Object} urlData `{ baseUrl, param, query }`\r\n * @param {RequestInit} postBody request body\r\n *\r\n * @memberof Helpers.httpHelpers\r\n */\r\nexport async function getData(urlData, postBody) {\r\n  const input = getUrl(urlData);\r\n\r\n  let response = !postBody\r\n    ? await fetch(input)\r\n    : await fetch(input, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(postBody),\r\n      });\r\n  let data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport function getUrl(urlData) {\r\n  const { baseUrl, param, query } = urlData;\r\n  let url = baseUrl;\r\n  if (param) {\r\n    url += `${param}/`;\r\n  }\r\n  if (query) {\r\n    url += \"?\" + new URLSearchParams(query).toString();\r\n  }\r\n  return url;\r\n}","/**\r\n * LocalStorage helpers functions;\r\n * @memberof Helpers\r\n * @namespace Helpers.storageHelpers\r\n */\r\n\r\nconst favoritesHeroesKey = \"star-wars-api-favorites-heroes\";\r\n/**\r\n * Get favorites heroes from localStorage;\r\n *\r\n * @returns {Object} id-name of heroes\r\n *\r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function getFavoritesHeroesFromStorage() {\r\n  const favoritesHeroes = localStorage.getItem(favoritesHeroesKey);\r\n  if (favoritesHeroes) {\r\n    return JSON.parse(favoritesHeroes);\r\n  }\r\n  return [];\r\n}\r\n\r\n/**\r\n * Set favorites heroes to localStorage;\r\n * @param {Object} items id-name of favorite heroes\r\n *\r\n * @memberof Helpers.storageHelpers\r\n */\r\nexport function setFavoritesHeroesToStorage(items) {\r\n  localStorage.setItem(favoritesHeroesKey, JSON.stringify(items));\r\n}","export function validateEmail(email) {\r\n  if (email) {\r\n    const val = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.exec(email);\r\n    if (val && val.length) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function validatePassword(password) {\r\n  return (\r\n    password && password.length && password.length > 5 && password.length < 25\r\n  );\r\n}\r\n\r\nexport function validateForm(email, password) {\r\n  return validateEmail(email) && validatePassword(password);\r\n}\r\n","\r\nimport firebase from \"firebase\";\r\nimport { validateForm } from \".\";\r\n\r\nconst getFirebaseConfig = () => ({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORE_BUCJET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGIN_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nfirebase.initializeApp(getFirebaseConfig());\r\n\r\nexport const firebaseDb = firebase.database();\r\n\r\nexport async function createUserWithFirebase(email, password) {\r\n  try {\r\n    if (validateForm(email, password)) {\r\n      const auth = firebase.auth();\r\n      await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n      return await auth.createUserWithEmailAndPassword(email, password);\r\n    } else {\r\n      throw Error(\"incorrect form\");\r\n    }\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signInWithFormFirebase(email, password) {\r\n  try {\r\n    if (validateForm(email, password)) {\r\n      const auth = firebase.auth();\r\n      await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n      return await auth.signInWithEmailAndPassword(email, password);\r\n    } else {\r\n      throw Error(\"incorrect form\");\r\n    }\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport async function signInWithGoogleFirebase() {\r\n  try {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const auth = firebase.auth();\r\n    await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n    return await auth.signInWithPopup(provider);\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n}\r\n\r\nexport function observeFirebaseUser(userExistsCallback, userNotExistsCallback) {\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      if (userExistsCallback && typeof userExistsCallback === \"function\")\r\n        userExistsCallback(user);\r\n    } else {\r\n      if (userNotExistsCallback && typeof userNotExistsCallback === \"function\")\r\n        userNotExistsCallback();\r\n    }\r\n  });\r\n}\r\n\r\nexport async function signOutFirebase() {\r\n  await firebase.auth().signOut();\r\n}\r\n","import { getData } from \"../helpers\";\r\nimport { StarWarsUrlData } from \"../data\";\r\nimport { HeroDetails } from \"../models/dataModels\";\r\n\r\nimport {\r\n  firebaseDb,\r\n  getFavoritesHeroesFromStorage,\r\n  setFavoritesHeroesToStorage,\r\n} from \"../helpers\";\r\n\r\nexport const PeopleActions = {\r\n  SET_PEOPLE_PAGE_LOADING_STATE: \"SET_PEOPLE_PAGE_LOADING_STATE\",\r\n  SET_PEOPLE_PAGE_DISPAY_TYPE: \"SET_PEOPLE_PAGE_DISPAY_TYPE\",\r\n  SET_PEOPLE_PAGE_PAGINATION_PAGE: \"SET_PEOPLE_PAGE_PAGINATION_PAGE\",\r\n  RESET_PEOPLE_DATA: \"RESET_PEOPLE_DATA\",\r\n  CLEAR_PEOPLE_DATA: \"CLEAR_PEOPLE_DATA\",\r\n  GET_PEOPLE_DATA: \"GET_PEOPLE_DATA\",\r\n  UPDATE_HERO_DATA: \"UPDATE_HERO_DATA\",\r\n  SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE: \"SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE\",\r\n\r\n  TOGGLE_FAVORITE_HEROES: \"TOGGLE_FAVORITE_HEROES\",\r\n  SET_OBSERVED_ITEM_INDEX: \"SET_OBSERVED_ITEM_INDEX\",\r\n};\r\n\r\nconst setPeoplePageLoadingStateDispatch = (state) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_LOADING_STATE,\r\n  payload: { state },\r\n});\r\n\r\nfunction setPeoplePageLoadingState(state) {\r\n  return (dispatch) => {\r\n    dispatch(setPeoplePageLoadingStateDispatch(state));\r\n  };\r\n}\r\n\r\nconst setPeoplePagedisplayTypeDispatch = (type) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_DISPAY_TYPE,\r\n  payload: { type },\r\n});\r\n\r\nexport function setPeoplePagedisplayType(type) {\r\n  return async (dispatch, getState) => {\r\n    const { peopleData } = getState();\r\n    if (peopleData.displayType !== type) {\r\n      dispatch(setPeoplePagedisplayTypeDispatch(type));\r\n    }\r\n  };\r\n}\r\n\r\nconst setPeoplePagePaginationPageDispatch = (page) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_PAGINATION_PAGE,\r\n  payload: { page },\r\n});\r\n\r\nconst resetPeopleDataDispatch = () => ({\r\n  type: PeopleActions.RESET_PEOPLE_DATA,\r\n});\r\n\r\nconst clearPeopleDataDispatch = () => ({\r\n  type: PeopleActions.CLEAR_PEOPLE_DATA,\r\n});\r\n\r\nexport function clearPeopleData() {\r\n  return (dispatch) => {\r\n    dispatch(clearPeopleDataDispatch());\r\n  };\r\n}\r\n\r\nconst getPeopleDataDispatch = (data, count, page, search) => ({\r\n  type: PeopleActions.GET_PEOPLE_DATA,\r\n  payload: { data, count, page, search },\r\n});\r\n\r\nexport function getPeopleData(page, search) {\r\n  return async (dispatch, getState) => {\r\n    const pageStr = (page || 1).toString();\r\n    const { peopleData } = getState();\r\n    const newSearch = search !== peopleData.filterName;\r\n    if (newSearch) {\r\n      dispatch(resetPeopleDataDispatch());\r\n    }\r\n    if (!peopleData.showFavoritesOnly) {\r\n      if (newSearch || peopleData.uploadedPages.indexOf(pageStr) === -1) {\r\n        try {\r\n          dispatch(setPeoplePageLoadingState(true));\r\n\r\n          const query = { page };\r\n          if (search) query.search = search;\r\n\r\n          const { count, results } = await getData({\r\n            baseUrl: StarWarsUrlData.GET_PEOPLE,\r\n            query,\r\n          });\r\n          if (results) {\r\n            dispatch(\r\n              getPeopleDataDispatch(\r\n                results.map((x) => HeroDetails.new(x)),\r\n                count,\r\n                pageStr,\r\n                search\r\n              )\r\n            );\r\n          } else {\r\n            const exMessage = \"No data from response\";\r\n            throw exMessage;\r\n          }\r\n        } catch (ex) {\r\n          console.log(\"ex\", ex);\r\n          //todo Add message about exception\r\n        } finally {\r\n          dispatch(setPeoplePageLoadingState(false));\r\n        }\r\n      } else {\r\n        dispatch(setPeoplePagePaginationPageDispatch(pageStr));\r\n      }\r\n    } else {\r\n      await dispatch(getPeopleFavoriteData(page, search));\r\n    }\r\n  };\r\n}\r\n\r\nconst setPeoplePageFavoritesViewModeDispatch = (state) => ({\r\n  type: PeopleActions.SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE,\r\n  payload: { state },\r\n});\r\nexport function setPeoplePageFavoritesViewMode(state) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setPeoplePageFavoritesViewModeDispatch(state));\r\n\r\n    const { peopleData } = getState();\r\n    const { filterName } = peopleData;\r\n    if (state) {\r\n      await dispatch(getPeopleFavoriteData(1, filterName));\r\n    } else {\r\n      dispatch(resetPeopleDataDispatch());\r\n      await dispatch(getPeopleData(1, filterName));\r\n    }\r\n  };\r\n}\r\n\r\nconst toggleFavoritesHeroesDispatch = (items) => ({\r\n  type: PeopleActions.TOGGLE_FAVORITE_HEROES,\r\n  payload: { items },\r\n});\r\nexport function toggleFavoritesHeroes(items) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(toggleFavoritesHeroesDispatch(items));\r\n    console.log(123);\r\n    const { userInfo, peopleData } = getState();\r\n    if (userInfo.offlineMode) {\r\n      setFavoritesHeroesToStorage(peopleData.favoriteHeroes);\r\n    } else {\r\n      const { user } = userInfo;\r\n      if (user && user.uid) {\r\n        try {\r\n          firebaseDb\r\n            .ref(user.uid)\r\n            .set(JSON.stringify(peopleData.favoriteHeroes));\r\n        } catch (ex) {\r\n          console.log(ex);\r\n        }\r\n      }\r\n    }\r\n    if (peopleData.showFavoritesOnly) {\r\n      setTimeout(() => {\r\n        const { currentPage, filterName } = peopleData;\r\n        dispatch(getPeopleFavoriteData(currentPage, filterName));\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function getFavoriteHeroes() {\r\n  return async (dispatch, getState) => {\r\n    const { userInfo } = getState();\r\n    if (userInfo.offlineMode) {\r\n      dispatch(toggleFavoritesHeroesDispatch(getFavoritesHeroesFromStorage()));\r\n    } else {\r\n      const { user } = userInfo;\r\n      if (user && user.uid) {\r\n        try {\r\n          const value = await firebaseDb.ref(user.uid).once('value');\r\n          if(value && value.val) {\r\n            dispatch(toggleFavoritesHeroesDispatch(JSON.parse(value.val())));\r\n          }\r\n        } catch (ex) {\r\n          console.log(ex);\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst setObservedItemIndexDispatch = (index) => ({\r\n  type: PeopleActions.SET_OBSERVED_ITEM_INDEX,\r\n  payload: { index },\r\n});\r\nexport function setObservedItemIndex(index) {\r\n  return (dispatch) => {\r\n    dispatch(setObservedItemIndexDispatch(index));\r\n  };\r\n}\r\n\r\nfunction getPeopleFavoriteData(page, search) {\r\n  return async (dispatch, getState) => {\r\n    const { peopleData } = getState();\r\n    const { favoriteHeroes, people, itemsPerPage } = peopleData;\r\n\r\n    try {\r\n      dispatch(setPeoplePageLoadingState(true));\r\n      const filterName = (search || \"\").toLowerCase();\r\n      const filteredItems = Object.keys(favoriteHeroes)\r\n        .map((key) => ({ id: Number(key), name: favoriteHeroes[key] }))\r\n        .filter(\r\n          (x) =>\r\n            x &&\r\n            (x.name || \"\").toString().toLowerCase().indexOf(filterName) !== -1\r\n        );\r\n\r\n      const idsPerPage = filteredItems.slice(\r\n        itemsPerPage * (page - 1),\r\n        itemsPerPage * page\r\n      );\r\n      if (!idsPerPage.length && page > 1) {\r\n        await dispatch(getPeopleFavoriteData(page - 1, search));\r\n      } else {\r\n        const itemsToUpload = [];\r\n        const items = [];\r\n\r\n        for (let i of idsPerPage) {\r\n          const item = people.find((x) => x && x.id === i.id);\r\n          if (item) {\r\n            items.push(item);\r\n          } else {\r\n            itemsToUpload.push(i.id);\r\n            const mockItem = new HeroDetails();\r\n            mockItem.id = i.id;\r\n            mockItem.name = i.name;\r\n            mockItem.loaded = false;\r\n            items.push(mockItem);\r\n          }\r\n        }\r\n\r\n        dispatch(\r\n          getPeopleDataDispatch(\r\n            items,\r\n            Object.keys(filteredItems).length,\r\n            page.toString(),\r\n            search\r\n          )\r\n        );\r\n        dispatch(setPeoplePageLoadingState(false));\r\n        for (let id of itemsToUpload) {\r\n          await dispatch(updateHeroData(id));\r\n        }\r\n      }\r\n    } catch (ex) {\r\n      console.log(\"ex\", ex);\r\n      //todo Add message about exception\r\n      dispatch(setPeoplePageLoadingState(false));\r\n    }\r\n  };\r\n}\r\n\r\nconst updateHeroDataDispatch = (hero) => ({\r\n  type: PeopleActions.UPDATE_HERO_DATA,\r\n  payload: { hero },\r\n});\r\n\r\nfunction updateHeroData(id) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await getData({\r\n        baseUrl: StarWarsUrlData.GET_PEOPLE,\r\n        param: id,\r\n      });\r\n\r\n      const hero = HeroDetails.new(data);\r\n      dispatch(updateHeroDataDispatch(hero));\r\n    } catch (ex) {\r\n      console.log(\"ex\", ex);\r\n      //todo Add message about exception\r\n    }\r\n  };\r\n}\r\n","import { observeFirebaseUser } from \"../helpers\";\r\n\r\nimport { getFavoriteHeroes } from \"./peopleActions\";\r\n\r\nexport const UserInfoActions = {\r\n  CLEAR_USER_INFO: \"CLEAR_USER_INFO\",\r\n  SET_USER_INFO: \"SET_USER_INFO\",\r\n  GET_AUTHORIZED_ONLINE_USER_DATA: \"GET_AUTHORIZED_ONLINE_USER_DATA\",\r\n};\r\n\r\n/**\r\n * Actions and events about user information.\r\n * @memberof Actions\r\n * @namespace Actions.userInfoActions\r\n */\r\n\r\nconst clearUserInfoDispatch = () => ({\r\n  type: UserInfoActions.CLEAR_USER_INFO,\r\n});\r\nexport function clearUserInfo() {\r\n  return (dispatch) => {\r\n    dispatch(clearUserInfoDispatch());\r\n  };\r\n}\r\n\r\nconst setUserInfoDispatch = (userName, offlineMode) => ({\r\n  type: UserInfoActions.SET_USER_INFO,\r\n  payload: { userName, offlineMode },\r\n});\r\n\r\n/**\r\n * Set user Auth info;\r\n * @param {string} userName the name of user\r\n * @param {boolean} offlineMode update data with localstorage, instead firebase\r\n *\r\n * @memberof Actions.userInfoActions\r\n */\r\nexport function setUserInfo(userName, offlineMode) {\r\n  return (dispatch) => {\r\n    dispatch(setUserInfoDispatch(userName, offlineMode));\r\n  };\r\n}\r\n\r\nconst getAuthorizedOnlineUserDispatch = (user) => ({\r\n  type: UserInfoActions.GET_AUTHORIZED_ONLINE_USER_DATA,\r\n  payload: { user },\r\n});\r\n\r\nexport function getAuthorizedOnlineUser(reloginCallBack) {\r\n  return (dispatch, getState) => {\r\n    observeFirebaseUser(\r\n      (user) => {\r\n        if (!getState().userInfo.user) {\r\n          dispatch(getAuthorizedOnlineUserDispatch(user));\r\n          dispatch(getFavoriteHeroes());\r\n        }\r\n      },\r\n      () => reloginCallBack()\r\n    );\r\n  };\r\n}\r\n","import { getData } from \"../helpers\";\r\nimport { StarWarsUrlData } from \"../data\";\r\n\r\nimport { FilmDetail, PlanetDetails } from \"../models/dataModels\";\r\n\r\nexport const RelationshipsActions = {\r\n  GET_FILM_DATA: \"GET_FILM_DATA\",\r\n  GET_PLANET_DATA: \"GET_PLANET_DATA\",\r\n};\r\n\r\n/**\r\n * Actions and events about main data dependency.\r\n * @memberof Actions\r\n * @namespace Actions.relationshipsActions\r\n */\r\n\r\nconst getFilmDataDispatch = (film) => ({\r\n  type: RelationshipsActions.GET_FILM_DATA,\r\n  payload: { film },\r\n});\r\n\r\n/**\r\n * Upload film full info;\r\n * @param {number} id film Id\r\n * \r\n * @memberof Actions.relationshipsActions\r\n * @async\r\n */\r\nexport function getFilmData(id) {\r\n  return async (dispatch, getState) => {\r\n    const { relationships } = getState();\r\n    if (!(id in relationships.filmsData)) {\r\n      try {\r\n        const { title, url, release_date } = await getData({\r\n          baseUrl: StarWarsUrlData.GET_FILM,\r\n          param: id,\r\n        });\r\n        if (title) {\r\n          const model = new FilmDetail(url);\r\n          model.title = title;\r\n          model.releaseDate = release_date;\r\n\r\n          dispatch(getFilmDataDispatch(model));\r\n        }\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n        //todo Add message about exception\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst getPlanetDataDispatch = (planet) => ({\r\n  type: RelationshipsActions.GET_PLANET_DATA,\r\n  payload: { planet },\r\n});\r\n\r\n/**\r\n * Upload planet full info;\r\n * @param {number} id planet Id\r\n * \r\n * @memberof Actions.relationshipsActions\r\n * @async\r\n */\r\nexport function getPlanetData(id) {\r\n  return async (dispatch, getState) => {\r\n    const { relationships } = getState();\r\n    if (!(id in relationships.planestsData)) {\r\n      try {\r\n        const {\r\n          url,\r\n          name,\r\n          population,\r\n          climate\r\n        } = await getData({\r\n          baseUrl: StarWarsUrlData.GET_PLANET,\r\n          param: id,\r\n        });\r\n        if(name) {\r\n          const model = new PlanetDetails(url);\r\n          model.name = name;\r\n          model.population = population;\r\n          model.climate = climate;\r\n\r\n          dispatch(getPlanetDataDispatch(model));\r\n        }\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n        //todo Add message about exception\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { handleActions } from \"redux-actions\";\r\nimport { UserInfoStore } from \"../models/storeModels\";\r\nimport { UserInfoActions } from \"../actions\";\r\n\r\nconst {\r\n  CLEAR_USER_INFO,\r\n  SET_USER_INFO,\r\n  GET_AUTHORIZED_ONLINE_USER_DATA,\r\n} = UserInfoActions;\r\n\r\nexport const initialState = new UserInfoStore();\r\n\r\nexport const userInfoReducer = handleActions(\r\n  {\r\n    [CLEAR_USER_INFO]: () => new UserInfoStore(),\r\n    [SET_USER_INFO]: (userData, { payload }) => {\r\n      const { userName, offlineMode } = payload;\r\n      return {\r\n        ...userData,\r\n        timeStamp: Date.now(),\r\n        userName,\r\n        offlineMode,\r\n      };\r\n    },\r\n    [GET_AUTHORIZED_ONLINE_USER_DATA]: (userData, { payload }) => {\r\n      const { user } = payload;\r\n      return {\r\n        ...userData,\r\n        timeStamp: Date.now(),\r\n        user,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { PeopleStore } from \"../models/storeModels\";\r\nimport { PeopleActions } from \"../actions\";\r\n\r\nconst {\r\n  SET_PEOPLE_PAGE_LOADING_STATE,\r\n  SET_PEOPLE_PAGE_DISPAY_TYPE,\r\n  SET_PEOPLE_PAGE_PAGINATION_PAGE,\r\n  RESET_PEOPLE_DATA,\r\n  CLEAR_PEOPLE_DATA,\r\n  GET_PEOPLE_DATA,\r\n  UPDATE_HERO_DATA,\r\n  SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE,\r\n  TOGGLE_FAVORITE_HEROES,\r\n  SET_OBSERVED_ITEM_INDEX,\r\n} = PeopleActions;\r\n\r\nexport const initialState = new PeopleStore();\r\n\r\nexport const peopleReducer = handleActions(\r\n  {\r\n    [SET_PEOPLE_PAGE_LOADING_STATE]: (peopleData, { payload }) => {\r\n      const { state } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        loading: state,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_DISPAY_TYPE]: (peopleData, { payload }) => {\r\n      const { type } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        displayType: type,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_PAGINATION_PAGE]: (peopleData, { payload }) => {\r\n      const { page } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        currentPage: page,\r\n        timeStamp: Date.now(),\r\n        observerIndex: 0,\r\n      };\r\n    },\r\n    [RESET_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        people: [],\r\n        observerIndex: 0,\r\n        currentPage: \"1\",\r\n        uploadedPages: [],\r\n      };\r\n    },\r\n    [CLEAR_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      return new PeopleStore();\r\n    },\r\n    [GET_PEOPLE_DATA]: (peopleData, { payload }) => {\r\n      const { data, count, page, search } = payload;\r\n\r\n      const newUploadedPages = [\r\n        ...new Set([...peopleData.uploadedPages, page]),\r\n      ];\r\n\r\n      const clearUploadedPages = newUploadedPages.length > 3;\r\n\r\n      const pageToClear = clearUploadedPages ? newUploadedPages.shift() : null;\r\n\r\n      const updatedPeopleList = clearUploadedPages\r\n        ? peopleData.people.map((x) => {\r\n            if (x && x.fromPage === pageToClear) {\r\n              return null;\r\n            }\r\n            return x;\r\n          })\r\n        : [...peopleData.people];\r\n\r\n      const firstUpdateIndex = (page - 1) * peopleData.itemsPerPage;\r\n      for (let i = 0; i < peopleData.itemsPerPage; i++) {\r\n        if (data[i]) {\r\n          updatedPeopleList[i + firstUpdateIndex] = {\r\n            ...data[i],\r\n            fromPage: page,\r\n          };\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...peopleData,\r\n        observerIndex: 0,\r\n        totalPeopleCount: count,\r\n        currentPage: page,\r\n        uploadedPages: newUploadedPages,\r\n        people: updatedPeopleList,\r\n        filterName: search,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n    [UPDATE_HERO_DATA]: (peopleData, { payload }) => {\r\n      const { hero } = payload;\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        people: peopleData.people.map((x) => {\r\n          if (x && x.id === hero.id) {\r\n            return {\r\n              ...x,\r\n              ...hero,\r\n            };\r\n          }\r\n          return x;\r\n        }),\r\n      };\r\n    },\r\n    [SET_PEOPLE_PAGE_FAVORITES_VIEW_MODE]: (peopleData, { payload }) => {\r\n      const { state } = payload;\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        showFavoritesOnly: state,\r\n        people: peopleData.people.filter(\r\n          (x) => x && x.id in peopleData.favoriteHeroes\r\n        ),\r\n      };\r\n    },\r\n    [TOGGLE_FAVORITE_HEROES]: (peopleData, { payload }) => {\r\n      const { items } = payload;\r\n\r\n      const newFavorites = { ...peopleData.favoriteHeroes };\r\n      for (let i in items) {\r\n        if (i in newFavorites) {\r\n          delete newFavorites[i];\r\n        } else {\r\n          newFavorites[i] = items[i];\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...peopleData,\r\n        timeStamp: Date.now(),\r\n        favoriteHeroes: newFavorites,\r\n        people: peopleData.showFavoritesOnly\r\n          ? peopleData.people.filter((x) => x && x.id in newFavorites)\r\n          : peopleData.people,\r\n      };\r\n    },\r\n    [SET_OBSERVED_ITEM_INDEX]: (peopleData, { payload }) => {\r\n      const { index } = payload;\r\n      return {\r\n        ...peopleData,\r\n        observerIndex: index,\r\n        timeStamp: Date.now(),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { RelationshipsStore } from \"../models/storeModels\";\r\nimport { RelationshipsActions } from \"../actions\";\r\n\r\nconst { GET_FILM_DATA, GET_PLANET_DATA } = RelationshipsActions;\r\n\r\nexport const initialState = new RelationshipsStore();\r\n\r\nexport const relationshipsReducer = handleActions(\r\n  {\r\n    [GET_FILM_DATA]: (relationshipsData, { payload }) => {\r\n      const { film } = payload;\r\n      return {\r\n        ...relationshipsData,\r\n        timeStamp: Date.now(),\r\n        filmsData: {\r\n          ...relationshipsData.filmsData,\r\n          [film.id]: film,\r\n        },\r\n      };\r\n    },\r\n    [GET_PLANET_DATA]: (relationshipsData, { payload }) => {\r\n      const { planet } = payload;\r\n      return {\r\n        ...relationshipsData,\r\n        timeStamp: Date.now(),\r\n        planestsData: {\r\n          ...relationshipsData.planestsData,\r\n          [planet.id]: planet,\r\n        },\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  initialState as userInfoState,\r\n  userInfoReducer,\r\n} from \"./userInfoReducer\";\r\n\r\nimport { initialState as peopleState, peopleReducer } from \"./peopleReducer\";\r\n\r\nimport {\r\n  initialState as relationshipsState,\r\n  relationshipsReducer,\r\n} from \"./relationshipsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  userInfo: userInfoReducer,\r\n  peopleData: peopleReducer,\r\n  relationships: relationshipsReducer,\r\n});\r\n\r\nexport const initialState = {\r\n  userInfo: userInfoState,\r\n  peopleData: peopleState,\r\n  relationships: relationshipsState,\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { initialState, rootReducer } from '../reducer';\r\n\r\nfunction configureStore(initialState) {\r\n  const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n  let middleware = composeEnhancers(applyMiddleware(thunk));\r\n  const store = createStore(rootReducer, initialState, middleware);\r\n  return store;\r\n}\r\n\r\nconst store = configureStore(initialState);\r\n\r\nexport default store;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ParagraphMock = ({ width, height = 22 }) => (\r\n  <div\r\n    className=\"paragraph-mock ui placeholder\"\r\n    style={{\r\n      width,\r\n      height,\r\n    }}\r\n  ></div>\r\n);\r\n\r\nParagraphMock.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport { Button, Icon, Transition } from \"semantic-ui-react\";\r\n\r\nimport { ParagraphMock } from \"../helpersComponents/Mocks\";\r\n\r\nconst NavigationBar = ({ className, data, actions }) => {\r\n  /**Play lil animation only single time */\r\n  const [showHelloLabel, setShowHelloLabel] = useState(false);\r\n  useEffect(() => {\r\n    setShowHelloLabel(true);\r\n  }, []);\r\n\r\n  const userName = data.userInfo.userName;\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <Transition\r\n          visible={showHelloLabel}\r\n          animation=\"slide up\"\r\n          duration={800}\r\n        >\r\n          <h3 style={{ marginBottom: \".2em\" }}>\r\n            May the force be with you,\r\n            <span className=\"ui teal\" style={{ fontSize: \"1.35rem\" }}>\r\n              &nbsp;\r\n              {userName ? userName : <ParagraphMock height={16} width={100} />}\r\n            </span>\r\n            !\r\n          </h3>\r\n        </Transition>\r\n      </div>\r\n      <div>\r\n        {/* <Button animated=\"vertical\">\r\n          <Button.Content visible>Setting</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"settings\" size=\"large\" />\r\n          </Button.Content>\r\n        </Button> */}\r\n        <Button\r\n          animated=\"vertical\"\r\n          as={Link}\r\n          to={RouteData.Login}\r\n          style={{ marginLeft: \"1.35em\" }}\r\n        >\r\n          <Button.Content visible>LogOut</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"log out\" size=\"large\" flipped=\"horizontally\" />\r\n          </Button.Content>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigationBar.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { userInfo } = state;\r\n  return {\r\n    data: {\r\n      userInfo,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {},\r\n  };\r\n};\r\n\r\nconst NavigationBarConnected = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavigationBar);\r\n\r\nconst NavigationBarComponent = (props) => <NavigationBarConnected {...props} />;\r\n\r\nexport default NavigationBarComponent;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport { getUserInfoFromCookie } from \"../../helpers\";\r\n\r\nimport {\r\n  setUserInfo as setUserInfoAction,\r\n  getAuthorizedOnlineUser as getAuthorizedOnlineUserAction,\r\n} from \"../../actions/userInfoActions\";\r\n\r\nimport { Divider } from \"semantic-ui-react\";\r\n\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nexport class Layout extends PureComponent {\r\n  componentDidMount() {\r\n    const { history, data, actions } = this.props;\r\n    if (!data.userInfo.userName) {\r\n      const getPath = () => history.location.pathname;\r\n      actions.getUserInfoDataFromStorages(() => {\r\n        if (getPath() !== RouteData.Login) history.push(RouteData.Login);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-container\">\r\n        <NavigationBar className=\"layout-container__navigation-bar\" />\r\n        <Divider fitted />\r\n        <div className=\"layout-container__content\"> {this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { userInfo } = state;\r\n  return {\r\n    data: {\r\n      userInfo,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      getUserInfoDataFromStorages: async (logout) => {\r\n        const { userName, offlineMode } = getUserInfoFromCookie();\r\n        dispatch(setUserInfoAction(userName, offlineMode));\r\n        if (!offlineMode) {\r\n          dispatch(getAuthorizedOnlineUserAction(logout));\r\n        }\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst LayoutComponent = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(Layout)\r\n);\r\n\r\nexport default LayoutComponent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nconst PageAreNotExist = () => (\r\n  <Segment\r\n    style={{\r\n      maxWidth: 680,\r\n      height: 200,\r\n      margin: \"3em auto 0\",\r\n      padding: \"3em\",\r\n    }}\r\n  >\r\n    <Header className=\"not-exist-label\" size=\"huge\">\r\n      Sorry, that page does not exist.\r\n    </Header>\r\n    <Divider />\r\n    <Grid centered columns={3}>\r\n      <Grid.Column>\r\n        <Button\r\n          color=\"blue\"\r\n          as={Link}\r\n          to={RouteData.Base}\r\n          style={{ marginTop: \".85em\", width: 125 }}\r\n        >\r\n          <Icon name=\"log out\" size=\"large\" flipped=\"horizontally\" />\r\n          Back to main\r\n        </Button>\r\n      </Grid.Column>\r\n    </Grid>\r\n  </Segment>\r\n);\r\n\r\nexport default PageAreNotExist;\r\n","import React from \"react\";\r\n\r\nexport default ({ children, fill, stroke, height, width, style, ...props }) => (\r\n  <svg\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    fill={fill}\r\n    stroke={stroke}\r\n    width={width}\r\n    height={height}\r\n    style={style}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nimport IconPattern from \"./IconPattern\";\r\n\r\nexport const DeathStarIcon = ({ height = 25, width = 25, ...props }) => {\r\n  return (\r\n    <IconPattern height={height} width={width} {...props} viewBox=\"0 0 540 500\">\r\n      <g xmlns=\"http://www.w3.org/2000/svg\" id=\"svg_3\">\r\n        <circle r=\"32\" cy=\"138.667\" cx=\"224\" />\r\n        <path\r\n          d=\"m437.333,245.333c5.896,0 10.667,-4.771 10.667,-10.667l0,-42.666l32,0c5.896,0\r\n          10.667,-4.771 10.667,-10.667l0,-42.667c0,-5.896 -4.771,-10.667\r\n          -10.667,-10.667l-53.333,0l0,-42.666l15.5,0c4.406,0 8.354,-2.708 9.948,\r\n          -6.823c1.594,-4.104 0.49,-8.771 -2.771,-11.729c-47.344,-43.062\r\n          -108.427,-66.781 -172.011,-66.781c-141.156,0 -256,114.844\r\n          -256,256s114.844,256 256,256c63.583,0 124.667,-23.719 172.01,\r\n          -66.781c3.26,-2.958 4.365,-7.625 2.771,-11.729c-1.594,-4.115\r\n          -5.542,-6.823 -9.948,-6.823l-15.5,0l0,-21.333l53.334,0c5.896,\r\n          0 10.667,-4.771 10.667,-10.667l0,-64c0,-5.896 -4.771,-10.667\r\n          -10.667,-10.667l-74.667,0l0,-53.333l-362.126,0c-0.161,-3.561\r\n          -0.54,-7.066 -0.54,-10.667s0.379,-7.105 0.54,-10.667l394.126,\r\n          0zm-96,-117.333l42.667,0c5.896,0 10.667,4.771 10.667,10.667c0,\r\n          5.896 -4.771,10.667 -10.667,10.667l-42.667,0c-5.896,0 -10.667,\r\n          -4.771 -10.667,-10.667c0.001,-5.896 4.772,-10.667 10.667,-10.667zm-117.333,\r\n          -64c41.167,0 74.667,33.5 74.667,74.667c0,41.167 -33.5,74.667\r\n          -74.667,74.667s-74.667,-33.5 -74.667,-74.667c0,-41.167 33.5,-74.667 74.667,\r\n          -74.667zm-128,64l21.333,0c5.896,0 10.667,4.771 10.667,10.667c0,5.896\r\n          -4.771,10.667 -10.667,10.667l-21.333,0c-5.896,0 -10.667,-4.771 -10.667,\r\n          -10.667c0,-5.896 4.771,-10.667 10.667,-10.667zm234.667,192l32,0c5.896,0\r\n          10.667,4.771 10.667,10.667c0,5.896 -4.771,10.667 -10.667,10.667l-32,0c-5.896,\r\n          0 -10.667,-4.771 -10.667,-10.667c0,-5.896 4.771,-10.667 10.667,-10.667zm-192,\r\n          64l-42.667,0c-5.896,0 -10.667,-4.771 -10.667,-10.667c0,-5.896 4.771,\r\n          -10.667 10.667,-10.667l42.667,0c5.896,0 10.667,4.771 10.667,10.667c-0.001,\r\n          5.896 -4.771,10.667 -10.667,10.667zm-53.334,-85.333l96,0c5.896,0 10.667,\r\n          4.771 10.667,10.667c0,5.896 -4.771,10.667 -10.667,10.667l-96,0c-5.896,\r\n          0 -10.667,-4.771 -10.667,-10.667c0.001,-5.896 4.772,-10.667 10.667,-10.667z\"\r\n        />\r\n      </g>\r\n    </IconPattern>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { Form, Button, Message } from \"semantic-ui-react\";\r\n\r\nconst SingInForm = ({\r\n  setVisible,\r\n  loginWithForm,\r\n  loginViaGoogleForm,\r\n  error,\r\n  removeErrorState\r\n}) => (\r\n  <Form className=\"firebase-singin-form\" widths=\"equal\">\r\n    <Form.Input\r\n      icon=\"at\"\r\n      iconPosition=\"left\"\r\n      label=\"Email\"\r\n      key=\"login-email\"\r\n      id=\"login-email\"\r\n      placeholder=\"Email\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n    <Form.Input\r\n      icon=\"lock\"\r\n      iconPosition=\"left\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      key=\"login-password\"\r\n      id=\"login-password\"\r\n      placeholder=\"Password\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n\r\n    <Button\r\n      content=\"Login via firebase\"\r\n      primary\r\n      style={{ marginTop: \"2em\", marginBottom: \"1.5em\" }}\r\n      onClick={async ({ target }) => {\r\n        const emailEl = document.querySelector(\"#login-email\");\r\n        const passwordEl = document.querySelector(\"#login-password\");\r\n        await loginWithForm((emailEl || {}).value, (passwordEl || {}).value);\r\n      }}\r\n    />\r\n    <Message style={{ margin: \"0 .7em\" }}>\r\n      First time here?&nbsp;\r\n      <Link to=\"#\" style={{ maginLeft: \".3em\" }} onClick={setVisible}>\r\n        Sing Up!\r\n      </Link>\r\n      &nbsp;or&nbsp;\r\n      <Button\r\n        icon=\"google\"\r\n        size=\"small\"\r\n        type=\"google-btn\"\r\n        onClick={loginViaGoogleForm}\r\n        style={{\r\n          display: \"inline-block\",\r\n          background: \"#4286f5\",\r\n          color: \"white\",\r\n        }}\r\n      />\r\n    </Message>\r\n  </Form>\r\n);\r\n\r\nSingInForm.propTypes = {\r\n  setVisible: PT.func.isRequired,\r\n  loginWithForm: PT.func.isRequired,\r\n  loginViaGoogleForm: PT.func.isRequired,\r\n  error: PT.bool.isRequired,\r\n  removeErrorState: PT.func.isRequired,\r\n};\r\n\r\nexport default SingInForm;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { Form, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst RegisterForm = ({ visible, setVisible, create, error, removeErrorState }) => (\r\n  <Form\r\n    className=\"firebase-register-form\"\r\n    widths=\"equal\"\r\n    onSubmit={async ({ target }) => {\r\n      const emailEl = target.querySelector(\"#create-email\");\r\n      const passwordEl = target.querySelector(\"#create-password\");\r\n      await create((emailEl || {}).value, (passwordEl || {}).value);\r\n    }}\r\n  >\r\n    <Icon\r\n      name={visible ? \"angle up\" : \"minus\"}\r\n      className=\"back-to-signin\"\r\n      size=\"large\"\r\n      title=\"Back to SignIn\"\r\n      onClick={setVisible}\r\n    />\r\n    <Form.Input\r\n      icon=\"at\"\r\n      iconPosition=\"left\"\r\n      label=\"Email\"\r\n      id=\"create-email\"\r\n      placeholder=\"Enter email\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n    <Form.Input\r\n      disabled\r\n      icon=\"user\"\r\n      iconPosition=\"left\"\r\n      label=\"Username\"\r\n      id=\"create-username\"\r\n      placeholder=\"Username\"\r\n      error={error}\r\n    />\r\n    <Form.Input\r\n      icon=\"lock\"\r\n      iconPosition=\"left\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      id=\"create-password\"\r\n      placeholder=\"Enter password\"\r\n      error={error}\r\n      onChange={removeErrorState}\r\n    />\r\n\r\n    <Button\r\n      content=\"Register\"\r\n      primary\r\n      style={{ marginTop: \"1.5em\", marginBottom: \"1em\" }}\r\n    />\r\n  </Form>\r\n);\r\n\r\nRegisterForm.propTypes = {\r\n  visible: PT.bool.isRequired,\r\n  setVisible: PT.func.isRequired,\r\n  create: PT.func.isRequired,\r\n  error: PT.bool.isRequired,\r\n  removeErrorState: PT.func.isRequired,\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { DeathStarIcon } from \"../helpersComponents/Icons\";\r\n\r\nimport { RouteData } from \"../../data\";\r\n\r\nimport {\r\n  setUserCookies,\r\n  deleteAllCookies,\r\n  createUserWithFirebase,\r\n  signInWithFormFirebase,\r\n  signInWithGoogleFirebase,\r\n  signOutFirebase,\r\n} from \"../../helpers\";\r\n\r\nimport {\r\n  clearUserInfo as clearUserInfoAction,\r\n  setUserInfo as setUserInfoAction,\r\n  getAuthorizedOnlineUser as getAuthorizedOnlineUserAction,\r\n} from \"../../actions/userInfoActions\";\r\n\r\nimport SingInForm from \"./SingInForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nfunction getCapitalizedEmailStart(email) {\r\n  const emailStart = (email.split(\"@\") || [])[0] || \"None\";\r\n  return emailStart.charAt(0).toUpperCase() + emailStart.slice(1);\r\n}\r\n\r\nconst AuthPage = ({ history, data, actions }) => {\r\n  useEffect(() => {\r\n    // on component mount only\r\n    actions.clearUserInfo();\r\n    deleteAllCookies();\r\n    signOutFirebase();\r\n  }, [actions]);\r\n\r\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [singInErrorState, setSingInErrorState] = useState(false);\r\n  const [registrationErrorState, setRegistrationErrorState] = useState(false);\r\n\r\n  const removeSingInErrorState = () => setSingInErrorState(false);\r\n  const removeRegistrationErrorState = () => setRegistrationErrorState(false);\r\n\r\n  const { authOffline, authOnline } = actions;\r\n\r\n  const getPath = () => history.location.pathname;\r\n  const logout = () => {\r\n    if (getPath() !== RouteData.Login) history.push(RouteData.Login);\r\n  };\r\n\r\n  async function createNewUser(email, password) {\r\n    setFormLoading(true);\r\n\r\n    const user = await createUserWithFirebase(email, password);\r\n    user.user.cutomDisplayName = getCapitalizedEmailStart(email);\r\n\r\n    setFormLoading(false);\r\n    if (user) {\r\n      authOnline(user, logout);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setRegistrationErrorState(true);\r\n    }\r\n  }\r\n  async function loginWithForm(email, password) {\r\n    setFormLoading(true);\r\n\r\n    const user = await signInWithFormFirebase(email, password);\r\n    user.user.cutomDisplayName = getCapitalizedEmailStart(email);\r\n\r\n    setFormLoading(false);\r\n    if (user) {\r\n      authOnline(user, logout);\r\n      history.push(RouteData.Base);\r\n    } else {\r\n      setSingInErrorState(true);\r\n    }\r\n  }\r\n  async function loginViaGoogleForm() {\r\n    setFormLoading(true);\r\n    const user = await signInWithGoogleFirebase();\r\n    setFormLoading(false);\r\n    if (user) {\r\n      authOnline(user, logout);\r\n      history.push(RouteData.Base);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"login-screen\">\r\n      <Segment>\r\n        {formLoading && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"huge\">\r\n              Loading...\r\n            </Loader>\r\n          </Dimmer>\r\n        )}\r\n        <Header as=\"h2\" icon className=\"login-header full-width\">\r\n          <DeathStarIcon width={45} height={45} />\r\n          <div>Star Wars API</div>\r\n          <Header.Subheader>\r\n            Test task to check react skill of mine.\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment className=\"login-form\" placeholder>\r\n          <Grid columns={2} relaxed=\"very\" stackable divided>\r\n            <Grid.Column\r\n              className={`firebase-auth-forms-column ${\r\n                showRegisterForm ? \"register\" : \"login\"\r\n              }`}\r\n            >\r\n              <SingInForm\r\n                visible={!showRegisterForm}\r\n                setVisible={() => {\r\n                  setShowRegisterForm(true);\r\n                }}\r\n                loginWithForm={loginWithForm}\r\n                loginViaGoogleForm={loginViaGoogleForm}\r\n                error={singInErrorState}\r\n                removeErrorState={removeSingInErrorState}\r\n              />\r\n              <Divider className=\"firebase-auth-form-divider\" />\r\n              <RegisterForm\r\n                visible={showRegisterForm}\r\n                setVisible={() => {\r\n                  setShowRegisterForm(false);\r\n                }}\r\n                create={createNewUser}\r\n                error={registrationErrorState}\r\n                removeErrorState={removeRegistrationErrorState}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign=\"middle\" className=\"offline-section\">\r\n              <Popup\r\n                content=\"All your changes will be stored in your browser.\"\r\n                trigger={\r\n                  <Button\r\n                    basic\r\n                    color=\"purple\"\r\n                    size=\"big\"\r\n                    className=\"offline-btn\"\r\n                    onClick={authOffline}\r\n                    as={Link}\r\n                    to={RouteData.Base}\r\n                  >\r\n                    <Icon.Group>\r\n                      <Icon name=\"wifi\" />\r\n                      <Icon corner name=\"x\" color=\"red\" />\r\n                    </Icon.Group>\r\n                    &nbsp; Enter offline\r\n                  </Button>\r\n                }\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Divider className=\"vertical-devider\" vertical>\r\n            Or\r\n          </Divider>\r\n        </Segment>\r\n      </Segment>\r\n      <div id=\"developer-signature\">\r\n        developed by\r\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Sinfulelf\">\r\n          &nbsp;Anton Nastolnyi\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    data: {},\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      clearUserInfo: () => {\r\n        dispatch(clearUserInfoAction());\r\n      },\r\n      authOffline: () => {\r\n        const userName = \"Anonymous\";\r\n        setUserCookies(JSON.stringify({ userName, offlineMode: true }));\r\n        dispatch(setUserInfoAction(userName, true));\r\n      },\r\n      authOnline: (user, logout) => {\r\n        const userName = user.user.displayName || user.user.cutomDisplayName;\r\n        setUserCookies(JSON.stringify({ userName, offlineMode: false }));\r\n        dispatch(setUserInfoAction(userName, false));\r\n        dispatch(getAuthorizedOnlineUserAction(logout));\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst AuthPageComponent = connect(mapStateToProps, mapDispatchToProps, null, {\r\n  pure: true,\r\n  areOwnPropsEqual: () => true,\r\n})(AuthPage);\r\n\r\nexport default withRouter((props) => <AuthPageComponent {...props} />);\r\n","import React, { useState } from \"react\";\r\nimport PT from \"prop-types\";\r\nimport { Input, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst HeaderFilterInputItem = ({ search }) => {\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const onChange = ({ target }) => {\r\n    setFilterValue(target.value);\r\n  };\r\n  const onButtonClick = () => {\r\n    search(filterValue);\r\n  };\r\n  return (\r\n    <Input\r\n      className=\"header-input\"\r\n      label={\r\n        <Button primary onClick={onButtonClick}>\r\n          Search\r\n        </Button>\r\n      }\r\n      onChange={onChange}\r\n      value={filterValue}\r\n      labelPosition=\"right\"\r\n      placeholder=\"Filter by name\"\r\n    />\r\n  );\r\n};\r\n\r\nHeaderFilterInputItem.propTypes = {\r\n  search: PT.func.isRequired,\r\n};\r\n\r\nexport const HeaderFilterInput = HeaderFilterInputItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst HeaderPaginationItem = ({ isFavorites, showFavoriteOnly }) => (\r\n  <Menu pointing secondary size=\"large\">\r\n    <Menu.Item\r\n      name=\"people\"\r\n      key=\"people\"\r\n      className=\"people-menu\"\r\n      active={!isFavorites}\r\n      onClick={() => {\r\n        showFavoriteOnly(false);\r\n      }}\r\n      style={{ margin: \"0 .5em -2px\" }}\r\n    >\r\n      <Icon name=\"users\" />\r\n      &#8201; People\r\n    </Menu.Item>\r\n    <Menu.Item\r\n      name=\"favorites\"\r\n      key=\"favorites\"\r\n      className=\"favorites-menu\"\r\n      active={isFavorites}\r\n      onClick={() => {\r\n        showFavoriteOnly(true);\r\n      }}\r\n      style={{ margin: \"0 .5em -2px\" }}\r\n    >\r\n      <Icon name=\"heart outline\" />\r\n      &#8201; Favorite\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nHeaderPaginationItem.propTypes = {\r\n  isFavorites: PT.bool.isRequired,\r\n  showFavoriteOnly: PT.func.isRequired,\r\n};\r\n\r\nexport const HeaderPagination = HeaderPaginationItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { PeoplePageDispaType } from \"../../models/dataModels\";\r\n\r\nimport { Form, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport { HeaderFilterInput } from \"./HeaderFilterInput\";\r\nimport { HeaderPagination } from \"./HeaderPagination\";\r\n\r\nconst Header = ({\r\n  pageName,\r\n  isFavorites,\r\n  showFavoriteOnly,\r\n  displayType,\r\n  setPeoplePagedisplayType,\r\n  search\r\n}) => {\r\n  return (\r\n    <div className={`page-header ${pageName}__header`}>\r\n      <Form className=\"header-toggle\">\r\n        <Form.Field>\r\n          <Checkbox\r\n            slider\r\n            label=\"Show cards\"\r\n            checked={displayType === PeoplePageDispaType.cards}\r\n            onChange={() => {\r\n              setPeoplePagedisplayType(\r\n                displayType === PeoplePageDispaType.cards\r\n                  ? PeoplePageDispaType.list\r\n                  : PeoplePageDispaType.cards\r\n              );\r\n            }}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n      <HeaderFilterInput search={search} />\r\n      <HeaderPagination\r\n        isFavorites={isFavorites}\r\n        showFavoriteOnly={showFavoriteOnly}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  isFavorites: PropTypes.bool.isRequired,\r\n  showFavoriteOnly: PropTypes.func.isRequired,\r\n  displayType: PropTypes.string.isRequired,\r\n  setPeoplePagedisplayType: PropTypes.func.isRequired,\r\n  search: PropTypes.func.isRequired\r\n};\r\n\r\nexport const PeoplePageHeader = Header;\r\n","import { PeoplePageDispaType } from \"../../models/dataModels\";\r\n\r\nexport const personCardConfig = {\r\n  stylesConfigs: {\r\n    [PeoplePageDispaType.list]: {\r\n      width: 235,\r\n      height: 35,\r\n      gap: 8,\r\n\r\n      userInfoMargin: 25,\r\n    },\r\n    [PeoplePageDispaType.cards]: {\r\n      width: 250,\r\n      height: 216,\r\n      horizontalGap: 12,\r\n      verticalGap: 14,\r\n    },\r\n  },\r\n  shouldRecalculateStyle(nextProps, prevState) {\r\n    const { displayType, index, wrapperWidth } = nextProps;\r\n    const { styleConditions } = prevState;\r\n\r\n    return (\r\n      displayType !== styleConditions.displayType ||\r\n      index !== styleConditions.index ||\r\n      (displayType === PeoplePageDispaType.cards &&\r\n        wrapperWidth !== styleConditions.wrapperWidth)\r\n    );\r\n  },\r\n\r\n  recalculateStyle(nextProps) {\r\n    const { displayType, index, wrapperWidth } = nextProps;\r\n    if (displayType === PeoplePageDispaType.list) {\r\n      const { width, height, gap } = this.stylesConfigs[\r\n        PeoplePageDispaType.list\r\n      ];\r\n      return {\r\n        top: (height + gap) * index,\r\n        left: 0,\r\n        width,\r\n        height,\r\n      };\r\n    } else {\r\n      const { width, height, horizontalGap, verticalGap } = this.stylesConfigs[\r\n        PeoplePageDispaType.cards\r\n      ];\r\n\r\n      const cardSpace = width + horizontalGap;\r\n\r\n      const itemsPreRow = Math.floor(wrapperWidth / cardSpace);\r\n      const rowUsableWidth = itemsPreRow * cardSpace;\r\n      const totalLeftWidth = index * cardSpace;\r\n      const row = Math.floor(totalLeftWidth / rowUsableWidth);\r\n\r\n      const top = row * (height + verticalGap);\r\n      const left = totalLeftWidth - row * rowUsableWidth;\r\n\r\n      return {\r\n        top: top,\r\n        left: left,\r\n        width,\r\n        height,\r\n        marginBottom: verticalGap,\r\n      };\r\n    }\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nconst HeroPropertyItem = ({ name, value = \"\" }) => (\r\n  <div className=\"property\">\r\n    {!!name && <h5 className=\"property-name\">{name}:</h5>}\r\n    <div className=\"property-content\">\r\n      <div style={{ paddingRight: \".3em\" }}>●</div>\r\n      <div className=\"ellipsis\">{value}</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nHeroPropertyItem.propTypes = {\r\n  name: PT.string,\r\n  value: PT.oneOfType([PT.string, PT.number, PT.element]),\r\n};\r\n\r\nexport const HeroProperty = HeroPropertyItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroInfoPropertiesItem = ({ item }) => (\r\n  <div className=\"full-space hero-info__properties\">\r\n    <HeroProperty\r\n      key=\"height\"\r\n      name=\"Height\"\r\n      value={item.loaded ? item.height : <ParagraphMock width={120} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"mass\"\r\n      name=\"Mass\"\r\n      value={item.loaded ? item.mass : <ParagraphMock width={70} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"hairColour\"\r\n      name=\"Hair color\"\r\n      value={item.loaded ? item.hairColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"skinColour\"\r\n      name=\"Skin color\"\r\n      value={item.loaded ? item.skinColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"eyeColour\"\r\n      name=\"Eye Color\"\r\n      value={item.loaded ? item.eyeColour : <ParagraphMock width={80} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"birthYear\"\r\n      name=\"Birth Year\"\r\n      value={item.loaded ? item.birthYear : <ParagraphMock width={70} />}\r\n    />\r\n    <HeroProperty\r\n      key=\"gender\"\r\n      name=\"Gender\"\r\n      value={item.loaded ? item.gender : <ParagraphMock width={75} />}\r\n    />\r\n  </div>\r\n);\r\n\r\nHeroInfoPropertiesItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  cardView: PT.bool,\r\n};\r\n\r\nexport const HeroInfoProperties = HeroInfoPropertiesItem;\r\n","import React from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroHomePropertyItem = ({ item, planets }) => {\r\n  const planet = planets[item.planet.id];\r\n  return (\r\n    <div className=\"full-space hero-info__home\">\r\n      <h3 className=\"title\">Home world</h3>\r\n      <HeroProperty\r\n        key=\"name\"\r\n        name=\"Name\"\r\n        value={\r\n          !!planet ? planet.name : <ParagraphMock width={110} />\r\n        }\r\n      />\r\n      <HeroProperty\r\n        key=\"population\"\r\n        name=\"Population\"\r\n        value={\r\n          !!planet ? (\r\n            planet.population\r\n          ) : (\r\n            <ParagraphMock width={120}  />\r\n          )\r\n        }\r\n      />\r\n      <HeroProperty\r\n        key=\"climate\"\r\n        name=\"Climate\"\r\n        value={\r\n          !!planet ? planet.climate : <ParagraphMock width={180}  />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroHomePropertyItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  planets: PT.object.isRequired,\r\n};\r\n\r\nexport const HeroHomeProperty = HeroHomePropertyItem;\r\n","import React, { useEffect } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { ParagraphMock } from \"../../helpersComponents/Mocks\";\r\n\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\nimport { HeroProperty } from \"./HeroProperty\";\r\n\r\nconst HeroFilmsPropertyItem = ({ item, films }) => {\r\n  return (\r\n    <div className=\"full-space hero-info__films\">\r\n      <h3 className=\"title\">Films</h3>\r\n      {item.films.map((x) => (\r\n        <HeroProperty\r\n          key={x.url}\r\n          value={\r\n            films[x.id] ? (\r\n              `${films[x.id].title} by ${films[x.id].releaseDate}`\r\n            ) : (\r\n              <ParagraphMock width={240}  />\r\n            )\r\n          }\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroFilmsPropertyItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  films: PT.object.isRequired,\r\n};\r\n\r\nexport const HeroFilmsProperty = HeroFilmsPropertyItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../../models/storeModels\";\r\nimport { HeroDetailsPropTypes } from \"../../../models/dataModels\";\r\n\r\nimport { Divider } from \"semantic-ui-react\";\r\n\r\nimport { HeroInfoProperties } from \"./HeroInfoProperties\";\r\nimport { HeroHomeProperty } from \"./HeroHomeProperty\";\r\nimport { HeroFilmsProperty } from \"./HeroFilmsProperty\";\r\n\r\nclass HeroInfoItem extends PureComponent {\r\n  async componentDidMount() {\r\n    await this.uploadHeroAdditionalData();\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    const { item, showFullInfo } = this.props;\r\n\r\n    if (\r\n      item.id !== prevProps.item.id ||\r\n      showFullInfo !== prevProps.showFullInfo ||\r\n      (!prevProps.item?.planet && item.planet) ||\r\n      (prevProps.item?.films && prevProps.item?.films.length !== item.films.length)\r\n    ) {\r\n      await this.uploadHeroAdditionalData();\r\n    }\r\n  }\r\n\r\n  uploadHeroAdditionalData = async () => {\r\n    const {\r\n      item,\r\n      getFilmData,\r\n      getPlanetData,\r\n      relationships,\r\n      showFullInfo,\r\n    } = this.props;\r\n    if (showFullInfo) {\r\n      if (item.planet && !(item.planet.id in relationships.planestsData)) {\r\n        await getPlanetData(item.planet.id);\r\n      }\r\n\r\n      for (let film of item.films) {\r\n        if (film && !(film.id in relationships.filmsData)) {\r\n          await getFilmData(film.id);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { item, relationships, showFullInfo = false } = this.props;\r\n\r\n    return (\r\n      <div className=\"hero-info\">\r\n        {!showFullInfo && <Divider style={{ marginTop: 0 }} />}\r\n        <HeroInfoProperties item={item} />\r\n        {!showFullInfo ? (\r\n          <div className=\"bottom-mask\"></div>\r\n        ) : (\r\n          <>\r\n            {!!item.planet && (\r\n              <>\r\n                <Divider />\r\n                <HeroHomeProperty\r\n                  item={item}\r\n                  planets={relationships.planestsData}\r\n                />\r\n              </>\r\n            )}\r\n            <Divider />\r\n            <HeroFilmsProperty item={item} films={relationships.filmsData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeroInfoItem.propTypes = {\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  relationships: PT.shape(RelationshipsStorePropTypes),\r\n  getFilmData: PT.func,\r\n  getPlanetData: PT.func,\r\n  showFullInfo: PT.bool,\r\n};\r\n\r\nexport const HeroInfo = HeroInfoItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PT from \"prop-types\";\r\n\r\nimport {\r\n  HeroDetailsPropTypes,\r\n  PeoplePageDispaType,\r\n} from \"../../models/dataModels\";\r\n\r\nimport { personCardConfig } from \"./personCardConfig\";\r\n\r\nimport { Header, Icon, Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nimport { HeroInfo } from \"./HeroInfo\";\r\n\r\nclass PersonCardItem extends PureComponent {\r\n  state = {\r\n    style: {},\r\n    styleConditions: {\r\n      displayType: \"\",\r\n      index: -1,\r\n      wrapperWidth: -1,\r\n    },\r\n    isActive: false,\r\n    heartIconFilled: false,\r\n  };\r\n\r\n  stylesConfigs = {\r\n    [PeoplePageDispaType.list]: {\r\n      width: 200,\r\n      height: 30,\r\n      gap: 5,\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (personCardConfig.shouldRecalculateStyle(nextProps, prevState)) {\r\n      return {\r\n        style: personCardConfig.recalculateStyle(nextProps),\r\n        styleConditions: {\r\n          displayType: nextProps.displayType,\r\n          index: nextProps.index,\r\n          wrapperWidth: nextProps.wrapperWidth,\r\n        },\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setCardActiveState = (state) => {\r\n    const { displayType } = this.props;\r\n    if (displayType === PeoplePageDispaType.list)\r\n      this.setState({\r\n        isActive: state,\r\n      });\r\n  };\r\n\r\n  setHeartIconFilled = (state) => {\r\n    this.setState({\r\n      heartIconFilled: state,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      item,\r\n      displayType,\r\n      toggleFavoriteHero,\r\n      favoriteHeroes,\r\n      observerIndex,\r\n      index,\r\n      setObservedItemIndex,\r\n    } = this.props;\r\n    const { style, isActive, heartIconFilled } = this.state;\r\n\r\n    const isFavorite = !!favoriteHeroes[item.id];\r\n    const isObserved = index === observerIndex;\r\n\r\n    return (\r\n      <div\r\n        className={`hero-card ${\r\n          isActive || (isObserved && displayType === PeoplePageDispaType.list)\r\n            ? \"active\"\r\n            : \"\"\r\n        } ${displayType}`}\r\n        style={style}\r\n        onClick={() => {\r\n          if (!isObserved && displayType === PeoplePageDispaType.list) {\r\n            setObservedItemIndex(index);\r\n          }\r\n        }}\r\n      >\r\n        {!item.loaded && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"small\" />\r\n          </Dimmer>\r\n        )}\r\n        <div className=\"hero-card__header\">\r\n          <Header\r\n            as=\"h3\"\r\n            title={item.name}\r\n            className=\"hero-name\"\r\n            onMouseUp={(_) => {\r\n              this.setCardActiveState(false);\r\n            }}\r\n            onMouseLeave={(_) => {\r\n              this.setCardActiveState(false);\r\n            }}\r\n            onMouseDown={(_) => {\r\n              this.setCardActiveState(true);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Header>\r\n          <Icon\r\n            name=\"heart\"\r\n            className={`favor-icon ${\r\n              isFavorite ? \"red\" : heartIconFilled ? \"pale-red\" : \"outline\"\r\n            }`}\r\n            onMouseEnter={(_) => this.setHeartIconFilled(true)}\r\n            onMouseLeave={(_) => this.setHeartIconFilled(false)}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              toggleFavoriteHero(item.id, item.name);\r\n            }}\r\n          />\r\n          {displayType === PeoplePageDispaType.list && isObserved && (\r\n            <Icon className=\"observer-caret\" name=\"caret right\" size=\"big\" />\r\n          )}\r\n        </div>\r\n        {displayType === PeoplePageDispaType.cards && (\r\n          <HeroInfo item={item} showFullInfo={false} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPersonCardItem.propTypes = {\r\n  wrapperWidth: PT.number.isRequired,\r\n  index: PT.number.isRequired,\r\n  displayType: PT.oneOf([PeoplePageDispaType.cards, PeoplePageDispaType.list])\r\n    .isRequired,\r\n  item: PT.shape(HeroDetailsPropTypes).isRequired,\r\n  favoriteHeroes: PT.object.isRequired,\r\n  toggleFavoriteHero: PT.func.isRequired,\r\n  observerIndex: PT.number.isRequired,\r\n  setObservedItemIndex: PT.func.isRequired,\r\n};\r\n\r\nexport const PersonCard = PersonCardItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { RelationshipsStorePropTypes } from \"../../models/storeModels\";\r\n\r\nimport {\r\n  HeroDetailsPropTypes,\r\n  PeoplePageDispaType,\r\n} from \"../../models/dataModels\";\r\n\r\nimport { personCardConfig } from \"./personCardConfig\";\r\n\r\nimport ReactResizeDetector from \"react-resize-detector\";\r\nimport { Dimmer, Loader, Segment, Transition } from \"semantic-ui-react\";\r\n\r\nimport { PersonCard } from \"./PersonCard\";\r\nimport { HeroInfo } from \"./HeroInfo\";\r\n\r\nclass Content extends PureComponent {\r\n  render() {\r\n    const {\r\n      pageName,\r\n      loading,\r\n      data,\r\n      displayType,\r\n      toggleFavoriteHero,\r\n      favoriteHeroes,\r\n      observerIndex,\r\n      setObservedItemIndex,\r\n      relationships,\r\n      getFilmData,\r\n      getPlanetData,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={`page-content ${pageName}__content`}\r\n        style={{\r\n          paddingTop: \"1.75em\",\r\n          paddingBottom: \"1.75em\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {loading && (\r\n          <Dimmer active inverted className=\"p-absolute\">\r\n            <Loader inverted size=\"huge\">\r\n              Loading\r\n            </Loader>\r\n          </Dimmer>\r\n        )}\r\n        {!loading && !data.length && <h2>No data to display.</h2>}\r\n        <ReactResizeDetector handleWidth>\r\n          {({ width }) => (\r\n            <div className=\"heroes-cards__wrapper\">\r\n              {data.map((item, index) => (\r\n                <PersonCard\r\n                  key={item.urlValue || index}\r\n                  wrapperWidth={width}\r\n                  index={index}\r\n                  displayType={displayType}\r\n                  item={item}\r\n                  favoriteHeroes={favoriteHeroes}\r\n                  toggleFavoriteHero={toggleFavoriteHero}\r\n                  observerIndex={observerIndex}\r\n                  setObservedItemIndex={setObservedItemIndex}\r\n                />\r\n              ))}\r\n              {!!data[observerIndex] && (\r\n                <Transition\r\n                  visible={displayType === PeoplePageDispaType.list}\r\n                  animation=\"scale\"\r\n                  duration={400}\r\n                >\r\n                  <div\r\n                    className=\"full-space\"\r\n                    style={{\r\n                      paddingLeft:\r\n                        personCardConfig.stylesConfigs[PeoplePageDispaType.list]\r\n                          .width +\r\n                        personCardConfig.stylesConfigs[PeoplePageDispaType.list]\r\n                          .userInfoMargin,\r\n                    }}\r\n                  >\r\n                    <Segment className=\"user-info\">\r\n                      <HeroInfo\r\n                        item={data[observerIndex]}\r\n                        relationships={relationships}\r\n                        getFilmData={getFilmData}\r\n                        getPlanetData={getPlanetData}\r\n                        showFullInfo={displayType === PeoplePageDispaType.list}\r\n                      />\r\n                    </Segment>\r\n                  </div>\r\n                </Transition>\r\n              )}\r\n            </div>\r\n          )}\r\n        </ReactResizeDetector>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  displayType: PropTypes.oneOf([\r\n    PeoplePageDispaType.cards,\r\n    PeoplePageDispaType.list,\r\n  ]).isRequired,\r\n  observerIndex: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.shape(HeroDetailsPropTypes)).isRequired,\r\n  favoriteHeroes: PropTypes.object.isRequired,\r\n  toggleFavoriteHero: PropTypes.func.isRequired,\r\n  setObservedItemIndex: PropTypes.func.isRequired,\r\n  relationships: PropTypes.shape(RelationshipsStorePropTypes).isRequired,\r\n  getFilmData: PropTypes.func.isRequired,\r\n  getPlanetData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const PeoplePageContent = Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Pagination } from \"semantic-ui-react\";\r\n\r\nconst Footer = ({\r\n  pageName,\r\n  activePage = 1,\r\n  totalPages,\r\n  onPageChange,\r\n  loading,\r\n}) => {\r\n  const paginationConfig = !totalPages\r\n    ? {\r\n        totalPages: 10,\r\n        disabled: true,\r\n      }\r\n    : {\r\n        activePage,\r\n        totalPages,\r\n        ellipsisItem: { className: \"disabled\", content: \"...\" },\r\n        async onPageChange(_, { activePage }) {\r\n          await onPageChange(activePage);\r\n        },\r\n        disabled: loading,\r\n      };\r\n  return (\r\n    <div className={`page-footer ${pageName}__footer`}>\r\n      <Pagination {...paginationConfig} firstItem={null} lastItem={null} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  pageName: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  activePage: PropTypes.string,\r\n  totalPages: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n\r\nexport const PeoplePageFooter = Footer;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { HeroDetails } from \"../../models/dataModels\";\r\n\r\nimport {\r\n  setPeoplePagedisplayType as setPeoplePagedisplayTypeAction,\r\n  getPeopleData as getPeopleDataAction,\r\n  clearPeopleData as clearPeopleDataAction,\r\n  toggleFavoritesHeroes as toggleFavoritesHeroesAction,\r\n  getFavoriteHeroes as getFavoriteHeroesAction,\r\n  setObservedItemIndex as setObservedItemIndexAction,\r\n  setPeoplePageFavoritesViewMode as setPeoplePageFavoritesViewModeAction,\r\n} from \"../../actions/peopleActions\";\r\n\r\nimport {\r\n  getFilmData as getFilmDataAction,\r\n  getPlanetData as getPlanetDataAction,\r\n} from \"../../actions/relationshipsActions\";\r\n\r\nimport { PeoplePageHeader } from \"./Header\";\r\nimport { PeoplePageContent } from \"./Content\";\r\nimport { PeoplePageFooter } from \"./Footer\";\r\n\r\nclass PeoplePage extends PureComponent {\r\n  pageName = \"people-page\";\r\n\r\n  async componentDidMount() {\r\n    const { data, actions } = this.props;\r\n    const { people, currentPage } = data.peopleData;\r\n    if (!people.length) {\r\n      await actions.getPeople(currentPage);\r\n      await actions.getFavoriteHeroes();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.actions.clearPeopleData();\r\n  }\r\n\r\n  getPaginationsItemsCount = () => {\r\n    const { totalPeopleCount, itemsPerPage } = this.props.data.peopleData;\r\n    return !!totalPeopleCount ? Math.ceil(totalPeopleCount / itemsPerPage) : 10;\r\n  };\r\n\r\n  onPaginationPageChange = async (page) => {\r\n    const { data, actions } = this.props;\r\n    if (data.peopleData.currentPage != page) {\r\n      await actions.getPeople(page, data.peopleData.filterName);\r\n    }\r\n  };\r\n\r\n  showFavoriteOnly = (state) => {\r\n    const { showFavoritesOnly } = this.props.data.peopleData;\r\n    if (showFavoritesOnly !== state) {\r\n      this.props.actions.setPeoplePageFavoritesViewMode(state);\r\n    }\r\n  };\r\n\r\n  filterByName = async (value) => {\r\n    const { data, actions } = this.props;\r\n    if (data.peopleData.filterName !== value) {\r\n      await actions.getPeople(1, value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, actions } = this.props;\r\n    const { peopleData, relationships, paginatedData } = data;\r\n    const {\r\n      setPeoplePagedisplayType,\r\n      toggleFavoriteHero,\r\n      setObservedItemIndex,\r\n      getFilmData,\r\n      getPlanetData,\r\n    } = actions;\r\n\r\n    const paginationsCount = this.getPaginationsItemsCount();\r\n    return (\r\n      <div className={`page-wrapper ${this.pageName}`}>\r\n        <PeoplePageHeader\r\n          pageName={this.pageName}\r\n          isFavorites={peopleData.showFavoritesOnly}\r\n          showFavoriteOnly={this.showFavoriteOnly}\r\n          displayType={peopleData.displayType}\r\n          setPeoplePagedisplayType={setPeoplePagedisplayType}\r\n          search={this.filterByName}\r\n        />\r\n        <PeoplePageContent\r\n          pageName={this.pageName}\r\n          loading={peopleData.loading}\r\n          isFavorites={peopleData.showFavoritesOnly}\r\n          displayType={peopleData.displayType}\r\n          data={paginatedData}\r\n          favoriteHeroes={peopleData.favoriteHeroes}\r\n          toggleFavoriteHero={toggleFavoriteHero}\r\n          observerIndex={peopleData.observerIndex}\r\n          setObservedItemIndex={setObservedItemIndex}\r\n          getFilmData={getFilmData}\r\n          getPlanetData={getPlanetData}\r\n          relationships={relationships}\r\n        />\r\n        <PeoplePageFooter\r\n          pageName={this.pageName}\r\n          loading={peopleData.loading}\r\n          activePage={peopleData.currentPage}\r\n          totalPages={paginationsCount}\r\n          onPageChange={this.onPaginationPageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { peopleData, relationships } = state;\r\n\r\n  const { people, currentPage, itemsPerPage } = peopleData;\r\n\r\n  //const paginatedData = people.filter((x) => x && x.fromPage === currentPage);\r\n\r\n  const paginatedData = people\r\n    .slice(itemsPerPage * (currentPage - 1), itemsPerPage * currentPage)\r\n    .filter((x) => typeof x !== \"undefined\")\r\n    .map((x) => x || new HeroDetails());\r\n\r\n  return {\r\n    data: {\r\n      peopleData,\r\n      relationships,\r\n      paginatedData,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: {\r\n      setPeoplePagedisplayType: (type) => {\r\n        dispatch(setPeoplePagedisplayTypeAction(type));\r\n      },\r\n      getPeople: async (page, search = \"\") => {\r\n        await dispatch(getPeopleDataAction(page, search));\r\n      },\r\n      clearPeopleData: () => {\r\n        dispatch(clearPeopleDataAction());\r\n      },\r\n      toggleFavoriteHero: (id, name) => {\r\n        dispatch(toggleFavoritesHeroesAction({[id]: name}));\r\n      },\r\n      getFavoriteHeroes: async () => {\r\n        await dispatch(getFavoriteHeroesAction());\r\n      },\r\n      setObservedItemIndex: (index) => {\r\n        dispatch(setObservedItemIndexAction(index));\r\n      },\r\n      setPeoplePageFavoritesViewMode: (state) => {\r\n        dispatch(setPeoplePageFavoritesViewModeAction(state));\r\n      },\r\n      getFilmData: async (id) => {\r\n        await dispatch(getFilmDataAction(id));\r\n      },\r\n      getPlanetData: async (id) => {\r\n        await dispatch(getPlanetDataAction(id));\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst PeoplePageComponent = connect(mapStateToProps, mapDispatchToProps, null, {\r\n  pure: true,\r\n  areOwnPropsEqual: (nextOwnProps, ownProps) => {\r\n    return nextOwnProps.location.pathname === ownProps.location.pathname;\r\n  },\r\n  areStatesEqual: (next, prev) => {\r\n    //update page only when peopleData change\r\n    return (\r\n      !!next.peopleData.timeStamp &&\r\n      next.peopleData.timeStamp === prev.peopleData.timeStamp &&\r\n      next.relationships.timeStamp === prev.relationships.timeStamp\r\n    );\r\n  },\r\n})(PeoplePage);\r\n\r\nexport default withRouter((props) => <PeoplePageComponent {...props} />);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router\";\r\nimport { Provider } from \"react-redux\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport \"./style/index.scss\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport { RouteData } from \"./data\";\r\n\r\nimport { checkCookiesOnExists } from \"./helpers\";\r\n\r\nimport Layout from \"./components/generaComponents/Layout\";\r\n\r\nimport PageAreNotExist from \"./components/InfoPages/PageAreNotExists\";\r\n\r\nimport AuthPage from \"./components/AuthorizePage\";\r\nimport PeopleListPage from \"./components/PeoplePage\";\r\n\r\ndotenv.config({ path: \"../\" });\r\n\r\nexport default class App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <Route exact path={RouteData.Login} component={AuthPage} />\r\n          <Layout>\r\n            <Switch>\r\n              <InnerRoute\r\n                exact\r\n                path={[RouteData.Base, RouteData.People]}\r\n                component={PeopleListPage}\r\n              />\r\n              <InnerRoute component={PageAreNotExist} />\r\n            </Switch>\r\n          </Layout>\r\n        </Switch>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst InnerRoute = ({ exact, path, component }) => {\r\n  return checkCookiesOnExists() ? (\r\n    <Route exact={exact} path={path} component={component} />\r\n  ) : (\r\n    <Redirect to={{ pathname: RouteData.Login }} />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={'/'}>\r\n    <App />\r\n  </HashRouter>,\r\n  rootElement);\r\n"],"sourceRoot":""}